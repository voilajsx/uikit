{"version":3,"file":"page.js","sources":["../src/components/layouts/page.tsx"],"sourcesContent":["/**\n * Page Layout - COMPOUND-ONLY with scheme for consistency\n * @module @voilajsx/uikit\n * @file src/components/layouts/page.tsx\n */\n\nimport * as React from 'react';\nimport { forwardRef, createContext, useContext } from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { Header, HeaderLogo, HeaderNav } from '@/components/sections/header';\nimport { Footer } from '@/components/sections/footer';\nimport { Container } from '@/components/sections/container';\nimport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport type { NavigationItem, Size, Tone } from '@/types';\n\n/**\n * PageLayout schemes - consistent with other layouts\n * default: Simple header + content + footer\n * sidebar: Header + content with sidebar + footer\n */\nexport type PageLayoutScheme = 'default' | 'sidebar';\n\n/**\n * Page context for sharing configuration across compound components\n */\nconst PageContext = createContext<{\n  scheme: PageLayoutScheme;\n  tone: Tone;\n  size: Size;\n}>({\n  scheme: 'default',\n  tone: 'brand',\n  size: 'xl',\n});\n\n/**\n * Page layout container variants\n */\nconst pageVariants = cva(\n  'min-h-screen flex flex-col',\n  {\n    variants: {\n      tone: {\n        clean: 'bg-background text-foreground',\n        subtle: 'bg-background text-foreground',\n        brand: 'bg-background text-foreground',\n        contrast: 'bg-zinc-900 text-zinc-100'\n      }\n    },\n    defaultVariants: {\n      tone: 'clean'\n    }\n  }\n);\n\n/**\n * PageLayout Root - Just a container with context\n */\nexport interface PageLayoutProps {\n  /** RECOMMENDED: Layout scheme for consistency (default: \"default\") */\n  scheme?: PageLayoutScheme;\n  /** RECOMMENDED: Visual styling tone (default: \"clean\") */\n  tone?: Tone;\n  /** OPTIONAL: Page size for child components (default: \"xl\") */\n  size?: Size;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n  /** REQUIRED: Page structure (Header, Content, Footer) */\n  children: React.ReactNode;\n}\n\n/**\n * PageLayout Root Component - COMPOUND-ONLY with scheme\n */\nconst PageLayoutRoot = forwardRef<HTMLDivElement, PageLayoutProps>(({\n  scheme = 'default',\n  tone = 'clean',\n  size = 'xl',\n  className,\n  children,\n}, ref) => {\n  return (\n    <PageContext.Provider value={{ scheme, tone, size }}>\n      <div\n        ref={ref}\n        className={cn(pageVariants({ tone }), className)}\n      >\n        {children}\n      </div>\n    </PageContext.Provider>\n  );\n});\n\nPageLayoutRoot.displayName = 'PageLayout';\n\n/**\n * PageLayout.Header - Header with page context\n */\nexport interface PageHeaderProps {\n  /** OPTIONAL: Header tone (inherits from PageLayout if not set) */\n  tone?: Tone;\n  /** OPTIONAL: Header size (inherits from PageLayout if not set) */\n  size?: Size;\n  /** OPTIONAL: Header positioning (default: \"sticky\") */\n  position?: 'sticky' | 'fixed' | 'relative';\n  /** OPTIONAL: Navigation items */\n  navigation?: NavigationItem[];\n  /** OPTIONAL: Current path for active states */\n  currentPath?: string;\n  /** OPTIONAL: Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  /** OPTIONAL: Logo component */\n  logo?: React.ReactNode;\n  /** OPTIONAL: Page title (used if no logo) */\n  title?: string;\n  /** OPTIONAL: Header actions (buttons, theme toggle, etc.) */\n  actions?: React.ReactNode;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n}\n\nconst PageHeader = forwardRef<HTMLElement, PageHeaderProps>(({\n  tone,\n  size,\n  position = 'sticky',\n  navigation = [],\n  currentPath = '',\n  onNavigate,\n  logo,\n  title,\n  actions,\n  className,\n}, ref) => {\n  const { tone: pageTone, size: pageSize } = usePage();\n  \n  return (\n    <Header\n      ref={ref}\n      tone={tone || pageTone}\n      size={size || pageSize}\n      position={position}\n      className={className}\n    >\n      {/* Logo */}\n      <HeaderLogo>\n        {logo || (title && (\n          <span className=\"text-xl font-bold\">{title}</span>\n        ))}\n      </HeaderLogo>\n\n      {/* Navigation */}\n      {navigation.length > 0 && (\n        <HeaderNav\n          navigation={navigation}\n          currentPath={currentPath}\n          onNavigate={onNavigate}\n        />\n      )}\n\n      {/* Actions */}\n      {actions && (\n        <div className=\"ml-auto flex items-center gap-2\">\n          {actions}\n        </div>\n      )}\n    </Header>\n  );\n});\n\nPageHeader.displayName = 'PageHeader';\n\n/**\n * PageLayout.Content - Content area with optional sidebar\n */\nexport interface PageContentProps {\n  /** OPTIONAL: Content tone (inherits from PageLayout if not set) */\n  tone?: Tone;\n  /** OPTIONAL: Content size (inherits from PageLayout if not set) */\n  size?: Size;\n  /** OPTIONAL: Sidebar position (default: \"none\") */\n  sidebar?: 'none' | 'left' | 'right';\n  /** OPTIONAL: Sidebar navigation items */\n  navigation?: NavigationItem[];\n  /** OPTIONAL: Custom sidebar content (overrides navigation) */\n  sidebarContent?: React.ReactNode;\n  /** OPTIONAL: Current path for active states */\n  currentPath?: string;\n  /** OPTIONAL: Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  /** OPTIONAL: Whether sidebar should be sticky */\n  sidebarPosition?: 'sticky' | 'fixed' | 'relative';\n  /** OPTIONAL: Breadcrumb items */\n  breadcrumbs?: { label: string; href?: string }[];\n  /** OPTIONAL: Breadcrumb navigation handler */\n  onBreadcrumbNavigate?: (href: string) => void;\n  /** OPTIONAL: Page title (shown above breadcrumbs) */\n  title?: string;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n  /** REQUIRED: Page content */\n  children: React.ReactNode;\n}\n\nconst PageContent = forwardRef<HTMLDivElement, PageContentProps>(({\n  tone,\n  size,\n  sidebar = 'none',\n  navigation = [],\n  sidebarContent,\n  currentPath = '',\n  onNavigate,\n  sidebarPosition = 'relative',\n  breadcrumbs = [],\n  onBreadcrumbNavigate,\n  title,\n  className,\n  children,\n}, ref) => {\n  const { scheme, tone: pageTone, size: pageSize } = usePage();\n  \n  // Auto-detect sidebar from scheme if not explicitly set\n  const finalSidebar = sidebar !== 'none' ? sidebar : (scheme === 'sidebar' ? 'left' : 'none');\n  \n  // Handle breadcrumb navigation\n  const handleBreadcrumbClick = (href: string) => {\n    if (onBreadcrumbNavigate) {\n      onBreadcrumbNavigate(href);\n    } else if (onNavigate) {\n      // Create a navigation item for the breadcrumb\n      const navItem: NavigationItem = {\n        key: href,\n        label: href,\n        href: href\n      };\n      onNavigate(href, navItem);\n    }\n  };\n\n  // Render breadcrumbs component using UI breadcrumb components\n  const renderBreadcrumbs = () => {\n    if (breadcrumbs.length === 0) return null;\n\n    return (\n      <div className=\"mb-6\">\n        <Breadcrumb>\n          <BreadcrumbList>\n            {breadcrumbs.map((crumb, index) => (\n              <React.Fragment key={index}>\n                <BreadcrumbItem>\n                  {crumb.href ? (\n                    <BreadcrumbLink\n                      asChild={!!(onBreadcrumbNavigate || onNavigate)}\n                      {...((onBreadcrumbNavigate || onNavigate) \n                        ? {\n                            onClick: (e: React.MouseEvent) => {\n                              e.preventDefault();\n                              handleBreadcrumbClick(crumb.href!);\n                            }\n                          }\n                        : { href: crumb.href }\n                      )}\n                    >\n                      {(onBreadcrumbNavigate || onNavigate) ? (\n                        <button type=\"button\">\n                          {crumb.label}\n                        </button>\n                      ) : (\n                        crumb.label\n                      )}\n                    </BreadcrumbLink>\n                  ) : (\n                    <BreadcrumbPage>{crumb.label}</BreadcrumbPage>\n                  )}\n                </BreadcrumbItem>\n                {index < breadcrumbs.length - 1 && <BreadcrumbSeparator />}\n              </React.Fragment>\n            ))}\n          </BreadcrumbList>\n        </Breadcrumb>\n      </div>\n    );\n  };\n\n  // Render page title\n  const renderTitle = () => {\n    if (!title) return null;\n    \n    return (\n      <h1 className=\"text-2xl sm:text-3xl font-bold text-foreground mb-4\">\n        {title}\n      </h1>\n    );\n  };\n\n  if (finalSidebar === 'none') {\n    // Simple content without sidebar\n    return (\n      <main \n        ref={ref}\n        className={cn('flex-1', className)}\n      >\n        <div className={cn(\n          'mx-auto',\n          (size || pageSize) === 'sm' && 'max-w-2xl px-4 py-6',\n          (size || pageSize) === 'md' && 'max-w-4xl px-4 sm:px-6 py-8',\n          (size || pageSize) === 'lg' && 'max-w-6xl px-4 sm:px-6 lg:px-8 py-8',\n          (size || pageSize) === 'xl' && 'max-w-7xl px-4 sm:px-6 lg:px-8 py-8',\n          (size || pageSize) === 'full' && 'max-w-full px-4 sm:px-6 lg:px-8 py-8'\n        )}>\n          {/* Page header section with title and breadcrumbs */}\n          {(title || breadcrumbs.length > 0) && (\n            <div className=\"mb-8\">\n              {renderBreadcrumbs()}\n              {renderTitle()}\n            </div>\n          )}\n          \n          {/* Main content */}\n          {children}\n        </div>\n      </main>\n    );\n  }\n\n  // Content with sidebar - use Container\n  return (\n    <div ref={ref} className={cn('flex-1', className)}>\n      <Container\n        sidebar={finalSidebar}\n        navigation={navigation}\n        sidebarContent={sidebarContent}\n        currentPath={currentPath}\n        onNavigate={onNavigate}\n        sidebarPosition={sidebarPosition}\n        tone={tone || pageTone}\n        size={size || pageSize}\n      >\n        {/* Page header section with title and breadcrumbs */}\n        {(title || breadcrumbs.length > 0) && (\n          <div className=\"mb-8\">\n            {renderBreadcrumbs()}\n            {renderTitle()}\n          </div>\n        )}\n        \n        {/* Main content */}\n        {children}\n      </Container>\n    </div>\n  );\n});\n\nPageContent.displayName = 'PageContent';\n\n/**\n * PageLayout.Footer - Footer with page context\n */\nexport interface PageFooterProps {\n  /** OPTIONAL: Footer tone (default: \"contrast\") */\n  tone?: Tone;\n  /** OPTIONAL: Footer size (inherits from PageLayout if not set) */\n  size?: Size;\n  /** OPTIONAL: Footer positioning (default: \"relative\") */\n  position?: 'sticky' | 'fixed' | 'relative';\n  /** OPTIONAL: Footer navigation items */\n  navigation?: NavigationItem[];\n  /** OPTIONAL: Current path for active states */\n  currentPath?: string;\n  /** OPTIONAL: Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  /** OPTIONAL: Copyright text */\n  copyright?: React.ReactNode;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n  /** OPTIONAL: Custom footer content */\n  children?: React.ReactNode;\n}\n\nconst PageFooter = forwardRef<HTMLElement, PageFooterProps>(({\n  tone,\n  size,\n  position = 'relative',\n  navigation = [],\n  currentPath = '',\n  onNavigate,\n  copyright,\n  className,\n  children,\n}, ref) => {\n  const { tone: pageTone, size: pageSize } = usePage();\n  \n  // Default footer tone is contrast for better visual separation\n  const footerTone = tone || (pageTone === 'brand' ? 'subtle' : pageTone);\n  \n  return (\n    <Footer\n      ref={ref}\n      tone={footerTone}\n      size={size || pageSize}\n      position={position}\n      className={className}\n    >\n      {children || (\n        <>\n          {/* Footer Navigation */}\n          {navigation.length > 0 && (\n            <div className=\"flex flex-wrap justify-center gap-6 py-4\">\n              {navigation.map((item) => (\n                <button\n                  key={item.key}\n                  onClick={() => {\n                    if (item.href && onNavigate) {\n                      onNavigate(item.href, item);\n                    } else if (item.onClick) {\n                      item.onClick();\n                    }\n                  }}\n                  className=\"text-sm text-muted-foreground hover:text-foreground transition-colors\"\n                >\n                  {item.label}\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* Copyright */}\n          {copyright && (\n            <div className=\"text-center py-4 border-t border-border\">\n              <p className=\"text-sm text-muted-foreground\">\n                {copyright}\n              </p>\n            </div>\n          )}\n        </>\n      )}\n    </Footer>\n  );\n});\n\nPageFooter.displayName = 'PageFooter';\n\n/**\n * Hook to access page configuration\n */\nconst usePage = () => {\n  const context = useContext(PageContext);\n  if (!context) {\n    throw new Error('usePage must be used within a PageLayout component');\n  }\n  return context;\n};\n\n/**\n * PageLayout - COMPOUND-ONLY Component\n */\nconst PageLayout = Object.assign(PageLayoutRoot, {\n  Header: PageHeader,\n  Content: PageContent,\n  Footer: PageFooter,\n});\n\n/**\n * Export COMPOUND-ONLY PageLayout\n */\nexport { \n  PageLayout,\n  PageHeader,\n  PageContent,\n  PageFooter,\n  usePage\n};\n\n/**\n * @llm-rule PageLayout Usage - COMPOUND-ONLY with scheme\n * \n * Basic website:\n * <PageLayout scheme=\"default\" tone=\"clean\" size=\"xl\">\n *   <PageLayout.Header navigation={nav} logo={<Logo />} />\n *   <PageLayout.Content>\n *     <YourContent />\n *   </PageLayout.Content>\n *   <PageLayout.Footer copyright=\"© 2024\" />\n * </PageLayout>\n * \n * Website with sidebar:\n * <PageLayout scheme=\"sidebar\">\n *   <PageLayout.Header navigation={nav} title=\"My Site\" />\n *   <PageLayout.Content navigation={docsNav}>\n *     <YourContent />\n *   </PageLayout.Content>\n *   <PageLayout.Footer navigation={footerNav} />\n * </PageLayout>\n * \n * Custom layout (override scheme):\n * <PageLayout scheme=\"default\" tone=\"brand\">\n *   <PageLayout.Header tone=\"brand\" navigation={nav} actions={<ThemeToggle />} />\n *   <PageLayout.Content sidebar=\"right\" sidebarContent={<CustomSidebar />}>\n *     <YourContent />\n *   </PageLayout.Content>\n *   <PageLayout.Footer tone=\"contrast\" navigation={legalNav} />\n * </PageLayout>\n * \n * With breadcrumbs and title:\n * <PageLayout scheme=\"default\" tone=\"clean\">\n *   <PageLayout.Header navigation={nav} logo={<Logo />} />\n *   <PageLayout.Content\n *     title=\"User Profile\"\n *     breadcrumbs={[\n *       { label: 'Home', href: '/' },\n *       { label: 'Users', href: '/users' },\n *       { label: 'John Doe' }\n *     ]}\n *     onBreadcrumbNavigate={(href) => navigate(href)}\n *   >\n *     <UserProfileContent />\n *   </PageLayout.Content>\n *   <PageLayout.Footer copyright=\"© 2024\" />\n * </PageLayout>\n */"],"names":["PageContext","createContext","pageVariants","cva","PageLayoutRoot","forwardRef","scheme","tone","size","className","children","ref","jsx","cn","PageHeader","position","navigation","currentPath","onNavigate","logo","title","actions","pageTone","pageSize","usePage","jsxs","Header","HeaderLogo","HeaderNav","PageContent","sidebar","sidebarContent","sidebarPosition","breadcrumbs","onBreadcrumbNavigate","finalSidebar","handleBreadcrumbClick","href","renderBreadcrumbs","Breadcrumb","BreadcrumbList","crumb","index","React","BreadcrumbItem","BreadcrumbLink","e","BreadcrumbPage","BreadcrumbSeparator","renderTitle","Container","PageFooter","copyright","Footer","Fragment","item","context","useContext","PageLayout"],"mappings":"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"}
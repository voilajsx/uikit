{"version":3,"file":"container.js","sources":["../src/components/sections/container.tsx"],"sourcesContent":["/**\n * Container component with FIXED sidebar layout - properly side-by-side\n * @module @voilajsx/uikit\n * @file src/components/sections/container.tsx\n */\n\nimport * as React from 'react';\nimport { forwardRef, useState, useEffect } from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { ChevronRight } from 'lucide-react';\nimport type { NavigationItem, Size } from '@/types';\n\n/**\n * Container variants - FIXED layout for proper side-by-side positioning\n */\nconst containerVariants = cva(\n  'w-full mx-auto bg-background text-foreground',\n  {\n    variants: {\n      layout: {\n        none: 'block',\n        'sidebar-left': 'block md:flex', // ✅ FIXED: Always flex for side-by-side\n        'sidebar-right': 'block md:flex', // ✅ FIXED: Always flex for side-by-side\n      },\n      size: {\n        sm: 'max-w-2xl',\n        md: 'max-w-4xl', \n        lg: 'max-w-6xl',\n        xl: 'max-w-7xl',\n        full: 'max-w-full',\n      },\n      position: {\n        sticky: 'relative',\n        fixed: 'relative',\n        relative: 'relative'\n      }\n    },\n    defaultVariants: {\n      layout: 'none',\n      size: 'xl',\n      position: 'relative'\n    },\n  }\n);\n\n/**\n * Sidebar variants - OPTIMIZED spacing and alignment\n */\nconst sidebarVariants = cva(\n  'flex-shrink-0 rounded-lg m-4 max-md:hidden', // ✅ OPTIMIZED: Added m-4 for consistent outer margin\n  {\n    variants: {\n      position: {\n        left: 'order-first',\n        right: 'order-last',\n      },\n      size: {\n        sm: 'w-48', // ✅ FIXED: Removed responsive prefixes for consistent width\n        md: 'w-56',\n        lg: 'w-64', \n        xl: 'w-64',\n        full: 'w-64',\n      },\n      sidebarPosition: {\n        sticky: 'sticky top-4 self-start max-h-[calc(100vh-2rem)] overflow-y-auto', // ✅ FIXED: Added self-start\n        fixed: 'sticky top-4 self-start max-h-[calc(100vh-2rem)] overflow-y-auto', // ✅ FIXED: Added self-start  \n        relative: 'self-start', // ✅ FIXED: Added self-start\n      },\n      tone: {\n        clean: 'bg-muted/10 border border-border/60 dark:bg-muted/20 dark:border-border/50',\n        subtle: 'bg-muted/50 border border-border/20 dark:bg-muted/60 dark:border-border/30',\n        brand: 'bg-primary/10 border border-primary/15 dark:bg-primary/15 dark:border-primary/20',\n        contrast: 'bg-muted/70 border border-border/50 dark:bg-muted/80 dark:border-border/60'\n      }\n    },\n    defaultVariants: {\n      position: 'left',\n      size: 'md',\n      sidebarPosition: 'relative',\n      tone: 'clean'\n    },\n  }\n);\n\n/**\n * Main content variants - OPTIMIZED for consistent padding and reduced gap\n */\nconst mainVariants = cva(\n  'flex-1 min-w-0 p-4', // ✅ OPTIMIZED: Constant p-4 padding, removed min-w-0 conflict\n  {\n    variants: {\n      size: {\n        sm: '', // ✅ OPTIMIZED: Removed size-based padding, using constant p-4\n        md: '',\n        lg: '',\n        xl: '',\n        full: '',\n      },\n      hasGap: {\n        true: '', // ✅ OPTIMIZED: Removed ml-6, using sidebar m-4 instead\n        false: ''\n      }\n    },\n    defaultVariants: {\n      size: 'md',\n      hasGap: false\n    },\n  }\n);\n\n/**\n * Size configuration for navigation\n */\nconst getSizeConfig = (size: Size = 'md') => {\n  const configs = {\n    sm: {\n      button: 'text-xs py-1.5 px-2 min-h-[28px]',\n      icon: 'h-3 w-3 mr-2 flex-shrink-0',\n      spacing: 'space-y-0.5',\n      showBadges: false,\n    },\n    md: {\n      button: 'text-sm py-2 px-3 min-h-[32px]',\n      icon: 'h-4 w-4 mr-2 flex-shrink-0',\n      spacing: 'space-y-1',\n      showBadges: true,\n    },\n    lg: {\n      button: 'text-sm py-2.5 px-4 min-h-[36px]',\n      icon: 'h-4 w-4 mr-3 flex-shrink-0',\n      spacing: 'space-y-1.5',\n      showBadges: true,\n    },\n    xl: {\n      button: 'text-sm py-2.5 px-4 min-h-[36px]',\n      icon: 'h-4 w-4 mr-3 flex-shrink-0',\n      spacing: 'space-y-1.5',\n      showBadges: true,\n    },\n    full: {\n      button: 'text-sm py-2.5 px-4 min-h-[36px]',\n      icon: 'h-4 w-4 mr-3 flex-shrink-0',\n      spacing: 'space-y-1.5',\n      showBadges: true,\n    },\n  };\n  \n  return configs[size] || configs.md;\n};\n\n/**\n * Navigation renderer props\n */\ninterface NavigationRendererProps {\n  navigation: NavigationItem[];\n  size: Size;\n  tone: 'clean' | 'subtle' | 'brand' | 'contrast';\n  currentPath?: string;\n  onNavigate?: (href: string, item: NavigationItem) => void;\n}\n\n/**\n * Navigation renderer component\n */\nfunction NavigationRenderer({ \n  navigation, \n  size = 'md',\n  tone,\n  currentPath = '',\n  onNavigate \n}: NavigationRendererProps) {\n  const [expandedItems, setExpandedItems] = useState(new Set<string>());\n  const config = getSizeConfig(size);\n\n  // Initialize with all expandable items open\n  useEffect(() => {\n    const expanded = new Set<string>();\n    \n    const addExpandableItems = (navItems: NavigationItem[]) => {\n      navItems.forEach((item) => {\n        if (item.items && item.items.length > 0) {\n          expanded.add(item.key);\n          addExpandableItems(item.items);\n        }\n      });\n    };\n    \n    addExpandableItems(navigation);\n    setExpandedItems(expanded);\n  }, [navigation]);\n\n  const toggleExpanded = (itemKey: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemKey)) {\n      newExpanded.delete(itemKey);\n    } else {\n      newExpanded.add(itemKey);\n    }\n    setExpandedItems(newExpanded);\n  };\n\n  const handleItemClick = (item: NavigationItem) => {\n    if (item.items && item.items.length > 0) {\n      toggleExpanded(item.key);\n    } else if (item.href && onNavigate) {\n      onNavigate(item.href, item);\n    } else if (item.onClick) {\n      item.onClick();\n    }\n  };\n\n  const renderNavItem = (item: NavigationItem, depth = 0): React.ReactNode => {\n    const hasSubItems = item.items && item.items.length > 0;\n    const isExpanded = expandedItems.has(item.key);\n    const isActive = item.href ? currentPath === item.href : item.isActive;\n\n    return (\n      <div key={item.key} className=\"w-full\">\n        <Button\n          variant=\"ghost\"\n          className={cn(\n            'w-full justify-start transition-all items-center cursor-pointer',\n            config.button,\n            depth > 0 && 'ml-4 w-[calc(100%-1rem)]',\n            // Tone-aware styling\n            tone === 'clean' && (isActive \n              ? 'bg-muted text-foreground shadow-sm' \n              : 'text-muted-foreground hover:text-foreground hover:bg-muted/50'),\n            tone === 'subtle' && (isActive \n              ? 'bg-background text-foreground shadow-sm' \n              : 'text-muted-foreground hover:text-foreground hover:bg-background/60'),\n            tone === 'brand' && (isActive \n              ? 'bg-primary/10 text-foreground shadow-sm' \n              : 'text-muted-foreground hover:text-foreground hover:bg-primary/5'),\n            tone === 'contrast' && (isActive \n              ? 'bg-muted text-foreground shadow-sm' \n              : 'text-muted-foreground hover:text-foreground hover:bg-muted/60'),\n            item.className\n          )}\n          onClick={() => handleItemClick(item)}\n        >\n          {item.icon && <item.icon className={config.icon} />}\n          <span className=\"flex-1 text-left truncate\">{item.label}</span>\n          \n          {item.badge && config.showBadges && (\n            <Badge variant=\"secondary\" className=\"text-xs ml-auto\">\n              {item.badge}\n            </Badge>\n          )}\n          \n          {hasSubItems && (\n            <ChevronRight \n              className={cn(\n                'h-4 w-4 ml-2 transition-transform duration-200 text-muted-foreground',\n                isExpanded && 'rotate-90'\n              )} \n            />\n          )}\n        </Button>\n        \n        {hasSubItems && isExpanded && item.items && (\n          <div className=\"mt-1 space-y-1\">\n            {item.items.map((subItem) =>\n              renderNavItem(subItem, depth + 1)\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <nav className={cn('w-full p-3', config.spacing)}>\n      {navigation.map((item) => renderNavItem(item))}\n    </nav>\n  );\n}\n\n/**\n * Container Sidebar props\n */\ninterface ContainerSidebarProps {\n  content?: React.ReactNode | NavigationItem[];\n  position?: 'left' | 'right';\n  size?: Size;\n  sidebarPosition?: 'sticky' | 'fixed' | 'relative';\n  tone?: 'clean' | 'subtle' | 'brand' | 'contrast';\n  currentPath?: string;\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\n/**\n * Container Sidebar component\n */\nconst ContainerSidebar = forwardRef<HTMLDivElement, ContainerSidebarProps>(({ \n  content,\n  position = 'left',\n  size = 'md',\n  sidebarPosition = 'relative',\n  tone = 'clean',\n  currentPath = '',\n  onNavigate,\n  className,\n  style,\n}, ref) => {\n  \n  if (!content) return null;\n\n  // Render content based on type\n  const renderContent = () => {\n    if (Array.isArray(content)) {\n      return (\n        <NavigationRenderer \n          navigation={content} \n          size={size}\n          tone={tone}\n          currentPath={currentPath}\n          onNavigate={onNavigate}\n        />\n      );\n    }\n    return <div className=\"p-3\">{content}</div>;\n  };\n\n  return (\n    <aside \n      ref={ref}\n      className={cn(\n        sidebarVariants({ position, size, sidebarPosition, tone }),\n        className\n      )}\n      style={style}\n    >\n      {renderContent()}\n    </aside>\n  );\n});\n\nContainerSidebar.displayName = 'ContainerSidebar';\n\n/**\n * Container Main props\n */\ninterface ContainerMainProps {\n  size?: Size;\n  children?: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\n/**\n * Container Main content area\n */\nconst ContainerMain = forwardRef<HTMLDivElement, ContainerMainProps>(({ \n  size = 'md',\n  children,\n  className,\n  style,\n}, ref) => (\n  <main \n    ref={ref}\n    className={cn(mainVariants({ size }), className)}\n    style={style}\n  >\n    {children}\n  </main>\n));\n\nContainerMain.displayName = 'ContainerMain';\n\n/**\n * Container component props with standardized system\n */\nexport interface ContainerProps {\n  /** Visual styling tone (applies to sidebar only) */\n  tone?: 'clean' | 'subtle' | 'brand' | 'contrast';\n  /** Container positioning */\n  position?: 'sticky' | 'fixed' | 'relative';\n  /** Sidebar position */\n  sidebar?: 'none' | 'left' | 'right';\n  /** Navigation items (takes priority over sidebarContent) */\n  navigation?: NavigationItem[];\n  /** Custom sidebar content (for JSX content) */\n  sidebarContent?: React.ReactNode;\n  /** Current path for active states */\n  currentPath?: string;\n  /** Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  /** Whether sidebar should be sticky */\n  sidebarPosition?: 'sticky' | 'fixed' | 'relative';\n  /** Container size */\n  size?: Size;\n  /** Container content */\n  children: React.ReactNode;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * Main Container component with FIXED layout\n */\nconst ContainerComponent = forwardRef<HTMLDivElement, ContainerProps>(({ \n  className,\n  style,\n  tone = 'clean',\n  position = 'relative',\n  sidebar = 'none',\n  navigation = [],\n  sidebarContent,\n  currentPath = '',\n  onNavigate,\n  sidebarPosition = 'relative',\n  size = 'xl',\n  children,\n}, ref) => {\n  \n  // Determine layout\n  const layout = sidebar === 'left' ? 'sidebar-left' : \n                sidebar === 'right' ? 'sidebar-right' : 'none';\n  \n  const hasSidebar = sidebar !== 'none' && (navigation.length > 0 || sidebarContent);\n\n  // Determine sidebar content: navigation takes priority\n  const finalSidebarContent = navigation.length > 0 ? navigation : sidebarContent;\n\n  // ✅ ADD: Flatten navigation for mobile dropdown\n  const flattenNavigation = (navItems: NavigationItem[], prefix = ''): Array<{key: string, label: string, item: NavigationItem}> => {\n    const flattened: Array<{key: string, label: string, item: NavigationItem}> = [];\n    \n    navItems.forEach((item) => {\n      const label = prefix ? `${prefix} > ${item.label}` : item.label;\n      \n      if (item.href || item.onClick) {\n        flattened.push({ key: item.key, label, item });\n      }\n      \n      if (item.items && item.items.length > 0) {\n        flattened.push(...flattenNavigation(item.items, label));\n      }\n    });\n    \n    return flattened;\n  };\n\n  // ✅ ADD: Mobile dropdown handler\n  const handleMobileNavigation = (key: string) => {\n    if (!Array.isArray(finalSidebarContent)) return;\n    \n    const flattenedNav = flattenNavigation(finalSidebarContent);\n    const selectedItem = flattenedNav.find(item => item.key === key);\n    \n    if (selectedItem && onNavigate) {\n      if (selectedItem.item.href) {\n        onNavigate(selectedItem.item.href, selectedItem.item);\n      } else if (selectedItem.item.onClick) {\n        selectedItem.item.onClick();\n      }\n    }\n  };\n\n  return (\n    <div \n      ref={ref}\n      className={cn(containerVariants({ layout, size, position }), className)}\n      style={style}\n    >\n      {/* Left Sidebar */}\n      {hasSidebar && sidebar === 'left' && (\n        <ContainerSidebar \n          content={finalSidebarContent}\n          position=\"left\"\n          size={size}\n          sidebarPosition={sidebarPosition}\n          tone={tone}\n          currentPath={currentPath}\n          onNavigate={onNavigate}\n        />\n      )}\n      \n      {/* Main Content with Mobile Dropdown */}\n      <ContainerMain size={size}>\n        {/* ✅ ADD: Mobile Navigation Dropdown */}\n        {hasSidebar && Array.isArray(finalSidebarContent) && (\n          <div className=\"md:hidden mb-4\">\n            <Select value={flattenNavigation(finalSidebarContent).find(item => item.item.href === currentPath)?.key} onValueChange={handleMobileNavigation}>\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Navigate to...\" />\n              </SelectTrigger>\n              <SelectContent>\n                {flattenNavigation(finalSidebarContent).map(({ key, label, item }) => (\n                  <SelectItem key={key} value={key}>\n                    <div className=\"flex items-center justify-between w-full\">\n                      <div className=\"flex items-center gap-2\">\n                        {item.icon && <item.icon className=\"h-4 w-4\" />}\n                        <span>{label}</span>\n                      </div>\n                      {item.badge && (\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {item.badge}\n                        </Badge>\n                      )}\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        )}\n        \n        {children}\n      </ContainerMain>\n      \n      {/* Right Sidebar */}\n      {hasSidebar && sidebar === 'right' && (\n        <ContainerSidebar \n          content={finalSidebarContent}\n          position=\"right\"\n          size={size}\n          sidebarPosition={sidebarPosition}\n          tone={tone}\n          currentPath={currentPath}\n          onNavigate={onNavigate}\n        />\n      )}\n    </div>\n  );\n});\n\nContainerComponent.displayName = 'Container';\n\n/**\n * Container with compound components\n */\nconst Container = Object.assign(ContainerComponent, {\n  Sidebar: ContainerSidebar,\n  Main: ContainerMain,\n});\n\n/**\n * Export Container with compound components and individual components\n */\nexport { Container, ContainerSidebar, ContainerMain };"],"names":["containerVariants","cva","sidebarVariants","mainVariants","getSizeConfig","size","configs","NavigationRenderer","navigation","tone","currentPath","onNavigate","expandedItems","setExpandedItems","useState","config","useEffect","expanded","addExpandableItems","navItems","item","toggleExpanded","itemKey","newExpanded","handleItemClick","renderNavItem","depth","hasSubItems","isExpanded","isActive","jsxs","Button","cn","jsx","Badge","ChevronRight","subItem","ContainerSidebar","forwardRef","content","position","sidebarPosition","className","style","ref","renderContent","ContainerMain","children","ContainerComponent","sidebar","sidebarContent","layout","hasSidebar","finalSidebarContent","flattenNavigation","prefix","flattened","label","handleMobileNavigation","key","selectedItem","Select","_a","SelectTrigger","SelectValue","SelectContent","SelectItem","Container"],"mappings":"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"}
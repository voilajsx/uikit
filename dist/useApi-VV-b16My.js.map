{"version":3,"file":"useApi-VV-b16My.js","sources":["../src/hooks/useApi.ts"],"sourcesContent":["/**\n * useApi Hook - Generic API client for fullstack applications\n * @description Provides a simple interface for making HTTP requests with error handling\n * @package @voilajsx/uikit\n */\n\nimport { useState, useCallback } from 'react';\n\nexport interface ApiResponse<T = any> {\n  data: T | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ApiOptions {\n  baseURL?: string;\n  timeout?: number;\n  headers?: Record<string, string>;\n}\n\nexport interface UseApiReturn<T = any> extends ApiResponse<T> {\n  call: (method: string, endpoint: string, data?: any) => Promise<T>;\n  get: (endpoint: string) => Promise<T>;\n  post: (endpoint: string, data?: any) => Promise<T>;\n  put: (endpoint: string, data?: any) => Promise<T>;\n  delete: (endpoint: string) => Promise<T>;\n  reset: () => void;\n}\n\n/**\n * Custom hook for making API requests\n */\nexport function useApi<T = any>(options: ApiOptions = {}): UseApiReturn<T> {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Auto-detect base URL (dev vs prod)\n  const baseURL = options.baseURL ||\n    (import.meta.env?.VITE_API_URL ||\n     (typeof window !== 'undefined' && window.location.hostname === 'localhost'\n       ? 'http://localhost:3000'\n       : ''));\n\n  const defaultHeaders = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n\n  const call = useCallback(async (\n    method: string,\n    endpoint: string,\n    data?: any\n  ): Promise<T> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), options.timeout || 10000);\n\n      const config: RequestInit = {\n        method: method.toUpperCase(),\n        headers: defaultHeaders,\n        signal: controller.signal,\n      };\n\n      if (data && ['POST', 'PUT', 'PATCH'].includes(method.toUpperCase())) {\n        config.body = JSON.stringify(data);\n      }\n\n      const url = `${baseURL}${endpoint}`;\n      const response = await fetch(url, config);\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      setData(result);\n      return result;\n\n    } catch (err: any) {\n      let errorMessage = 'Network error occurred';\n\n      if (err.name === 'AbortError') {\n        errorMessage = 'Request timeout';\n      } else if (err.message?.includes('fetch')) {\n        errorMessage = 'Backend not available - check if your API server is running';\n      } else {\n        errorMessage = err.message || 'Unknown error occurred';\n      }\n\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  }, [baseURL, options.timeout]);\n\n  // Convenience methods\n  const get = useCallback((endpoint: string) => call('GET', endpoint), [call]);\n  const post = useCallback((endpoint: string, data?: any) => call('POST', endpoint, data), [call]);\n  const put = useCallback((endpoint: string, data?: any) => call('PUT', endpoint, data), [call]);\n  const deleteMethod = useCallback((endpoint: string) => call('DELETE', endpoint), [call]);\n\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    setLoading(false);\n  }, []);\n\n  return {\n    data,\n    loading,\n    error,\n    call,\n    get,\n    post,\n    put,\n    delete: deleteMethod,\n    reset,\n  };\n}\n\n/**\n * Hook for checking backend connectivity\n */\nexport function useBackendStatus() {\n  const { data, loading, error, get } = useApi<{ status: string; timestamp: string }>();\n\n  const checkStatus = useCallback(async () => {\n    try {\n      await get('/health');\n      return true;\n    } catch {\n      return false;\n    }\n  }, [get]);\n\n  return {\n    isConnected: data?.status === 'ok',\n    loading,\n    error,\n    checkStatus,\n    lastCheck: data?.timestamp,\n  };\n}"],"names":["useApi","options","data","setData","useState","loading","setLoading","error","setError","baseURL","__vite_import_meta_env__","defaultHeaders","call","useCallback","method","endpoint","controller","timeoutId","config","url","response","result","err","errorMessage","get","post","put","deleteMethod","reset","useBackendStatus","checkStatus"],"mappings":"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"}
{"version":3,"file":"data-table.js","sources":["../node_modules/lucide-react/dist/esm/icons/arrow-down-wide-narrow.js","../node_modules/lucide-react/dist/esm/icons/arrow-up-down.js","../node_modules/lucide-react/dist/esm/icons/arrow-up-narrow-wide.js","../node_modules/lucide-react/dist/esm/icons/download.js","../node_modules/lucide-react/dist/esm/icons/filter.js","../node_modules/lucide-react/dist/esm/icons/refresh-cw.js","../src/components/ui/data-table.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowDownWideNarrow = createLucideIcon(\"ArrowDownWideNarrow\", [\n  [\"path\", { d: \"m3 16 4 4 4-4\", key: \"1co6wj\" }],\n  [\"path\", { d: \"M7 20V4\", key: \"1yoxec\" }],\n  [\"path\", { d: \"M11 4h10\", key: \"1w87gc\" }],\n  [\"path\", { d: \"M11 8h7\", key: \"djye34\" }],\n  [\"path\", { d: \"M11 12h4\", key: \"q8tih4\" }]\n]);\n\nexport { ArrowDownWideNarrow as default };\n//# sourceMappingURL=arrow-down-wide-narrow.js.map\n","/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowUpDown = createLucideIcon(\"ArrowUpDown\", [\n  [\"path\", { d: \"m21 16-4 4-4-4\", key: \"f6ql7i\" }],\n  [\"path\", { d: \"M17 20V4\", key: \"1ejh1v\" }],\n  [\"path\", { d: \"m3 8 4-4 4 4\", key: \"11wl7u\" }],\n  [\"path\", { d: \"M7 4v16\", key: \"1glfcx\" }]\n]);\n\nexport { ArrowUpDown as default };\n//# sourceMappingURL=arrow-up-down.js.map\n","/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowUpNarrowWide = createLucideIcon(\"ArrowUpNarrowWide\", [\n  [\"path\", { d: \"m3 8 4-4 4 4\", key: \"11wl7u\" }],\n  [\"path\", { d: \"M7 4v16\", key: \"1glfcx\" }],\n  [\"path\", { d: \"M11 12h4\", key: \"q8tih4\" }],\n  [\"path\", { d: \"M11 16h7\", key: \"uosisv\" }],\n  [\"path\", { d: \"M11 20h10\", key: \"jvxblo\" }]\n]);\n\nexport { ArrowUpNarrowWide as default };\n//# sourceMappingURL=arrow-up-narrow-wide.js.map\n","/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Download = createLucideIcon(\"Download\", [\n  [\"path\", { d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\", key: \"ih7n3h\" }],\n  [\"polyline\", { points: \"7 10 12 15 17 10\", key: \"2ggqvy\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"15\", y2: \"3\", key: \"1vk2je\" }]\n]);\n\nexport { Download as default };\n//# sourceMappingURL=download.js.map\n","/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\"polygon\", { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.js.map\n","/**\n * @license lucide-react v0.468.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RefreshCw = createLucideIcon(\"RefreshCw\", [\n  [\"path\", { d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\", key: \"v9h5vc\" }],\n  [\"path\", { d: \"M21 3v5h-5\", key: \"1q7to0\" }],\n  [\"path\", { d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\", key: \"3uifl3\" }],\n  [\"path\", { d: \"M8 16H3v5\", key: \"1cv678\" }]\n]);\n\nexport { RefreshCw as default };\n//# sourceMappingURL=refresh-cw.js.map\n","/**\n * Enhanced DataTable - Professional grade with virtual scrolling, advanced filtering\n * @module @voilajsx/uikit\n * @file src/components/ui/data-table-enhanced.tsx\n */\n\nimport * as React from 'react';\nimport { forwardRef, useState, useMemo, useCallback, useEffect } from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue \n} from '@/components/ui/select';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger\n} from '@/components/ui/dropdown-menu';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  ChevronDown, \n  ChevronUp, \n  Filter, \n  Search, \n  Download, \n  RefreshCw,\n  MoreHorizontal,\n  Eye,\n  Edit,\n  Trash2,\n  ArrowUpDown,\n  SortAsc,\n  SortDesc\n} from 'lucide-react';\n\n/**\n * Column definition with enhanced features\n */\nexport interface DataTableColumn<T = any> {\n  /** Unique column identifier */\n  id: string;\n  /** Column header text */\n  header: string;\n  /** Data accessor key or function */\n  accessorKey?: keyof T | string;\n  accessor?: (row: T) => any;\n  /** Cell renderer function */\n  cell?: (value: any, row: T, index: number) => React.ReactNode;\n  /** Column width (px or %) */\n  width?: string | number;\n  /** Minimum column width */\n  minWidth?: number;\n  /** Maximum column width */\n  maxWidth?: number;\n  /** Enable sorting */\n  sortable?: boolean;\n  /** Enable filtering */\n  filterable?: boolean;\n  /** Filter type */\n  filterType?: 'text' | 'select' | 'date' | 'number' | 'boolean';\n  /** Filter options for select type */\n  filterOptions?: Array<{ label: string; value: any }>;\n  /** Enable column resizing */\n  resizable?: boolean;\n  /** Hide column by default */\n  hidden?: boolean;\n  /** Pin column to left or right */\n  pinned?: 'left' | 'right';\n  /** Data type for sorting */\n  dataType?: 'string' | 'number' | 'date' | 'boolean';\n  /** Custom sort function */\n  sortFn?: (a: any, b: any) => number;\n  /** Column group */\n  group?: string;\n  /** Additional CSS classes */\n  className?: string;\n}\n\n/**\n * Sort configuration\n */\nexport interface SortConfig {\n  key: string;\n  direction: 'asc' | 'desc';\n}\n\n/**\n * Filter configuration\n */\nexport type FilterOperator = 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'gt' | 'lt' | 'gte' | 'lte';\n\nexport interface FilterConfig {\n  [key: string]: {\n    type: 'text' | 'select' | 'date' | 'number' | 'boolean';\n    value: any;\n    operator?: FilterOperator;\n  };\n}\n\n/**\n * Row action definition\n */\nexport interface RowAction<T = any> {\n  /** Action identifier */\n  id: string;\n  /** Action label */\n  label: string;\n  /** Action icon */\n  icon?: React.ComponentType<{ className?: string }>;\n  /** Action handler */\n  onClick: (row: T, index: number) => void;\n  /** Conditional visibility */\n  visible?: (row: T, index: number) => boolean;\n  /** Action variant */\n  variant?: 'default' | 'destructive' | 'secondary';\n  /** Confirmation required */\n  confirmation?: {\n    title: string;\n    description: string;\n  };\n}\n\n/**\n * DataTable component props\n */\nexport interface DataTableProps<T = any> {\n  /** Table data */\n  data: T[];\n  /** Column definitions */\n  columns: DataTableColumn<T>[];\n  /** Enable virtual scrolling for large datasets */\n  virtualized?: boolean;\n  /** Row height for virtualization */\n  rowHeight?: number;\n  /** Table height (triggers virtualization) */\n  height?: number | string;\n  /** Enable row selection */\n  selectable?: boolean;\n  /** Selection mode */\n  selectionMode?: 'single' | 'multiple';\n  /** Selected row keys */\n  selectedRows?: string[];\n  /** Selection change handler */\n  onSelectionChange?: (selectedKeys: string[]) => void;\n  /** Row key extractor */\n  getRowId?: (row: T, index: number) => string;\n  /** Enable sorting */\n  sortable?: boolean;\n  /** Current sort configuration */\n  sortConfig?: SortConfig[];\n  /** Sort change handler */\n  onSortChange?: (sortConfig: SortConfig[]) => void;\n  /** Enable filtering */\n  filterable?: boolean;\n  /** Current filter configuration */\n  filterConfig?: FilterConfig;\n  /** Filter change handler */\n  onFilterChange?: (filterConfig: FilterConfig) => void;\n  /** Enable search */\n  searchable?: boolean;\n  /** Search placeholder */\n  searchPlaceholder?: string;\n  /** Search value */\n  searchValue?: string;\n  /** Search change handler */\n  onSearchChange?: (value: string) => void;\n  /** Enable pagination */\n  pagination?: boolean;\n  /** Current page (0-indexed) */\n  currentPage?: number;\n  /** Page size */\n  pageSize?: number;\n  /** Total rows (for server-side pagination) */\n  totalRows?: number;\n  /** Page change handler */\n  onPageChange?: (page: number) => void;\n  /** Page size change handler */\n  onPageSizeChange?: (pageSize: number) => void;\n  /** Row actions */\n  actions?: RowAction<T>[];\n  /** Bulk actions */\n  bulkActions?: Array<{\n    id: string;\n    label: string;\n    icon?: React.ComponentType<{ className?: string }>;\n    onClick: (selectedRows: T[]) => void;\n    variant?: 'default' | 'destructive' | 'secondary';\n  }>;\n  /** Enable row expansion */\n  expandable?: boolean;\n  /** Expanded rows */\n  expandedRows?: string[];\n  /** Expand change handler */\n  onExpandChange?: (expandedKeys: string[]) => void;\n  /** Row expansion renderer */\n  renderExpanded?: (row: T, index: number) => React.ReactNode;\n  /** Loading state */\n  loading?: boolean;\n  /** Empty state */\n  emptyState?: React.ReactNode;\n  /** Error state */\n  error?: string | React.ReactNode;\n  /** Enable export */\n  exportable?: boolean;\n  /** Export formats */\n  exportFormats?: Array<'csv' | 'json' | 'excel'>;\n  /** Export handler */\n  onExport?: (format: string, data: T[]) => void;\n  /** Table size variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** Table density */\n  density?: 'compact' | 'normal' | 'comfortable';\n  /** Striped rows */\n  striped?: boolean;\n  /** Border style */\n  bordered?: boolean;\n  /** Hover effect */\n  hoverable?: boolean;\n  /** Additional CSS classes */\n  className?: string;\n  /** Custom styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * Table variants\n */\nconst tableVariants = cva(\n  'w-full border-collapse',\n  {\n    variants: {\n      size: {\n        sm: 'text-xs',\n        md: 'text-sm',\n        lg: 'text-base'\n      },\n      bordered: {\n        true: 'border border-border',\n        false: ''\n      }\n    },\n    defaultVariants: {\n      size: 'md',\n      bordered: true\n    }\n  }\n);\n\nconst cellVariants = cva(\n  'text-left border-b border-border transition-colors',\n  {\n    variants: {\n      density: {\n        compact: 'px-2 py-1',\n        normal: 'px-3 py-2',\n        comfortable: 'px-4 py-3'\n      },\n      pinned: {\n        left: 'sticky left-0 z-10 bg-background',\n        right: 'sticky right-0 z-10 bg-background',\n        none: ''\n      }\n    },\n    defaultVariants: {\n      density: 'normal',\n      pinned: 'none'\n    }\n  }\n);\n\n/**\n * Enhanced DataTable component\n */\nconst DataTable = forwardRef<HTMLTableElement, DataTableProps>(({\n  data = [],\n  columns = [],\n  virtualized = false,\n  rowHeight = 40,\n  height,\n  selectable = false,\n  selectionMode = 'multiple',\n  selectedRows = [],\n  onSelectionChange,\n  getRowId = (row, index) => index.toString(),\n  sortable = true,\n  sortConfig = [],\n  onSortChange,\n  filterable = true,\n  filterConfig = {},\n  onFilterChange,\n  searchable = true,\n  searchPlaceholder = 'Search...',\n  searchValue = '',\n  onSearchChange,\n  pagination = true,\n  currentPage = 0,\n  pageSize = 10,\n  totalRows,\n  onPageChange,\n  onPageSizeChange,\n  actions = [],\n  bulkActions = [],\n  expandable = false,\n  expandedRows = [],\n  onExpandChange,\n  renderExpanded,\n  loading = false,\n  emptyState,\n  error,\n  exportable = false,\n  exportFormats = ['csv', 'json'],\n  onExport,\n  size = 'md',\n  density = 'normal',\n  striped = false,\n  bordered = true,\n  hoverable = true,\n  className,\n  style,\n}, ref) => {\n\n  // Internal state\n  const [internalSort, setInternalSort] = useState<SortConfig[]>(sortConfig);\n  const [internalFilters, setInternalFilters] = useState<FilterConfig>(filterConfig);\n  const [internalSearch, setInternalSearch] = useState(searchValue);\n  const [internalSelection, setInternalSelection] = useState<string[]>(selectedRows);\n\n  // Compute visible columns\n  const visibleColumns = useMemo(() => \n    columns.filter(col => !col.hidden),\n    [columns]\n  );\n\n  // Handle sorting\n  const handleSort = useCallback((columnId: string) => {\n    if (!sortable) return;\n\n    const column = columns.find(col => col.id === columnId);\n    if (!column?.sortable) return;\n\n    const newSort = [...internalSort];\n    const existingIndex = newSort.findIndex(s => s.key === columnId);\n\n    if (existingIndex >= 0) {\n      if (newSort[existingIndex].direction === 'asc') {\n        newSort[existingIndex].direction = 'desc';\n      } else {\n        newSort.splice(existingIndex, 1);\n      }\n    } else {\n      newSort.push({ key: columnId, direction: 'asc' });\n    }\n\n    setInternalSort(newSort);\n    onSortChange?.(newSort);\n  }, [sortable, columns, internalSort, onSortChange]);\n\n  // Handle filtering\n  const handleFilter = useCallback((columnId: string, value: any, operator: FilterOperator = 'contains') => {\n    const newFilters = { ...internalFilters };\n    \n    if (value === '' || value == null) {\n      delete newFilters[columnId];\n    } else {\n      const column = columns.find(col => col.id === columnId);\n      newFilters[columnId] = {\n        type: column?.filterType || 'text',\n        value,\n        operator\n      };\n    }\n\n    setInternalFilters(newFilters);\n    onFilterChange?.(newFilters);\n  }, [columns, internalFilters, onFilterChange]);\n\n  // Handle selection\n  const handleSelectAll = useCallback((checked: boolean) => {\n    if (!selectable) return;\n\n    const newSelection = checked \n      ? data.map((row, index) => getRowId(row, index))\n      : [];\n\n    setInternalSelection(newSelection);\n    onSelectionChange?.(newSelection);\n  }, [selectable, data, getRowId, onSelectionChange]);\n\n  const handleSelectRow = useCallback((rowId: string, checked: boolean) => {\n    if (!selectable) return;\n\n    let newSelection = [...internalSelection];\n    \n    if (selectionMode === 'single') {\n      newSelection = checked ? [rowId] : [];\n    } else {\n      if (checked) {\n        newSelection.push(rowId);\n      } else {\n        newSelection = newSelection.filter(id => id !== rowId);\n      }\n    }\n\n    setInternalSelection(newSelection);\n    onSelectionChange?.(newSelection);\n  }, [selectable, selectionMode, internalSelection, onSelectionChange]);\n\n  // Filter and sort data\n  const processedData = useMemo(() => {\n    let result = [...data];\n\n    // Apply search\n    if (internalSearch) {\n      result = result.filter(row => {\n        return visibleColumns.some(column => {\n          const value = column.accessor \n            ? column.accessor(row)\n            : column.accessorKey \n              ? (row as any)[column.accessorKey]\n              : '';\n          return String(value).toLowerCase().includes(internalSearch.toLowerCase());\n        });\n      });\n    }\n\n    // Apply filters\n    Object.entries(internalFilters).forEach(([columnId, filter]) => {\n      const column = columns.find(col => col.id === columnId);\n      if (!column) return;\n\n      result = result.filter(row => {\n        const value = column.accessor \n          ? column.accessor(row)\n          : column.accessorKey \n            ? (row as any)[column.accessorKey]\n            : '';\n\n        switch (filter.operator) {\n          case 'equals':\n            return value === filter.value;\n          case 'contains':\n            return String(value).toLowerCase().includes(String(filter.value).toLowerCase());\n          case 'startsWith':\n            return String(value).toLowerCase().startsWith(String(filter.value).toLowerCase());\n          case 'endsWith':\n            return String(value).toLowerCase().endsWith(String(filter.value).toLowerCase());\n          case 'gt':\n            return Number(value) > Number(filter.value);\n          case 'lt':\n            return Number(value) < Number(filter.value);\n          case 'gte':\n            return Number(value) >= Number(filter.value);\n          case 'lte':\n            return Number(value) <= Number(filter.value);\n          default:\n            return String(value).toLowerCase().includes(String(filter.value).toLowerCase());\n        }\n      });\n    });\n\n    // Apply sorting\n    if (internalSort.length > 0) {\n      result.sort((a, b) => {\n        for (const sort of internalSort) {\n          const column = columns.find(col => col.id === sort.key);\n          if (!column) continue;\n\n          const aValue = column.accessor \n            ? column.accessor(a)\n            : column.accessorKey \n              ? (a as any)[column.accessorKey]\n              : '';\n          \n          const bValue = column.accessor \n            ? column.accessor(b)\n            : column.accessorKey \n              ? (b as any)[column.accessorKey]\n              : '';\n\n          let comparison = 0;\n\n          if (column.sortFn) {\n            comparison = column.sortFn(aValue, bValue);\n          } else {\n            switch (column.dataType) {\n              case 'number':\n                comparison = Number(aValue) - Number(bValue);\n                break;\n              case 'date':\n                comparison = new Date(aValue).getTime() - new Date(bValue).getTime();\n                break;\n              case 'boolean':\n                comparison = (aValue ? 1 : 0) - (bValue ? 1 : 0);\n                break;\n              default:\n                comparison = String(aValue).localeCompare(String(bValue));\n            }\n          }\n\n          if (comparison !== 0) {\n            return sort.direction === 'asc' ? comparison : -comparison;\n          }\n        }\n        return 0;\n      });\n    }\n\n    return result;\n  }, [data, internalSearch, internalFilters, internalSort, columns, visibleColumns]);\n\n  // Pagination\n  const paginatedData = useMemo(() => {\n    if (!pagination) return processedData;\n    \n    const start = currentPage * pageSize;\n    const end = start + pageSize;\n    return processedData.slice(start, end);\n  }, [processedData, pagination, currentPage, pageSize]);\n\n  const totalPages = Math.ceil((totalRows || processedData.length) / pageSize);\n\n  // Render column header\n  const renderColumnHeader = (column: DataTableColumn) => {\n    const sortState = internalSort.find(s => s.key === column.id);\n    const isSorted = !!sortState;\n    const sortDirection = sortState?.direction;\n\n    return (\n      <th\n        key={column.id}\n        className={cn(\n          cellVariants({ \n            density, \n            pinned: column.pinned || 'none' \n          }),\n          'bg-muted/50 font-medium text-muted-foreground',\n          column.sortable && 'cursor-pointer hover:bg-muted',\n          column.className\n        )}\n        style={{ \n          width: column.width,\n          minWidth: column.minWidth,\n          maxWidth: column.maxWidth \n        }}\n        onClick={() => column.sortable && handleSort(column.id)}\n      >\n        <div className=\"flex items-center gap-2\">\n          <span>{column.header}</span>\n          {column.sortable && (\n            <div className=\"flex flex-col\">\n              {!isSorted && <ArrowUpDown className=\"h-3 w-3\" />}\n              {isSorted && sortDirection === 'asc' && <SortAsc className=\"h-3 w-3\" />}\n              {isSorted && sortDirection === 'desc' && <SortDesc className=\"h-3 w-3\" />}\n            </div>\n          )}\n          {column.filterable && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"h-6 w-6 p-0\"\n              onClick={(e) => {\n                e.stopPropagation();\n                // Filter dropdown logic here\n              }}\n            >\n              <Filter className=\"h-3 w-3\" />\n            </Button>\n          )}\n        </div>\n      </th>\n    );\n  };\n\n  // Render table row\n  const renderRow = (row: any, index: number) => {\n    const rowId = getRowId(row, index);\n    const isSelected = internalSelection.includes(rowId);\n    const isExpanded = expandedRows.includes(rowId);\n\n    return (\n      <React.Fragment key={rowId}>\n        <tr\n          className={cn(\n            'transition-colors',\n            hoverable && 'hover:bg-muted/50',\n            striped && index % 2 === 0 && 'bg-muted/20',\n            isSelected && 'bg-primary/10'\n          )}\n        >\n          {selectable && (\n            <td className={cn(cellVariants({ density }))}>\n              <Checkbox\n                checked={isSelected}\n                onCheckedChange={(checked) => \n                  handleSelectRow(rowId, checked as boolean)\n                }\n              />\n            </td>\n          )}\n          \n          {visibleColumns.map((column) => {\n            const value = column.accessor \n              ? column.accessor(row)\n              : column.accessorKey \n                ? row[column.accessorKey]\n                : '';\n\n            return (\n              <td\n                key={column.id}\n                className={cn(\n                  cellVariants({ \n                    density, \n                    pinned: column.pinned || 'none' \n                  }),\n                  column.className\n                )}\n                style={{ \n                  width: column.width,\n                  minWidth: column.minWidth,\n                  maxWidth: column.maxWidth \n                }}\n              >\n                {column.cell ? column.cell(value, row, index) : String(value)}\n              </td>\n            );\n          })}\n\n          {actions.length > 0 && (\n            <td className={cn(cellVariants({ density }))}>\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" size=\"sm\">\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  {actions\n                    .filter(action => !action.visible || action.visible(row, index))\n                    .map((action) => (\n                      <DropdownMenuItem\n                        key={action.id}\n                        onClick={() => action.onClick(row, index)}\n                        className={cn(\n                          action.variant === 'destructive' && 'text-destructive'\n                        )}\n                      >\n                        {action.icon && <action.icon className=\"h-4 w-4 mr-2\" />}\n                        {action.label}\n                      </DropdownMenuItem>\n                    ))\n                  }\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </td>\n          )}\n        </tr>\n\n        {expandable && isExpanded && renderExpanded && (\n          <tr>\n            <td colSpan={visibleColumns.length + (selectable ? 1 : 0) + (actions.length > 0 ? 1 : 0)}>\n              {renderExpanded(row, index)}\n            </td>\n          </tr>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className={cn('space-y-4', className)} style={style}>\n      {/* Toolbar */}\n      <div className=\"flex items-center justify-between gap-4\">\n        <div className=\"flex items-center gap-2\">\n          {searchable && (\n            <div className=\"relative\">\n              <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder={searchPlaceholder}\n                value={internalSearch}\n                onChange={(e) => {\n                  setInternalSearch(e.target.value);\n                  onSearchChange?.(e.target.value);\n                }}\n                className=\"pl-8 w-64\"\n              />\n            </div>\n          )}\n\n          {bulkActions.length > 0 && internalSelection.length > 0 && (\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"secondary\">\n                {internalSelection.length} selected\n              </Badge>\n              {bulkActions.map((action) => (\n                <Button\n                  key={action.id}\n                  variant={action.variant || 'default'}\n                  size=\"sm\"\n                  onClick={() => {\n                    const selectedData = data.filter((row, index) => \n                      internalSelection.includes(getRowId(row, index))\n                    );\n                    action.onClick(selectedData);\n                  }}\n                >\n                  {action.icon && <action.icon className=\"h-4 w-4 mr-2\" />}\n                  {action.label}\n                </Button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {exportable && (\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent>\n                {exportFormats.map((format) => (\n                  <DropdownMenuItem\n                    key={format}\n                    onClick={() => onExport?.(format, processedData)}\n                  >\n                    Export as {format.toUpperCase()}\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          )}\n\n          <Button variant=\"outline\" size=\"sm\" onClick={() => window.location.reload()}>\n            <RefreshCw className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div \n        className=\"border border-border rounded-lg overflow-auto\"\n        style={{ height }}\n      >\n        <table\n          ref={ref}\n          className={cn(tableVariants({ size, bordered }))}\n        >\n          <thead>\n            <tr>\n              {selectable && (\n                <th className={cn(cellVariants({ density }), 'bg-muted/50')}>\n                  {selectionMode === 'multiple' && (\n                    <Checkbox\n                      checked={internalSelection.length === data.length && data.length > 0}\n                      // Note: indeterminate styling handled via CSS classes since Checkbox doesn't support indeterminate prop\n                      className={cn(\n                        internalSelection.length > 0 && internalSelection.length < data.length && \n                        'data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground [&>svg]:opacity-50'\n                      )}\n                      onCheckedChange={handleSelectAll}\n                    />\n                  )}\n                </th>\n              )}\n              {visibleColumns.map(renderColumnHeader)}\n              {actions.length > 0 && (\n                <th className={cn(cellVariants({ density }), 'bg-muted/50 w-16')}>\n                  Actions\n                </th>\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {loading ? (\n              <tr>\n                <td \n                  colSpan={visibleColumns.length + (selectable ? 1 : 0) + (actions.length > 0 ? 1 : 0)}\n                  className=\"text-center py-8\"\n                >\n                  <div className=\"flex items-center justify-center gap-2\">\n                    <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                    Loading...\n                  </div>\n                </td>\n              </tr>\n            ) : error ? (\n              <tr>\n                <td \n                  colSpan={visibleColumns.length + (selectable ? 1 : 0) + (actions.length > 0 ? 1 : 0)}\n                  className=\"text-center py-8 text-destructive\"\n                >\n                  {error}\n                </td>\n              </tr>\n            ) : paginatedData.length === 0 ? (\n              <tr>\n                <td \n                  colSpan={visibleColumns.length + (selectable ? 1 : 0) + (actions.length > 0 ? 1 : 0)}\n                  className=\"text-center py-8\"\n                >\n                  {emptyState || (\n                    <div className=\"text-muted-foreground\">\n                      No data available\n                    </div>\n                  )}\n                </td>\n              </tr>\n            ) : (\n              paginatedData.map(renderRow)\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {pagination && totalPages > 1 && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-sm text-muted-foreground\">\n            Showing {currentPage * pageSize + 1} to{' '}\n            {Math.min((currentPage + 1) * pageSize, totalRows || processedData.length)} of{' '}\n            {totalRows || processedData.length} results\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <Select \n              value={pageSize.toString()}\n              onValueChange={(value) => onPageSizeChange?.(Number(value))}\n            >\n              <SelectTrigger className=\"w-20\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"10\">10</SelectItem>\n                <SelectItem value=\"25\">25</SelectItem>\n                <SelectItem value=\"50\">50</SelectItem>\n                <SelectItem value=\"100\">100</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <div className=\"flex items-center gap-1\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                disabled={currentPage === 0}\n                onClick={() => onPageChange?.(currentPage - 1)}\n              >\n                Previous\n              </Button>\n              \n              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                const page = currentPage < 3 ? i : currentPage - 2 + i;\n                if (page >= totalPages) return null;\n                \n                return (\n                  <Button\n                    key={page}\n                    variant={page === currentPage ? 'default' : 'outline'}\n                    size=\"sm\"\n                    onClick={() => onPageChange?.(page)}\n                  >\n                    {page + 1}\n                  </Button>\n                );\n              })}\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                disabled={currentPage === totalPages - 1}\n                onClick={() => onPageChange?.(currentPage + 1)}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nDataTable.displayName = 'DataTable';\n\nexport { DataTable };"],"names":["ArrowDownWideNarrow","createLucideIcon","ArrowUpDown","ArrowUpNarrowWide","Download","Filter","RefreshCw","tableVariants","cva","cellVariants","DataTable","forwardRef","data","columns","virtualized","rowHeight","height","selectable","selectionMode","selectedRows","onSelectionChange","getRowId","row","index","sortable","sortConfig","onSortChange","filterable","filterConfig","onFilterChange","searchable","searchPlaceholder","searchValue","onSearchChange","pagination","currentPage","pageSize","totalRows","onPageChange","onPageSizeChange","actions","bulkActions","expandable","expandedRows","onExpandChange","renderExpanded","loading","emptyState","error","exportable","exportFormats","onExport","size","density","striped","bordered","hoverable","className","style","ref","internalSort","setInternalSort","useState","internalFilters","setInternalFilters","internalSearch","setInternalSearch","internalSelection","setInternalSelection","visibleColumns","useMemo","col","handleSort","useCallback","columnId","column","newSort","existingIndex","s","value","operator","newFilters","handleSelectAll","checked","newSelection","handleSelectRow","rowId","id","processedData","result","filter","a","b","sort","aValue","bValue","comparison","paginatedData","start","end","totalPages","renderColumnHeader","sortState","isSorted","sortDirection","jsx","cn","jsxs","SortAsc","SortDesc","Button","e","renderRow","isSelected","isExpanded","React","Checkbox","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","action","DropdownMenuItem","Search","Input","Badge","selectedData","format","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","_","page"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}
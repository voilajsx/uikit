{"version":3,"file":"admin.js","sources":["../src/components/layouts/admin.tsx"],"sourcesContent":["/**\n * Admin Layout - FIXED with proper flex layout\n * @module @voilajsx/uikit\n * @file src/components/layouts/admin.tsx\n */\n\nimport * as React from 'react';\nimport { forwardRef, createContext, useContext, useState, useEffect } from 'react';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Tooltip, TooltipContent, TooltipProvider,  TooltipTrigger } from '@/components/ui/tooltip';\nimport { Menu, X, ChevronRight, ChevronDown } from 'lucide-react';\nimport type { NavigationItem, Size, Tone } from '@/types';\n\n/**\n * AdminLayout schemes - meaningful admin variations\n * sidebar: Full navigation with icons + labels (classic)\n * compact: Icon-only navigation with click-to-expand (mobile-first)\n */\nexport type AdminLayoutScheme = 'sidebar' | 'compact';\n\n/**\n * Admin context for sharing configuration across compound components\n */\nconst AdminContext = createContext<{\n  scheme: AdminLayoutScheme;\n  tone: Tone;\n  size: Size;\n  sidebarExpanded: boolean;\n  setSidebarExpanded: (expanded: boolean) => void;\n  isMobile: boolean;\n}>({\n  scheme: 'sidebar',\n  tone: 'subtle',\n  size: 'lg',\n  sidebarExpanded: true,\n  setSidebarExpanded: () => {},\n  isMobile: false,\n});\n\n/**\n * Admin layout container variants - FLEX LAYOUT\n */\nconst adminVariants = cva(\n  'min-h-screen flex bg-background',\n  {\n    variants: {\n      tone: {\n        clean: '',\n        subtle: '',\n        brand: '',\n        contrast: ''\n      }\n    },\n    defaultVariants: {\n      tone: 'subtle'\n    }\n  }\n);\n\n/**\n * Sidebar variants - FIXED POSITIONING FOR MOBILE, FLEX FOR DESKTOP\n */\nconst sidebarVariants = cva(\n  'border-r transition-all duration-300 ease-in-out flex flex-col',\n  {\n    variants: {\n      scheme: {\n        sidebar: '',           // Width set by size variant\n        compact: ''            // Width set by size variant  \n      },\n      size: {\n        sm: 'w-48',           // 192px - Small sidebar\n        md: 'w-56',           // 224px - Medium sidebar  \n        lg: 'w-64',           // 256px - Large sidebar (default)\n        xl: 'w-72',           // 288px - Extra large sidebar\n        full: 'w-80'          // 320px - Full width sidebar\n      },\n      compactSize: {\n        sm: 'w-12',           // 48px - Small compact\n        md: 'w-14',           // 56px - Medium compact\n        lg: 'w-16',           // 64px - Large compact (default)\n        xl: 'w-18',           // 72px - Extra large compact\n        full: 'w-20'          // 80px - Full compact\n      },\n      mobile: {\n        true: 'fixed left-0 top-0 z-50 h-full',  // Mobile: fixed positioning\n        false: 'relative'                         // Desktop: normal flex\n      },\n      expanded: {\n        true: 'translate-x-0',\n        false: '-translate-x-full lg:translate-x-0'  // Only hide on mobile\n      },\n      compactExpanded: {\n        true: '',              // Expand to full size when compact is opened\n        false: ''\n      },\n      tone: {\n        clean: 'bg-white border-border text-foreground',\n        subtle: 'bg-muted border-border text-foreground', \n        brand: 'bg-primary/10 border-primary/20 text-foreground',\n        contrast: 'bg-zinc-900 border-border text-zinc-100'\n      }\n    },\n    compoundVariants: [\n      // Compact expanded takes the same size as the current size setting\n      {\n        scheme: 'compact',\n        compactExpanded: true,\n        size: 'sm',\n        class: 'w-48'  // Match sm size\n      },\n      {\n        scheme: 'compact',\n        compactExpanded: true,\n        size: 'md',\n        class: 'w-56'  // Match md size\n      },\n      {\n        scheme: 'compact',\n        compactExpanded: true,\n        size: 'lg',\n        class: 'w-64'  // Match lg size\n      },\n      {\n        scheme: 'compact',\n        compactExpanded: true,\n        size: 'xl',\n        class: 'w-72'  // Match xl size\n      },\n      {\n        scheme: 'compact',\n        compactExpanded: true,\n        size: 'full',\n        class: 'w-80'  // Match full size\n      }\n    ],\n    defaultVariants: {\n      scheme: 'sidebar',\n      size: 'lg',\n      compactSize: 'lg',\n      mobile: false,\n      expanded: true,\n      compactExpanded: false,\n      tone: 'subtle'\n    }\n  }\n);\n\n/**\n * Main content area - FLEX LAYOUT\n */\nconst mainContentVariants = cva(\n  'flex-1 flex flex-col min-w-0',\n  {\n    variants: {\n      mobile: {\n        true: 'w-full',      // Mobile: full width\n        false: 'flex-1'      // Desktop: flex remaining space\n      }\n    },\n    defaultVariants: {\n      mobile: false\n    }\n  }\n);\n\n/**\n * AdminLayout Root - Container with context\n */\nexport interface AdminLayoutProps {\n  /** RECOMMENDED: Layout scheme (default: \"sidebar\") */\n  scheme?: AdminLayoutScheme;\n  /** RECOMMENDED: Visual styling tone (default: \"subtle\") */\n  tone?: Tone;\n  /** OPTIONAL: Layout size (default: \"lg\") */\n  size?: Size;\n\n  /** OPTIONAL: Sidebar positioning */\n  position?: 'relative' | 'sticky' | 'fixed';\n  /** OPTIONAL: Default sidebar state (default: true) */\n  defaultSidebarOpen?: boolean;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n  /** REQUIRED: Admin structure (Header, Sidebar, Content) */\n  children: React.ReactNode;\n}\n\n/**\n * AdminLayout Root Component - FIXED LAYOUT with auto-wrapping\n */\nconst AdminLayoutRoot = forwardRef<HTMLDivElement, AdminLayoutProps>(({\n  scheme = 'sidebar',\n  tone = 'subtle',\n  size = 'lg',\n  position = 'relative', // Add this line\n  defaultSidebarOpen = true,\n  className,\n  children,\n}, ref) => {\n  const [sidebarExpanded, setSidebarExpanded] = useState(defaultSidebarOpen);\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Check if we're on mobile\n  useEffect(() => {\n    const checkMobile = () => {\n      const mobile = window.innerWidth < 1024;\n      setIsMobile(mobile);\n      if (mobile) {\n        setSidebarExpanded(false);\n      } else {\n        setSidebarExpanded(defaultSidebarOpen);\n      }\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, [defaultSidebarOpen]);\n\n  // Prevent body scroll when mobile sidebar is open\n  useEffect(() => {\n    if (isMobile && sidebarExpanded) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isMobile, sidebarExpanded]);\n\n  // Auto-wrap Header + Content in main area\n  const childrenArray = React.Children.toArray(children);\n  const sidebar = childrenArray.find(child => \n    React.isValidElement(child) && child.type === AdminSidebar\n  );\n  const header = childrenArray.find(child => \n    React.isValidElement(child) && child.type === AdminHeader\n  );\n  const content = childrenArray.find(child => \n    React.isValidElement(child) && child.type === AdminContent\n  );\n\n  return (\n    <AdminContext.Provider value={{ \n      scheme, \n      tone, \n      size, \n      sidebarExpanded, \n      setSidebarExpanded,\n      isMobile \n    }}>\n      <div\n        ref={ref}\n        className={cn(adminVariants({ tone }), className)}\n      >\n        {/* Sidebar Container - sticky positioning here */}\n      {/* Sidebar Container - sticky positioning here */}\n      <div className={cn(\n        'flex-shrink-0',\n        position === 'sticky' && 'sticky top-0 max-h-screen overflow-y-auto'\n      )}>\n        {sidebar}\n      </div>\n        \n        {/* Main Area (Header + Content) */}\n        <div className=\"flex-1 flex flex-col min-w-0\">\n          {header}\n          {content}\n        </div>\n      </div>\n    </AdminContext.Provider>\n  );\n});\n\nAdminLayoutRoot.displayName = 'AdminLayout';\n\n/**\n * AdminLayout.Sidebar - Navigation sidebar with FIXED layout\n */\nexport interface AdminSidebarProps {\n  /** OPTIONAL: Sidebar tone (inherits from AdminLayout if not set) */\n  tone?: Tone;\n  /** OPTIONAL: Navigation items */\n  navigation?: NavigationItem[];\n  /** OPTIONAL: Current path for active states */\n  currentPath?: string;\n  /** OPTIONAL: Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n  /** OPTIONAL: Logo component */\n  logo?: React.ReactNode;\n  /** OPTIONAL: Sidebar positioning */\n  position?: 'relative' | 'sticky' | 'fixed';\n  /** OPTIONAL: Sidebar footer content */\n  footer?: React.ReactNode;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n}\n\nconst AdminSidebar = forwardRef<HTMLElement, AdminSidebarProps>(({\n  tone,\n  navigation = [],\n  currentPath = '',\n  onNavigate,\n  logo,\n  position, // Add this line\n  footer,\n  className,\n}, ref) => {\n  const { scheme, tone: adminTone, size, sidebarExpanded, setSidebarExpanded, isMobile } = useAdmin();\n  const [expandedMenus, setExpandedMenus] = useState(new Set<string>());\n  const [compactExpanded, setCompactExpanded] = useState(false);\n\n  const finalTone = tone || adminTone;\n  const isCompact = scheme === 'compact';\n  const showLabels = !isCompact || compactExpanded;\n\n  // Handle compact mode expansion\n  const handleCompactToggle = () => {\n    if (isCompact) {\n      setCompactExpanded(!compactExpanded);\n    }\n  };\n\n  // Handle menu expansion\n  const toggleMenu = (menuKey: string) => {\n    const newExpanded = new Set(expandedMenus);\n    if (newExpanded.has(menuKey)) {\n      newExpanded.delete(menuKey);\n    } else {\n      newExpanded.add(menuKey);\n    }\n    setExpandedMenus(newExpanded);\n  };\n\n  // Get menu item styles\n  const getMenuItemStyles = (isActive: boolean, isSubmenu = false) => {\n    const baseStyles = isSubmenu \n  ? 'w-[92%] flex items-center transition-all duration-200 group text-left font-medium rounded-lg cursor-pointer'\n  : 'w-full flex items-center transition-all duration-200 group text-left font-medium rounded-lg cursor-pointer';\n    const padding = isSubmenu \n      ? (showLabels ? 'ml-4 px-3 py-2' : 'px-2 py-2') \n      : (showLabels ? 'px-3 py-2.5' : 'px-2 py-2.5 justify-center');\n    \n    let toneStyles = '';\n    switch (finalTone) {\n      case 'clean':\n        toneStyles = isActive \n          ? 'bg-muted text-foreground shadow-sm' \n          : 'text-muted-foreground hover:text-foreground hover:bg-muted/50';\n        break;\n      case 'subtle':\n        toneStyles = isActive \n          ? 'bg-background text-foreground shadow-sm' \n          : 'text-muted-foreground hover:text-foreground hover:bg-background/60';\n        break;\n      case 'brand':\n        toneStyles = isActive \n          ? 'bg-primary-foreground/20 text-primary-foreground shadow-sm' \n          : 'text-primary-foreground/90 hover:text-primary-foreground hover:bg-primary-foreground/10';\n        break;\n      case 'contrast':\n        toneStyles = isActive \n           ? 'bg-muted/20 dark:bg-muted/20 text-white shadow-sm' \n          : ' text-white  hover:bg-muted/20';\n        break;\n      default:\n        toneStyles = isActive \n          ? 'bg-muted/10 text-foreground   shadow-sm' \n          : 'text-muted-foreground hover:text-foreground hover:bg-muted/50';\n    }\n    \n    return cn(baseStyles, padding, toneStyles);\n  };\n\n  // Menu item component\n  const MenuItem = ({ item, isSubmenu = false }: { item: NavigationItem; isSubmenu?: boolean }) => {\n    const hasSubmenu = !isSubmenu && item.items && item.items.length > 0;\n    const isExpanded = expandedMenus.has(item.key);\n    const isActive = item.href ? currentPath === item.href : Boolean(item.isActive);\n\n    const handleClick = () => {\n      if (isCompact && !compactExpanded) {\n        setCompactExpanded(true);\n        return;\n      }\n\n      if (hasSubmenu) {\n        toggleMenu(item.key);\n      } else if (item.href && onNavigate) {\n        onNavigate(item.href, item);\n      } else if (item.onClick) {\n        item.onClick();\n      }\n    };\n\n    const menuButton = (\n      <button\n        onClick={handleClick}\n        className={getMenuItemStyles(isActive, isSubmenu)}\n      >\n        {!isSubmenu && item.icon && (\n          <item.icon className={cn(\n            'flex-shrink-0',\n            showLabels ? 'h-4 w-4 mr-3' : 'h-5 w-5'\n          )} />\n        )}\n        \n        {showLabels && (\n          <>\n            <span className=\"flex-1 truncate text-left\">{item.label}</span>\n            \n            {item.badge && (\n              <Badge \n                variant={isActive ? 'secondary' : 'outline'} \n                className={cn(\n                  \"text-xs h-4 px-1 ml-1 flex-shrink-0\",\n                  // Badge colors based on tone\n                  finalTone === 'brand' && !isActive && 'bg-primary-foreground/10 text-primary-foreground border-primary-foreground/20',\n                  finalTone === 'brand' && isActive && 'bg-primary-foreground/20 text-primary-foreground border-primary-foreground/30',\n                  finalTone === 'contrast' && !isActive && 'bg-zinc-700 text-zinc-300 border-zinc-600',\n                  finalTone === 'contrast' && isActive && 'bg-zinc-600 text-zinc-100 border-zinc-500'\n                )}\n              >\n                {item.badge}\n              </Badge>\n            )}\n            \n            {hasSubmenu && (\n              <ChevronRight className={cn(\n                'h-4 w-4 flex-shrink-0 transition-transform duration-200',\n                isExpanded && 'rotate-90'\n              )} />\n            )}\n          </>\n        )}\n      </button>\n    );\n\n    // In compact mode without labels, wrap in tooltip\n    if (isCompact && !compactExpanded && !isSubmenu && item.icon) {\n      return (\n        <div key={item.key} className=\"w-full\">\n          <TooltipProvider>\n            <Tooltip delayDuration={300}>\n              <TooltipTrigger asChild>\n                {menuButton}\n              </TooltipTrigger>\n              <TooltipContent \n                side=\"right\" \n                className=\"bg-white text-black border border-gray-200 shadow-md [&>*[data-side]]:hidden\"\n              >\n                <p>{item.label}</p>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n          \n          {hasSubmenu && isExpanded && showLabels && item.items && (\n            <div className=\"overflow-hidden transition-all duration-300 mt-1\">\n              <div className=\"space-y-1 pb-2\">\n                {item.items.map((subItem) => (\n                  <MenuItem key={subItem.key} item={subItem} isSubmenu={true} />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div key={item.key} className=\"w-full\">\n        {menuButton}\n        \n        {hasSubmenu && isExpanded && showLabels && item.items && (\n          <div className=\"overflow-hidden transition-all duration-300 mt-1\">\n            <div className=\"space-y-1 pb-2\">\n              {item.items.map((subItem) => (\n                <MenuItem key={subItem.key} item={subItem} isSubmenu={true} />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n  console.log('Scheme:', scheme, 'Size:', size, 'IsCompact:', );\n  return (\n    <>\n      {/* Mobile Overlay */}\n      {isMobile && sidebarExpanded && (\n        <div \n          className=\"fixed inset-0 z-40 bg-black/50 backdrop-blur-sm lg:hidden\"\n          onClick={() => setSidebarExpanded(false)}\n          aria-hidden=\"true\"\n        />\n      )}\n  \n      {/* Sidebar */}\n     <aside \n      ref={ref}\n      className={cn(\n        'border-r transition-all duration-300 ease-in-out flex flex-col',\n        // Mobile positioning\n        // Positioning based on prop and mobile state\n        isMobile ? 'fixed left-0 top-0 z-50 h-full' : 'sticky top-0 h-screen',\n        // Expansion state\n        sidebarExpanded ? 'translate-x-0' : '-translate-x-full lg:translate-x-0',\n        // Width based on scheme and size\n        scheme === 'sidebar' && size === 'sm' && 'w-48',\n        scheme === 'sidebar' && size === 'md' && 'w-56',\n        scheme === 'sidebar' && size === 'lg' && 'w-64',\n        scheme === 'sidebar' && size === 'xl' && 'w-72',\n        scheme === 'sidebar' && size === 'full' && 'w-80',\n        scheme === 'compact' && !compactExpanded && size === 'sm' && 'w-12',\n        scheme === 'compact' && !compactExpanded && size === 'md' && 'w-14',\n        scheme === 'compact' && !compactExpanded && size === 'lg' && 'w-16',\n        scheme === 'compact' && !compactExpanded && size === 'xl' && 'w-18',\n        scheme === 'compact' && !compactExpanded && size === 'full' && 'w-20',\n        scheme === 'compact' && compactExpanded && size === 'sm' && 'w-48',\n        scheme === 'compact' && compactExpanded && size === 'md' && 'w-56',\n        scheme === 'compact' && compactExpanded && size === 'lg' && 'w-64',\n        scheme === 'compact' && compactExpanded && size === 'xl' && 'w-72',\n        scheme === 'compact' && compactExpanded && size === 'full' && 'w-80',\n        // Tone colors - both sidebar and compact use header tone variants\n        (scheme === 'sidebar' || scheme === 'compact') && finalTone === 'clean' && 'bg-background/90 backdrop-blur-sm border-border/40 text-foreground',\n        (scheme === 'sidebar' || scheme === 'compact') && finalTone === 'subtle' && 'bg-muted/90 backdrop-blur-sm border-border/30 text-foreground',\n        (scheme === 'sidebar' || scheme === 'compact') && finalTone === 'brand' && 'bg-primary border-primary-foreground/20 text-primary-foreground',\n        (scheme === 'sidebar' || scheme === 'compact') && finalTone === 'contrast' && 'bg-zinc-900 border-zinc-700/40 text-zinc-100',\n        className\n      )}\n    >\n        <div className=\"flex flex-col h-full\">\n          {/* Sidebar Header */}\n          <div className={cn(\n            'flex items-center shadow-sm  flex-shrink-0',\n            showLabels ? 'justify-between h-16 px-4' : 'justify-center h-16 px-2'\n          )}>\n            {showLabels ? (\n              <>\n                {logo && (\n                  <div className={cn(\n                    \"flex-shrink-0\",\n                    // Logo colors based on tone\n                    finalTone === 'brand' && '[&_*]:text-primary-foreground',\n                    finalTone === 'contrast' && '[&_*]:text-zinc-100'\n                  )}>\n                    {logo}\n                  </div>\n                )}\n                {/* Close button for mobile OR compact expanded */}\n                {(isMobile || (isCompact && compactExpanded)) && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => {\n                      if (isMobile) {\n                        setSidebarExpanded(false);\n                      } else if (isCompact) {\n                        setCompactExpanded(false);\n                      }\n                    }}\n                    className=\"flex-shrink-0\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                )}\n              </>\n            ) : (\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={handleCompactToggle}\n                className=\"flex-shrink-0\"\n              >\n                <Menu className=\"h-4 w-4\" />\n              </Button>\n            )}\n          </div>\n\n          {/* Navigation */}\n          <div className=\"flex-1 overflow-y-auto\">\n            <nav className={cn('space-y-1', showLabels ? 'p-4' : 'p-2')}>\n              {navigation.map((item) => (\n                <MenuItem key={item.key} item={item} />\n              ))}\n            </nav>\n          </div>\n\n          {/* Sidebar Footer */}\n          {footer && showLabels && (\n            <>\n               <Separator className={cn(\n                  // Separator colors based on tone\n                  finalTone === 'clean' && 'bg-border/40',\n                  finalTone === 'subtle' && 'bg-border/30', \n                  finalTone === 'brand' && 'bg-primary-foreground/20',\n                  finalTone === 'contrast' && 'bg-zinc-700/40'\n                )} />\n              <div className=\"flex-shrink-0 p-4\">\n                {footer}\n              </div>\n            </>\n          )}\n        </div>\n      </aside>\n    </>\n  );\n});\n\nAdminSidebar.displayName = 'AdminSidebar';\n\n/**\n * AdminLayout.Header - Top header with breadcrumbs and actions\n */\nexport interface AdminHeaderProps {\n  /** OPTIONAL: Header tone (inherits from AdminLayout if not set) */\n  tone?: Tone;\n  /** OPTIONAL: Header size (inherits from AdminLayout if not set) */\n  size?: Size;\n  /** OPTIONAL: Page title */\n  title?: string;\n  /** OPTIONAL: Breadcrumb items */\n  breadcrumbs?: { label: string; href?: string }[];\n  /** OPTIONAL: Header actions (buttons, user menu, etc.) */\n  actions?: React.ReactNode;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n}\n\nconst AdminHeader = forwardRef<HTMLElement, AdminHeaderProps>(({\n  tone,\n  size,\n  title,\n  breadcrumbs = [],\n  actions,\n  className,\n}, ref) => {\n  const { sidebarExpanded, setSidebarExpanded, isMobile } = useAdmin();\n\n  return (\n    <header \n      ref={ref}\n      className={cn(\n        'w-full shadow-sm bg-muted/30 text-foreground flex-shrink-0',\n        className\n      )}\n    >\n      <div className=\"flex items-center justify-between px-4 lg:px-6 h-16\">\n        <div className=\"flex items-center gap-4 min-w-0\">\n         {/* Mobile hamburger toggle */}\n        {isMobile && (\n          <button\n            className=\"p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-muted transition-colors\"\n            onClick={() => setSidebarExpanded(!sidebarExpanded)}\n            aria-label={sidebarExpanded ? 'Close sidebar' : 'Open sidebar'}\n          >\n            <Menu className=\"h-5 w-5\" />\n          </button>\n        )}\n          \n          {/* Title and Breadcrumbs */}\n          <div className=\"min-w-0\">\n            \n            {breadcrumbs.length > 0 && (\n              <nav className=\"flex items-center gap-2  text-muted-foreground\">\n                {breadcrumbs.map((crumb, index) => (\n                  <React.Fragment key={index}>\n                    {index > 0 && <span>/</span>}\n                    {crumb.href ? (\n                      <button className=\"hover:text-foreground transition-colors\">\n                        {crumb.label}\n                      </button>\n                    ) : (\n                      <span>{crumb.label}</span>\n                    )}\n                  </React.Fragment>\n                ))}\n              </nav>\n            )}\n          </div>\n        </div>\n        \n        {/* Header Actions */}\n        {actions && (\n          <div className=\"flex-shrink-0\">\n            {actions}\n          </div>\n        )}\n      </div>\n    </header>\n  );\n});\n\nAdminHeader.displayName = 'AdminHeader';\n\n/**\n * AdminLayout.Content - Main content area with PROPER flex layout\n */\nexport interface AdminContentProps {\n  /** OPTIONAL: Content tone (inherits from AdminLayout if not set) */\n  tone?: Tone;\n  /** OPTIONAL: Content size (inherits from AdminLayout if not set) */\n  size?: Size;\n  /** OPTIONAL: Additional CSS classes */\n  className?: string;\n  /** REQUIRED: Admin content */\n  children: React.ReactNode;\n}\n\nconst AdminContent = forwardRef<HTMLElement, AdminContentProps>(({\n  tone,\n  size,\n  className,\n  children,\n}, ref) => {\n  const { isMobile } = useAdmin();\n\n  return (\n    <div className={cn(mainContentVariants({ mobile: isMobile }))}>\n      <main \n        ref={ref}\n        className={cn('flex-1 min-w-0 overflow-auto', className)}\n      >\n        <div className=\"p-4 lg:p-6 w-full\">\n          <div className=\"w-full  mx-auto\">\n            {children}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n});\n\nAdminContent.displayName = 'AdminContent';\n\n/**\n * Hook to access admin configuration\n */\nconst useAdmin = () => {\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminLayout component');\n  }\n  return context;\n};\n\n/**\n * AdminLayout - COMPOUND-ONLY Component\n */\nconst AdminLayout = Object.assign(AdminLayoutRoot, {\n  Sidebar: AdminSidebar,\n  Header: AdminHeader,\n  Content: AdminContent,\n});\n\n/**\n * Export FIXED AdminLayout\n */\nexport { \n  AdminLayout,\n  AdminSidebar,\n  AdminHeader,\n  AdminContent,\n  useAdmin\n};"],"names":["AdminContext","createContext","adminVariants","cva","mainContentVariants","AdminLayoutRoot","forwardRef","scheme","tone","size","position","defaultSidebarOpen","className","children","ref","sidebarExpanded","setSidebarExpanded","useState","isMobile","setIsMobile","useEffect","checkMobile","mobile","childrenArray","React","sidebar","child","AdminSidebar","header","AdminHeader","content","AdminContent","jsx","jsxs","cn","navigation","currentPath","onNavigate","logo","footer","adminTone","useAdmin","expandedMenus","setExpandedMenus","compactExpanded","setCompactExpanded","finalTone","isCompact","showLabels","handleCompactToggle","toggleMenu","menuKey","newExpanded","getMenuItemStyles","isActive","isSubmenu","baseStyles","padding","toneStyles","MenuItem","item","hasSubmenu","isExpanded","menuButton","Fragment","Badge","ChevronRight","TooltipProvider","Tooltip","TooltipTrigger","TooltipContent","subItem","Button","X","Menu","Separator","title","breadcrumbs","actions","crumb","index","context","useContext","AdminLayout"],"mappings":";;;;;;;;;;;;AA2BA,MAAMA,IAAeC,EAOlB;AAAA,EACD,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,oBAAoB,MAAM;AAAA,EAAA;AAAA,EAC1B,UAAU;AACZ,CAAC,GAKKC,KAAgBC;AAAA,EACpB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,MAAM;AAAA,QACJ,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA,MAAA;AAAA,IACZ;AAAA,IAEF,iBAAiB;AAAA,MACf,MAAM;AAAA,IAAA;AAAA,EACR;AAEJ,GA8FMC,KAAsBD;AAAA,EAC1B;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,QAAQ;AAAA,QACN,MAAM;AAAA;AAAA,QACN,OAAO;AAAA;AAAA,MAAA;AAAA,IACT;AAAA,IAEF,iBAAiB;AAAA,MACf,QAAQ;AAAA,IAAA;AAAA,EACV;AAEJ,GA0BME,IAAkBC,EAA6C,CAAC;AAAA,EACpE,QAAAC,IAAS;AAAA,EACT,MAAAC,IAAO;AAAA,EACP,MAAAC,IAAO;AAAA,EACP,UAAAC,IAAW;AAAA;AAAA,EACX,oBAAAC,IAAqB;AAAA,EACrB,WAAAC;AAAA,EACA,UAAAC;AACF,GAAGC,MAAQ;AACT,QAAM,CAACC,GAAiBC,CAAkB,IAAIC,EAASN,CAAkB,GACnE,CAACO,GAAUC,CAAW,IAAIF,EAAS,EAAK;AAG9C,EAAAG,EAAU,MAAM;AACd,UAAMC,IAAc,MAAM;AACxB,YAAMC,IAAS,OAAO,aAAa;AACnC,MAAAH,EAAYG,CAAM,GAEhBN,EADEM,IACiB,KAEAX,CAFK;AAAA,IAG1B;AAGF,WAAAU,EAAA,GACA,OAAO,iBAAiB,UAAUA,CAAW,GACtC,MAAM,OAAO,oBAAoB,UAAUA,CAAW;AAAA,EAAA,GAC5D,CAACV,CAAkB,CAAC,GAGvBS,EAAU,OACJF,KAAYH,IACd,SAAS,KAAK,MAAM,WAAW,WAE/B,SAAS,KAAK,MAAM,WAAW,SAG1B,MAAM;AACX,aAAS,KAAK,MAAM,WAAW;AAAA,EAAA,IAEhC,CAACG,GAAUH,CAAe,CAAC;AAG9B,QAAMQ,IAAgBC,EAAM,SAAS,QAAQX,CAAQ,GAC/CY,IAAUF,EAAc;AAAA,IAAK,OACjCC,EAAM,eAAeE,CAAK,KAAKA,EAAM,SAASC;AAAA,EAAA,GAE1CC,IAASL,EAAc;AAAA,IAAK,OAChCC,EAAM,eAAeE,CAAK,KAAKA,EAAM,SAASG;AAAA,EAAA,GAE1CC,IAAUP,EAAc;AAAA,IAAK,OACjCC,EAAM,eAAeE,CAAK,KAAKA,EAAM,SAASK;AAAA,EAAA;AAGhD,SACE,gBAAAC,EAAChC,EAAa,UAAb,EAAsB,OAAO;AAAA,IAC5B,QAAAO;AAAA,IACA,MAAAC;AAAA,IACA,MAAAC;AAAA,IACA,iBAAAM;AAAA,IACA,oBAAAC;AAAA,IACA,UAAAE;AAAA,EAAA,GAEA,UAAA,gBAAAe;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAnB;AAAA,MACA,WAAWoB,EAAGhC,GAAc,EAAE,MAAAM,EAAA,CAAM,GAAGI,CAAS;AAAA,MAIlD,UAAA;AAAA,QAAA,gBAAAoB,EAAC,SAAI,WAAWE;AAAA,UACd;AAAA,UACAxB,MAAa,YAAY;AAAA,QAAA,GAExB,UAAAe,GACH;AAAA,QAGE,gBAAAQ,EAAC,OAAA,EAAI,WAAU,gCACZ,UAAA;AAAA,UAAAL;AAAA,UACAE;AAAA,QAAA,EAAA,CACH;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA,GAEJ;AAEJ,CAAC;AAEDzB,EAAgB,cAAc;AAwB9B,MAAMsB,IAAerB,EAA2C,CAAC;AAAA,EAC/D,MAAAE;AAAA,EACA,YAAA2B,IAAa,CAAA;AAAA,EACb,aAAAC,IAAc;AAAA,EACd,YAAAC;AAAA,EACA,MAAAC;AAAA,EACA,UAAA5B;AAAA;AAAA,EACA,QAAA6B;AAAA,EACA,WAAA3B;AACF,GAAGE,MAAQ;AACT,QAAM,EAAE,QAAAP,GAAQ,MAAMiC,GAAW,MAAA/B,GAAM,iBAAAM,GAAiB,oBAAAC,GAAoB,UAAAE,EAAA,IAAauB,EAAA,GACnF,CAACC,GAAeC,CAAgB,IAAI1B,EAAS,oBAAI,KAAa,GAC9D,CAAC2B,GAAiBC,CAAkB,IAAI5B,EAAS,EAAK,GAEtD6B,IAAYtC,KAAQgC,GACpBO,IAAYxC,MAAW,WACvByC,IAAa,CAACD,KAAaH,GAG3BK,IAAsB,MAAM;AAChC,IAAIF,KACFF,EAAmB,CAACD,CAAe;AAAA,EACrC,GAIIM,IAAa,CAACC,MAAoB;AACtC,UAAMC,IAAc,IAAI,IAAIV,CAAa;AACzC,IAAIU,EAAY,IAAID,CAAO,IACzBC,EAAY,OAAOD,CAAO,IAE1BC,EAAY,IAAID,CAAO,GAEzBR,EAAiBS,CAAW;AAAA,EAAA,GAIxBC,IAAoB,CAACC,GAAmBC,IAAY,OAAU;AAClE,UAAMC,IAAaD,IACnB,gHACA,8GACME,IAAUF,IACXP,IAAa,mBAAmB,cAChCA,IAAa,gBAAgB;AAElC,QAAIU,IAAa;AACjB,YAAQZ,GAAA;AAAA,MACN,KAAK;AACH,QAAAY,IAAaJ,IACT,uCACA;AACJ;AAAA,MACF,KAAK;AACH,QAAAI,IAAaJ,IACT,4CACA;AACJ;AAAA,MACF,KAAK;AACH,QAAAI,IAAaJ,IACT,+DACA;AACJ;AAAA,MACF,KAAK;AACH,QAAAI,IAAaJ,IACR,sDACD;AACJ;AAAA,MACF;AACE,QAAAI,IAAaJ,IACT,4CACA;AAAA,IAAA;AAGR,WAAOpB,EAAGsB,GAAYC,GAASC,CAAU;AAAA,EAAA,GAIrCC,IAAW,CAAC,EAAE,MAAAC,GAAM,WAAAL,IAAY,SAA2D;AAC/F,UAAMM,IAAa,CAACN,KAAaK,EAAK,SAASA,EAAK,MAAM,SAAS,GAC7DE,IAAapB,EAAc,IAAIkB,EAAK,GAAG,GACvCN,IAAWM,EAAK,OAAOxB,MAAgBwB,EAAK,OAAO,EAAQA,EAAK,UAiBhEG,IACJ,gBAAA9B;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,SAjBgB,MAAM;AACxB,cAAIc,KAAa,CAACH,GAAiB;AACjC,YAAAC,EAAmB,EAAI;AACvB;AAAA,UAAA;AAGF,UAAIgB,IACFX,EAAWU,EAAK,GAAG,IACVA,EAAK,QAAQvB,IACtBA,EAAWuB,EAAK,MAAMA,CAAI,IACjBA,EAAK,WACdA,EAAK,QAAA;AAAA,QACP;AAAA,QAME,WAAWP,EAAkBC,GAAUC,CAAS;AAAA,QAE/C,UAAA;AAAA,UAAA,CAACA,KAAaK,EAAK,0BACjBA,EAAK,MAAL,EAAU,WAAW1B;AAAA,YACpB;AAAA,YACAc,IAAa,iBAAiB;AAAA,UAAA,GAC7B;AAAA,UAGJA,KACC,gBAAAf,EAAA+B,GAAA,EACE,UAAA;AAAA,YAAA,gBAAAhC,EAAC,QAAA,EAAK,WAAU,6BAA6B,UAAA4B,EAAK,OAAM;AAAA,YAEvDA,EAAK,SACJ,gBAAA5B;AAAA,cAACiC;AAAA,cAAA;AAAA,gBACC,SAASX,IAAW,cAAc;AAAA,gBAClC,WAAWpB;AAAA,kBACT;AAAA;AAAA,kBAEAY,MAAc,WAAW,CAACQ,KAAY;AAAA,kBACtCR,MAAc,WAAWQ,KAAY;AAAA,kBACrCR,MAAc,cAAc,CAACQ,KAAY;AAAA,kBACzCR,MAAc,cAAcQ,KAAY;AAAA,gBAAA;AAAA,gBAGzC,UAAAM,EAAK;AAAA,cAAA;AAAA,YAAA;AAAA,YAITC,KACC,gBAAA7B,EAACkC,IAAA,EAAa,WAAWhC;AAAA,cACvB;AAAA,cACA4B,KAAc;AAAA,YAAA,EAChB,CAAG;AAAA,UAAA,EAAA,CAEP;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA;AAMN,WAAIf,KAAa,CAACH,KAAmB,CAACW,KAAaK,EAAK,OAEpD,gBAAA3B,EAAC,OAAA,EAAmB,WAAU,UAC5B,UAAA;AAAA,MAAA,gBAAAD,EAACmC,IAAA,EACC,UAAA,gBAAAlC,EAACmC,IAAA,EAAQ,eAAe,KACtB,UAAA;AAAA,QAAA,gBAAApC,EAACqC,IAAA,EAAe,SAAO,IACpB,UAAAN,GACH;AAAA,QACA,gBAAA/B;AAAA,UAACsC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,WAAU;AAAA,YAEV,UAAA,gBAAAtC,EAAC,KAAA,EAAG,UAAA4B,EAAK,MAAA,CAAM;AAAA,UAAA;AAAA,QAAA;AAAA,MACjB,EAAA,CACF,EAAA,CACF;AAAA,MAECC,KAAcC,KAAcd,KAAcY,EAAK,SAC9C,gBAAA5B,EAAC,OAAA,EAAI,WAAU,oDACb,UAAA,gBAAAA,EAAC,OAAA,EAAI,WAAU,kBACZ,UAAA4B,EAAK,MAAM,IAAI,CAACW,MACf,gBAAAvC,EAAC2B,GAAA,EAA2B,MAAMY,GAAS,WAAW,GAAA,GAAvCA,EAAQ,GAAqC,CAC7D,EAAA,CACH,EAAA,CACF;AAAA,IAAA,EAAA,GAtBMX,EAAK,GAwBf,IAKF,gBAAA3B,EAAC,OAAA,EAAmB,WAAU,UAC3B,UAAA;AAAA,MAAA8B;AAAA,MAEAF,KAAcC,KAAcd,KAAcY,EAAK,SAC9C,gBAAA5B,EAAC,OAAA,EAAI,WAAU,oDACb,UAAA,gBAAAA,EAAC,OAAA,EAAI,WAAU,kBACZ,UAAA4B,EAAK,MAAM,IAAI,CAACW,MACf,gBAAAvC,EAAC2B,GAAA,EAA2B,MAAMY,GAAS,WAAW,GAAA,GAAvCA,EAAQ,GAAqC,CAC7D,EAAA,CACH,EAAA,CACF;AAAA,IAAA,EAAA,GAVMX,EAAK,GAYf;AAAA,EAAA;AAGJ,iBAAQ,IAAI,WAAWrD,GAAQ,SAASE,GAAM,YAAc,GAE1D,gBAAAwB,EAAA+B,GAAA,EAEG,UAAA;AAAA,IAAA9C,KAAYH,KACX,gBAAAiB;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MAAMhB,EAAmB,EAAK;AAAA,QACvC,eAAY;AAAA,MAAA;AAAA,IAAA;AAAA,IAKjB,gBAAAgB;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,KAAAlB;AAAA,QACA,WAAWoB;AAAA,UACT;AAAA;AAAA;AAAA,UAGAhB,IAAW,mCAAmC;AAAA;AAAA,UAE9CH,IAAkB,kBAAkB;AAAA;AAAA,UAEpCR,MAAW,aAAaE,MAAS,QAAQ;AAAA,UACzCF,MAAW,aAAaE,MAAS,QAAQ;AAAA,UACzCF,MAAW,aAAaE,MAAS,QAAQ;AAAA,UACzCF,MAAW,aAAaE,MAAS,QAAQ;AAAA,UACzCF,MAAW,aAAaE,MAAS,UAAU;AAAA,UAC3CF,MAAW,aAAa,CAACqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC7DF,MAAW,aAAa,CAACqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC7DF,MAAW,aAAa,CAACqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC7DF,MAAW,aAAa,CAACqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC7DF,MAAW,aAAa,CAACqC,KAAmBnC,MAAS,UAAU;AAAA,UAC/DF,MAAW,aAAaqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC5DF,MAAW,aAAaqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC5DF,MAAW,aAAaqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC5DF,MAAW,aAAaqC,KAAmBnC,MAAS,QAAQ;AAAA,UAC5DF,MAAW,aAAaqC,KAAmBnC,MAAS,UAAU;AAAA;AAAA,WAE7DF,MAAW,aAAaA,MAAW,cAAcuC,MAAc,WAAW;AAAA,WAC1EvC,MAAW,aAAaA,MAAW,cAAcuC,MAAc,YAAY;AAAA,WAC3EvC,MAAW,aAAaA,MAAW,cAAcuC,MAAc,WAAW;AAAA,WAC1EvC,MAAW,aAAaA,MAAW,cAAcuC,MAAc,cAAc;AAAA,UAC9ElC;AAAA,QAAA;AAAA,QAGA,UAAA,gBAAAqB,EAAC,OAAA,EAAI,WAAU,wBAEb,UAAA;AAAA,UAAA,gBAAAD,EAAC,SAAI,WAAWE;AAAA,YACd;AAAA,YACAc,IAAa,8BAA8B;AAAA,UAAA,GAE1C,cACC,gBAAAf,EAAA+B,GAAA,EACG,UAAA;AAAA,YAAA1B,KACC,gBAAAN,EAAC,SAAI,WAAWE;AAAA,cACd;AAAA;AAAA,cAEAY,MAAc,WAAW;AAAA,cACzBA,MAAc,cAAc;AAAA,YAAA,GAE3B,UAAAR,GACH;AAAA,aAGApB,KAAa6B,KAAaH,MAC1B,gBAAAZ;AAAA,cAACwC;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,SAAS,MAAM;AACb,kBAAItD,IACFF,EAAmB,EAAK,IACf+B,KACTF,EAAmB,EAAK;AAAA,gBAC1B;AAAA,gBAEF,WAAU;AAAA,gBAEV,UAAA,gBAAAb,EAACyC,IAAA,EAAE,WAAU,UAAA,CAAU;AAAA,cAAA;AAAA,YAAA;AAAA,UACzB,EAAA,CAEJ,IAEA,gBAAAzC;AAAA,YAACwC;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAASvB;AAAA,cACT,WAAU;AAAA,cAEV,UAAA,gBAAAjB,EAAC0C,GAAA,EAAK,WAAU,UAAA,CAAU;AAAA,YAAA;AAAA,UAAA,GAGhC;AAAA,UAGA,gBAAA1C,EAAC,OAAA,EAAI,WAAU,0BACb,UAAA,gBAAAA,EAAC,SAAI,WAAWE,EAAG,aAAac,IAAa,QAAQ,KAAK,GACvD,UAAAb,EAAW,IAAI,CAACyB,MACf,gBAAA5B,EAAC2B,GAAA,EAAwB,MAAAC,KAAVA,EAAK,GAAiB,CACtC,EAAA,CACH,EAAA,CACF;AAAA,UAGCrB,KAAUS,KACT,gBAAAf,EAAA+B,GAAA,EACG,UAAA;AAAA,YAAA,gBAAAhC,EAAC2C,KAAU,WAAWzC;AAAA;AAAA,cAEnBY,MAAc,WAAW;AAAA,cACzBA,MAAc,YAAY;AAAA,cAC1BA,MAAc,WAAW;AAAA,cACzBA,MAAc,cAAc;AAAA,YAAA,GAC3B;AAAA,YACL,gBAAAd,EAAC,OAAA,EAAI,WAAU,qBACZ,UAAAO,EAAA,CACH;AAAA,UAAA,EAAA,CACF;AAAA,QAAA,EAAA,CAEJ;AAAA,MAAA;AAAA,IAAA;AAAA,EACF,GACF;AAEJ,CAAC;AAEDZ,EAAa,cAAc;AAoB3B,MAAME,IAAcvB,EAA0C,CAAC;AAAA,EAC7D,MAAAE;AAAA,EACA,MAAAC;AAAA,EACA,OAAAmE;AAAA,EACA,aAAAC,IAAc,CAAA;AAAA,EACd,SAAAC;AAAA,EACA,WAAAlE;AACF,GAAGE,MAAQ;AACT,QAAM,EAAE,iBAAAC,GAAiB,oBAAAC,GAAoB,UAAAE,EAAA,IAAauB,EAAA;AAE1D,SACE,gBAAAT;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAlB;AAAA,MACA,WAAWoB;AAAA,QACT;AAAA,QACAtB;AAAA,MAAA;AAAA,MAGF,UAAA,gBAAAqB,EAAC,OAAA,EAAI,WAAU,uDACb,UAAA;AAAA,QAAA,gBAAAA,EAAC,OAAA,EAAI,WAAU,mCAEd,UAAA;AAAA,UAAAf,KACC,gBAAAc;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAMhB,EAAmB,CAACD,CAAe;AAAA,cAClD,cAAYA,IAAkB,kBAAkB;AAAA,cAEhD,UAAA,gBAAAiB,EAAC0C,GAAA,EAAK,WAAU,UAAA,CAAU;AAAA,YAAA;AAAA,UAAA;AAAA,4BAK3B,OAAA,EAAI,WAAU,WAEZ,UAAAG,EAAY,SAAS,KACpB,gBAAA7C,EAAC,OAAA,EAAI,WAAU,kDACZ,UAAA6C,EAAY,IAAI,CAACE,GAAOC,MACvB,gBAAA/C,EAACT,EAAM,UAAN,EACE,UAAA;AAAA,YAAAwD,IAAQ,KAAK,gBAAAhD,EAAC,QAAA,EAAK,UAAA,KAAC;AAAA,YACpB+C,EAAM,OACL,gBAAA/C,EAAC,UAAA,EAAO,WAAU,2CACf,UAAA+C,EAAM,MAAA,CACT,IAEA,gBAAA/C,EAAC,QAAA,EAAM,UAAA+C,EAAM,MAAA,CAAM;AAAA,UAAA,KAPFC,CASrB,CACD,EAAA,CACH,EAAA,CAEJ;AAAA,QAAA,GACF;AAAA,QAGCF,KACC,gBAAA9C,EAAC,OAAA,EAAI,WAAU,iBACZ,UAAA8C,EAAA,CACH;AAAA,MAAA,EAAA,CAEJ;AAAA,IAAA;AAAA,EAAA;AAGN,CAAC;AAEDjD,EAAY,cAAc;AAgB1B,MAAME,IAAezB,EAA2C,CAAC;AAAA,EAC/D,MAAAE;AAAA,EACA,MAAAC;AAAA,EACA,WAAAG;AAAA,EACA,UAAAC;AACF,GAAGC,MAAQ;AACT,QAAM,EAAE,UAAAI,EAAA,IAAauB,EAAA;AAErB,SACE,gBAAAT,EAAC,OAAA,EAAI,WAAWE,EAAG9B,GAAoB,EAAE,QAAQc,EAAA,CAAU,CAAC,GAC1D,UAAA,gBAAAc;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAAlB;AAAA,MACA,WAAWoB,EAAG,gCAAgCtB,CAAS;AAAA,MAEvD,UAAA,gBAAAoB,EAAC,SAAI,WAAU,qBACb,4BAAC,OAAA,EAAI,WAAU,mBACZ,UAAAnB,EAAA,CACH,EAAA,CACF;AAAA,IAAA;AAAA,EAAA,GAEJ;AAEJ,CAAC;AAEDkB,EAAa,cAAc;AAK3B,MAAMU,IAAW,MAAM;AACrB,QAAMwC,IAAUC,EAAWlF,CAAY;AACvC,MAAI,CAACiF;AACH,UAAM,IAAI,MAAM,uDAAuD;AAEzE,SAAOA;AACT,GAKME,KAAc,OAAO,OAAO9E,GAAiB;AAAA,EACjD,SAASsB;AAAA,EACT,QAAQE;AAAA,EACR,SAASE;AACX,CAAC;"}
{"version":3,"file":"index-CDUlZsng.js","sources":["../node_modules/@radix-ui/react-collapsible/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// src/collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? false,\n      onChange: onOpenChange,\n      caller: COLLAPSIBLE_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["COLLAPSIBLE_NAME","createCollapsibleContext","createCollapsibleScope","createContextScope","CollapsibleProvider","useCollapsibleContext","Collapsible","React","props","forwardedRef","__scopeCollapsible","openProp","defaultOpen","disabled","onOpenChange","collapsibleProps","open","setOpen","useControllableState","jsx","useId","prevOpen","Primitive","getState","TRIGGER_NAME","CollapsibleTrigger","triggerProps","context","composeEventHandlers","CONTENT_NAME","CollapsibleContent","forceMount","contentProps","Presence","present","CollapsibleContentImpl","children","isPresent","setIsPresent","ref","composedRefs","useComposedRefs","heightRef","height","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","rAF","useLayoutEffect","node","rect","Root","Trigger","Content"],"mappings":";;;;;;;;;AAaA,IAAIA,IAAmB,eACnB,CAACC,GAA0BC,CAAsB,IAAIC,EAAmBH,CAAgB,GACxF,CAACI,GAAqBC,CAAqB,IAAIJ,EAAyBD,CAAgB,GACxFM,IAAcC,EAAM;AAAA,EACtB,CAACC,GAAOC,MAAiB;AACvB,UAAM;AAAA,MACJ,oBAAAC;AAAA,MACA,MAAMC;AAAA,MACN,aAAAC;AAAA,MACA,UAAAC;AAAA,MACA,cAAAC;AAAA,MACA,GAAGC;AAAA,IACT,IAAQP,GACE,CAACQ,GAAMC,CAAO,IAAIC,EAAqB;AAAA,MAC3C,MAAMP;AAAA,MACN,aAAaC,KAAe;AAAA,MAC5B,UAAUE;AAAA,MACV,QAAQd;AAAA,IACd,CAAK;AACD,WAAuB,gBAAAmB;AAAA,MACrBf;AAAA,MACA;AAAA,QACE,OAAOM;AAAA,QACP,UAAAG;AAAA,QACA,WAAWO,EAAK;AAAA,QAChB,MAAAJ;AAAA,QACA,cAAcT,EAAM,YAAY,MAAMU,EAAQ,CAACI,MAAa,CAACA,CAAQ,GAAG,CAACJ,CAAO,CAAC;AAAA,QACjF,UAA0B,gBAAAE;AAAA,UACxBG,EAAU;AAAA,UACV;AAAA,YACE,cAAcC,EAASP,CAAI;AAAA,YAC3B,iBAAiBH,IAAW,KAAK;AAAA,YACjC,GAAGE;AAAA,YACH,KAAKN;AAAA,UACjB;AAAA,QACA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA;AACAH,EAAY,cAAcN;AAC1B,IAAIwB,IAAe,sBACfC,IAAqBlB,EAAM;AAAA,EAC7B,CAACC,GAAOC,MAAiB;AACvB,UAAM,EAAE,oBAAAC,GAAoB,GAAGgB,EAAY,IAAKlB,GAC1CmB,IAAUtB,EAAsBmB,GAAcd,CAAkB;AACtE,WAAuB,gBAAAS;AAAA,MACrBG,EAAU;AAAA,MACV;AAAA,QACE,MAAM;AAAA,QACN,iBAAiBK,EAAQ;AAAA,QACzB,iBAAiBA,EAAQ,QAAQ;AAAA,QACjC,cAAcJ,EAASI,EAAQ,IAAI;AAAA,QACnC,iBAAiBA,EAAQ,WAAW,KAAK;AAAA,QACzC,UAAUA,EAAQ;AAAA,QAClB,GAAGD;AAAA,QACH,KAAKjB;AAAA,QACL,SAASmB,EAAqBpB,EAAM,SAASmB,EAAQ,YAAY;AAAA,MACzE;AAAA,IACA;AAAA,EACA;AACA;AACAF,EAAmB,cAAcD;AACjC,IAAIK,IAAe,sBACfC,IAAqBvB,EAAM;AAAA,EAC7B,CAACC,GAAOC,MAAiB;AACvB,UAAM,EAAE,YAAAsB,GAAY,GAAGC,EAAY,IAAKxB,GAClCmB,IAAUtB,EAAsBwB,GAAcrB,EAAM,kBAAkB;AAC5E,WAAuB,gBAAAW,EAAIc,GAAU,EAAE,SAASF,KAAcJ,EAAQ,MAAM,UAAU,CAAC,EAAE,SAAAO,EAAO,MAAuB,gBAAAf,EAAIgB,GAAwB,EAAE,GAAGH,GAAc,KAAKvB,GAAc,SAAAyB,EAAO,CAAE,GAAG;AAAA,EACzM;AACA;AACAJ,EAAmB,cAAcD;AACjC,IAAIM,IAAyB5B,EAAM,WAAW,CAACC,GAAOC,MAAiB;AACrE,QAAM,EAAE,oBAAAC,GAAoB,SAAAwB,GAAS,UAAAE,GAAU,GAAGJ,EAAY,IAAKxB,GAC7DmB,IAAUtB,EAAsBwB,GAAcnB,CAAkB,GAChE,CAAC2B,GAAWC,CAAY,IAAI/B,EAAM,SAAS2B,CAAO,GAClDK,IAAMhC,EAAM,OAAO,IAAI,GACvBiC,IAAeC,EAAgBhC,GAAc8B,CAAG,GAChDG,IAAYnC,EAAM,OAAO,CAAC,GAC1BoC,IAASD,EAAU,SACnBE,IAAWrC,EAAM,OAAO,CAAC,GACzBsC,IAAQD,EAAS,SACjBE,IAASnB,EAAQ,QAAQU,GACzBU,IAA+BxC,EAAM,OAAOuC,CAAM,GAClDE,IAAoBzC,EAAM,OAAO,MAAM;AAC7C,SAAAA,EAAM,UAAU,MAAM;AACpB,UAAM0C,IAAM,sBAAsB,MAAMF,EAA6B,UAAU,EAAK;AACpF,WAAO,MAAM,qBAAqBE,CAAG;AAAA,EACzC,GAAK,EAAE,GACLC,EAAgB,MAAM;AACpB,UAAMC,IAAOZ,EAAI;AACjB,QAAIY,GAAM;AACR,MAAAH,EAAkB,UAAUA,EAAkB,WAAW;AAAA,QACvD,oBAAoBG,EAAK,MAAM;AAAA,QAC/B,eAAeA,EAAK,MAAM;AAAA,MAClC,GACMA,EAAK,MAAM,qBAAqB,MAChCA,EAAK,MAAM,gBAAgB;AAC3B,YAAMC,IAAOD,EAAK,sBAAqB;AACvC,MAAAT,EAAU,UAAUU,EAAK,QACzBR,EAAS,UAAUQ,EAAK,OACnBL,EAA6B,YAChCI,EAAK,MAAM,qBAAqBH,EAAkB,QAAQ,oBAC1DG,EAAK,MAAM,gBAAgBH,EAAkB,QAAQ,gBAEvDV,EAAaJ,CAAO;AAAA,IAC1B;AAAA,EACA,GAAK,CAACP,EAAQ,MAAMO,CAAO,CAAC,GACH,gBAAAf;AAAA,IACrBG,EAAU;AAAA,IACV;AAAA,MACE,cAAcC,EAASI,EAAQ,IAAI;AAAA,MACnC,iBAAiBA,EAAQ,WAAW,KAAK;AAAA,MACzC,IAAIA,EAAQ;AAAA,MACZ,QAAQ,CAACmB;AAAA,MACT,GAAGd;AAAA,MACH,KAAKQ;AAAA,MACL,OAAO;AAAA,QACJ,sCAAuCG,IAAS,GAAGA,CAAM,OAAO;AAAA,QAChE,qCAAsCE,IAAQ,GAAGA,CAAK,OAAO;AAAA,QAC9D,GAAGrC,EAAM;AAAA,MACjB;AAAA,MACM,UAAUsC,KAAUV;AAAA,IAC1B;AAAA,EACA;AACA,CAAC;AACD,SAASb,EAASP,GAAM;AACtB,SAAOA,IAAO,SAAS;AACzB;AACG,IAACqC,IAAO/C,GACPgD,IAAU7B,GACV8B,IAAUzB;","x_google_ignoreList":[0]}
{"version":3,"file":"theme-provider.js","sources":["../src/themes/theme-provider.tsx"],"sourcesContent":["/**\n * @fileoverview Enhanced theme provider with dynamic CSS injection and default fallbacks\n * @description Theme context provider that can handle themes without CSS bundling\n * @package @voilajsx/uikit\n * @file /src/themes/theme-provider.tsx\n */\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\n// Type definitions\nexport interface ThemeColors {\n  // Base colors\n  background: string;\n  foreground: string;\n  card: string;\n  cardForeground: string;\n  popover: string;\n  popoverForeground: string;\n  \n  // Interactive colors\n  primary: string;\n  primaryForeground: string;\n  secondary: string;\n  secondaryForeground: string;\n  muted: string;\n  mutedForeground: string;\n  accent: string;\n  accentForeground: string;\n  \n  // State colors\n  destructive: string;\n  destructiveForeground: string;\n  \n  // Border colors\n  border: string;\n  input: string;\n  ring: string;\n  \n  // Chart colors\n  chart1: string;\n  chart2: string;\n  chart3: string;\n  chart4: string;\n  chart5: string;\n  \n  // Sidebar colors\n  sidebar: string;\n  sidebarForeground: string;\n  sidebarPrimary: string;\n  sidebarPrimaryForeground: string;\n  sidebarAccent: string;\n  sidebarAccentForeground: string;\n  sidebarBorder: string;\n  sidebarRing: string;\n}\n\nexport interface ThemeDefinition {\n  id: string;\n  name: string;\n  light: ThemeColors;\n  dark: ThemeColors;\n}\n\nexport interface ThemeMetadata {\n  id: string;\n  name: string;\n}\n\nexport type ThemeVariant = 'light' | 'dark';\n\nexport interface ThemeValidation {\n  isComplete: boolean;\n  lightMissing: string[];\n  darkMissing: string[];\n}\n\nexport interface ThemeContextValue {\n  theme: string;\n  variant: ThemeVariant;\n  availableThemes: ThemeMetadata[];\n  setTheme: (newTheme: string | ThemeDefinition) => void;\n  setVariant: (newVariant: ThemeVariant) => void;\n  toggleVariant: () => void;\n  registerTheme: (theme: ThemeDefinition) => void;\n  registerThemes: (themes: ThemeDefinition[]) => void;\n  getAvailableThemes: () => ThemeMetadata[];\n  getThemeDefinition: (themeId: string) => ThemeDefinition | null;\n  unregisterTheme: (themeId: string) => void;\n  reinjectedAllThemeCSS: () => void;\n}\n\nexport interface ThemeProviderProps {\n  children: ReactNode;\n  theme?: string;\n  variant?: ThemeVariant;\n  detectSystem?: boolean;\n  customThemes?: ThemeDefinition[];\n  autoInjectCSS?: boolean;\n}\n\n// Available themes registry - now stores full theme objects\nlet AVAILABLE_THEMES: ThemeMetadata[] = [\n  { id: 'default', name: 'Default' },\n  { id: 'aurora', name: 'Aurora' },\n  { id: 'metro', name: 'Metro' },\n  { id: 'neon', name: 'Neon' },\n  { id: 'ruby', name: 'Ruby' },\n  { id: 'studio', name: 'Studio' }\n];\n\n// Store full theme definitions for dynamic injection\nconst THEME_DEFINITIONS = new Map<string, ThemeDefinition>();\n\n// Default theme colors from globals.css - used for fallbacks\nconst DEFAULT_COLOR_SCHEMA: { light: ThemeColors; dark: ThemeColors } = {\n  light: {\n    // Base colors - from @theme in globals.css\n    background: 'oklch(0.99 0.002 240)',\n    foreground: 'oklch(0.08 0.015 240)',\n    card: 'oklch(0.995 0.001 240)',\n    cardForeground: 'oklch(0.08 0.015 240)',\n    popover: 'oklch(0.985 0.003 240)',\n    popoverForeground: 'oklch(0.08 0.015 240)',\n    \n    // Interactive colors\n    primary: 'oklch(0.48 0.18 240)', // True sky blue\n    primaryForeground: 'oklch(0.98 0.005 240)',\n    secondary: 'oklch(0.88 0.03 220)', // Grayish blue\n    secondaryForeground: 'oklch(0.25 0.05 220)',\n    muted: 'oklch(0.95 0.01 240)',\n    mutedForeground: 'oklch(0.38 0.04 240)',\n    accent: 'oklch(0.52 0.12 200)', // Sea green tinted blue\n    accentForeground: 'oklch(0.98 0.005 200)',\n    \n    // State colors\n    destructive: 'oklch(0.55 0.18 20)',\n    destructiveForeground: 'oklch(0.98 0.002 20)',\n    \n    // Border colors\n    border: 'oklch(0.90 0.008 220)',\n    input: 'oklch(0.90 0.008 220)',\n    ring: 'oklch(0.48 0.18 240)',\n    \n    // Chart colors\n    chart1: 'oklch(0.48 0.18 240)',\n    chart2: 'oklch(0.52 0.12 200)',\n    chart3: 'oklch(0.42 0.16 235)',\n    chart4: 'oklch(0.60 0.12 250)',\n    chart5: 'oklch(0.88 0.03 220)',\n    \n    // Sidebar colors\n    sidebar: 'oklch(0.985 0.003 240)',\n    sidebarForeground: 'oklch(0.08 0.015 240)',\n    sidebarPrimary: 'oklch(0.48 0.18 240)',\n    sidebarPrimaryForeground: 'oklch(0.98 0.005 240)',\n    sidebarAccent: 'oklch(0.95 0.01 240)',\n    sidebarAccentForeground: 'oklch(0.20 0.08 240)',\n    sidebarBorder: 'oklch(0.90 0.008 220)',\n    sidebarRing: 'oklch(0.48 0.18 240)',\n  },\n  \n  dark: {\n    // Base colors - from .dark in globals.css\n    background: 'oklch(0.12 0.015 240)',\n    foreground: 'oklch(0.92 0.008 240)',\n    card: 'oklch(0.18 0.025 240)',\n    cardForeground: 'oklch(0.92 0.008 240)',\n    popover: 'oklch(0.18 0.025 240)',\n    popoverForeground: 'oklch(0.92 0.008 240)',\n    \n    // Interactive colors\n    primary: 'oklch(0.58 0.14 240)', // Softer sky blue for dark mode\n    primaryForeground: 'oklch(0.95 0.005 240)',\n    secondary: 'oklch(0.25 0.03 220)', // Dark grayish blue\n    secondaryForeground: 'oklch(0.82 0.02 220)',\n    muted: 'oklch(0.18 0.02 240)',\n    mutedForeground: 'oklch(0.68 0.025 240)',\n    accent: 'oklch(0.68 0.10 75)', // Soft golden yellow for dark mode\n    accentForeground: 'oklch(0.12 0.015 75)',\n    \n    // State colors\n    destructive: 'oklch(0.52 0.16 20)',\n    destructiveForeground: 'oklch(0.92 0.008 240)',\n    \n    // Border colors\n    border: 'oklch(0.30 0.008 220)',\n    input: 'oklch(0.30 0.008 220)',\n    ring: 'oklch(0.58 0.14 240)',\n    \n    // Chart colors\n    chart1: 'oklch(0.58 0.14 240)',\n    chart2: 'oklch(0.68 0.10 75)',\n    chart3: 'oklch(0.55 0.12 235)',\n    chart4: 'oklch(0.62 0.11 250)',\n    chart5: 'oklch(0.25 0.03 220)',\n    \n    // Sidebar colors\n    sidebar: 'oklch(0.18 0.025 240)',\n    sidebarForeground: 'oklch(0.92 0.008 240)',\n    sidebarPrimary: 'oklch(0.58 0.14 240)',\n    sidebarPrimaryForeground: 'oklch(0.95 0.005 240)',\n    sidebarAccent: 'oklch(0.18 0.02 240)',\n    sidebarAccentForeground: 'oklch(0.82 0.02 240)',\n    sidebarBorder: 'oklch(0.30 0.008 220)',\n    sidebarRing: 'oklch(0.58 0.14 240)',\n  }\n};\n\n/**\n * Convert theme object colors to CSS variables\n */\nfunction generateCSSVariables(colors: ThemeColors): string {\n  return Object.entries(colors)\n    .map(([key, value]) => {\n      const cssKey = `--color-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`;\n      return `  ${cssKey}: ${value};`;\n    })\n    .join('\\n');\n}\n\n/**\n * Merge theme colors with default fallbacks for missing properties\n */\nfunction mergeWithDefaults(themeColors: Partial<ThemeColors>, defaults: ThemeColors): ThemeColors {\n  return {\n    ...defaults,  // Start with complete defaults\n    ...themeColors  // Override with theme-specific colors\n  } as ThemeColors;\n}\n\n/**\n * Validate and warn about missing colors\n */\nfunction validateTheme(theme: ThemeDefinition): ThemeValidation {\n  if (!theme.light || !theme.dark) {\n    return { isComplete: false, lightMissing: [], darkMissing: [] };\n  }\n  \n  const requiredColors = Object.keys(DEFAULT_COLOR_SCHEMA.light) as (keyof ThemeColors)[];\n  const lightMissing = requiredColors.filter(color => !theme.light[color]);\n  const darkMissing = requiredColors.filter(color => !theme.dark[color]);\n  \n  if (lightMissing.length > 0) {\n    console.warn(`‚ö†Ô∏è Theme ${theme.id} missing ${lightMissing.length} light colors:`, lightMissing);\n    console.info(`üí° These will fallback to default theme values`);\n  }\n  \n  if (darkMissing.length > 0) {\n    console.warn(`‚ö†Ô∏è Theme ${theme.id} missing ${darkMissing.length} dark colors:`, darkMissing);\n    console.info(`üí° These will fallback to default theme values`);\n  }\n  \n  return {\n    isComplete: lightMissing.length === 0 && darkMissing.length === 0,\n    lightMissing: lightMissing as string[],\n    darkMissing: darkMissing as string[]\n  };\n}\n\n/**\n * Inject CSS for a theme into the document with default fallbacks\n */\nfunction injectThemeCSS(theme: ThemeDefinition): void {\n  if (!theme.light || !theme.dark) {\n    console.warn(`Theme ${theme.id} missing light/dark definitions`);\n    return;\n  }\n\n  // Validate theme and warn about missing colors\n  const validation = validateTheme(theme);\n  \n  // Merge theme colors with defaults for complete coverage\n  const completeLight = mergeWithDefaults(theme.light, DEFAULT_COLOR_SCHEMA.light);\n  const completeDark = mergeWithDefaults(theme.dark, DEFAULT_COLOR_SCHEMA.dark);\n  \n  if (!validation.isComplete) {\n    const totalMissing = validation.lightMissing.length + validation.darkMissing.length;\n    console.log(`üîß Theme ${theme.id}: Added ${totalMissing} fallback colors from default theme`);\n  }\n\n  const styleId = `theme-${theme.id}-dynamic`;\n  \n  // Remove existing style for this theme\n  const existingStyle = document.getElementById(styleId);\n  if (existingStyle) {\n    existingStyle.remove();\n  }\n\n  // Generate CSS with complete color sets\n  const lightVariables = generateCSSVariables(completeLight);\n  const darkVariables = generateCSSVariables(completeDark);\n\n  const css = `\n/* ${theme.name} Theme - With Default Fallbacks */\n.theme-${theme.id} {\n${lightVariables}\n}\n\n.theme-${theme.id}.dark {\n${darkVariables}\n}\n`;\n\n  // Create and inject style element\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = css;\n  document.head.appendChild(styleElement);\n\n  console.log(`‚úÖ Injected complete CSS for theme: ${theme.name} (${theme.id})`);\n}\n\n/**\n * Register a custom theme with optional CSS injection and default fallbacks\n */\nexport function registerTheme(theme: ThemeDefinition, injectCSS: boolean = true): void {\n  if (!theme || !theme.id || !theme.name) {\n    console.warn('registerTheme: Theme must have id and name properties');\n    return;\n  }\n  \n  // Store full theme definition\n  THEME_DEFINITIONS.set(theme.id, theme);\n  \n  // Add to available themes if not already there\n  if (!AVAILABLE_THEMES.find(t => t.id === theme.id)) {\n    AVAILABLE_THEMES.push({ id: theme.id, name: theme.name });\n  }\n\n  // Inject CSS if theme has color definitions and we're in browser\n  if (injectCSS && typeof window !== 'undefined' && theme.light && theme.dark) {\n    injectThemeCSS(theme);\n  }\n\n  console.log(`üìù Registered theme: ${theme.name} (${theme.id})`);\n}\n\n/**\n * Register multiple themes at once\n */\nexport function registerThemes(themes: ThemeDefinition[], injectCSS: boolean = true): void {\n  themes.forEach(theme => registerTheme(theme, injectCSS));\n}\n\n/**\n * Get all available themes (built-in + custom)\n */\nexport function getAvailableThemes(): ThemeMetadata[] {\n  return [...AVAILABLE_THEMES];\n}\n\n/**\n * Get theme definition by ID\n */\nexport function getThemeDefinition(themeId: string): ThemeDefinition | null {\n  return THEME_DEFINITIONS.get(themeId) || null;\n}\n\n/**\n * Remove a custom theme and its CSS\n */\nexport function unregisterTheme(themeId: string): void {\n  const builtInThemes = ['default', 'aurora', 'metro', 'neon', 'ruby', 'studio'];\n  if (builtInThemes.includes(themeId)) {\n    console.warn(`Cannot remove built-in theme: ${themeId}`);\n    return;\n  }\n  \n  // Remove from registry\n  AVAILABLE_THEMES = AVAILABLE_THEMES.filter(t => t.id !== themeId);\n  THEME_DEFINITIONS.delete(themeId);\n  \n  // Remove injected CSS\n  if (typeof window !== 'undefined') {\n    const styleElement = document.getElementById(`theme-${themeId}-dynamic`);\n    if (styleElement) {\n      styleElement.remove();\n    }\n  }\n  \n  console.log(`üóëÔ∏è Unregistered theme: ${themeId}`);\n}\n\n/**\n * Re-inject CSS for all registered dynamic themes\n * Useful for SSR or when styles get cleared\n */\nexport function reinjectedAllThemeCSS(): void {\n  if (typeof window === 'undefined') return;\n  \n  THEME_DEFINITIONS.forEach((theme) => {\n    if (theme.light && theme.dark) {\n      injectThemeCSS(theme);\n    }\n  });\n}\n\n// Theme context\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined);\n\n/**\n * Enhanced theme provider component with dynamic CSS injection and default fallbacks\n */\nexport function ThemeProvider({\n  children,\n  theme = 'default',\n  variant = 'light',\n  detectSystem = true,\n  customThemes = [],\n  autoInjectCSS = true\n}: ThemeProviderProps): React.JSX.Element {\n  const [themeState, setThemeState] = useState<{\n    theme: string;\n    variant: ThemeVariant;\n  }>({\n    theme,\n    variant\n  });\n\n  // Register custom themes on mount\n  useEffect(() => {\n    if (customThemes.length > 0) {\n      registerThemes(customThemes, autoInjectCSS);\n    }\n  }, [customThemes, autoInjectCSS]);\n\n  // Re-inject CSS on mount (useful for SSR or hot reloads)\n  useEffect(() => {\n    if (autoInjectCSS && typeof window !== 'undefined') {\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        reinjectedAllThemeCSS();\n      }, 0);\n    }\n  }, [autoInjectCSS]);\n\n  // Initialize theme from localStorage or props\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const saved = localStorage.getItem('uikit-theme');\n      if (saved) {\n        const { theme, variant } = JSON.parse(saved);\n        setThemeState({ theme, variant });\n      } else if (detectSystem) {\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        if (prefersDark) {\n          setThemeState(prev => ({ ...prev, variant: 'dark' }));\n        }\n      }\n    } catch (e) {\n      console.warn('Failed to load theme from localStorage:', e);\n    }\n  }, [detectSystem]);\n  \n  // Apply theme classes when state changes\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    const { theme, variant } = themeState;\n    const root = document.documentElement;\n    \n    // Remove existing theme classes\n    root.classList.remove('dark', 'light');\n    // Remove all possible theme classes (including dynamically registered ones)\n    AVAILABLE_THEMES.forEach(t => {\n      root.classList.remove(`theme-${t.id}`);\n    });\n    \n    // Add new theme classes\n    if (theme !== 'default') {\n      root.classList.add(`theme-${theme}`);\n    }\n    root.classList.add(variant);\n    \n    // Save preferences\n    try {\n      localStorage.setItem('uikit-theme', JSON.stringify({ theme, variant }));\n    } catch (e) {\n      console.warn('Failed to save theme to localStorage:', e);\n    }\n    \n    console.log(`üé® Applied theme: ${theme} (${variant})`);\n  }, [themeState]);\n  \n  // Listen for system preference changes\n  useEffect(() => {\n    if (!detectSystem || typeof window === 'undefined') return;\n    \n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const handleChange = (e: MediaQueryListEvent) => {\n      try {\n        const saved = localStorage.getItem('uikit-theme');\n        if (!saved) {\n          setThemeState(prev => ({\n            ...prev,\n            variant: e.matches ? 'dark' : 'light'\n          }));\n        }\n      } catch (e) {\n        console.warn('Failed to handle system preference change:', e);\n      }\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [detectSystem]);\n  \n  // Create context value\n  const contextValue: ThemeContextValue = {\n    theme: themeState.theme,\n    variant: themeState.variant,\n    availableThemes: AVAILABLE_THEMES,\n    \n    setTheme: (newTheme: string | ThemeDefinition) => {\n      if (typeof newTheme === 'string') {\n        // Check if theme exists in registry\n        const themeExists = AVAILABLE_THEMES.find(t => t.id === newTheme);\n        if (!themeExists) {\n          console.warn(`Theme '${newTheme}' not found in registry. Available themes:`, \n            AVAILABLE_THEMES.map(t => t.id));\n        }\n        setThemeState(prev => ({ ...prev, theme: newTheme }));\n      } else if (typeof newTheme === 'object' && newTheme.id) {\n        // Auto-register theme object and set it\n        registerTheme(newTheme, autoInjectCSS);\n        setThemeState(prev => ({ ...prev, theme: newTheme.id }));\n      } else {\n        console.warn('setTheme: Invalid theme format. Expected string ID or theme object.');\n      }\n    },\n    \n    setVariant: (newVariant: ThemeVariant) => {\n      if (newVariant === 'light' || newVariant === 'dark') {\n        setThemeState(prev => ({ ...prev, variant: newVariant }));\n      } else {\n        console.warn('setVariant: Invalid variant. Expected \"light\" or \"dark\".');\n      }\n    },\n    \n    toggleVariant: () => {\n      setThemeState(prev => ({\n        ...prev,\n        variant: prev.variant === 'light' ? 'dark' : 'light'\n      }));\n    },\n\n    // Expose theme management functions\n    registerTheme: (theme: ThemeDefinition) => registerTheme(theme, autoInjectCSS),\n    registerThemes: (themes: ThemeDefinition[]) => registerThemes(themes, autoInjectCSS),\n    getAvailableThemes,\n    getThemeDefinition,\n    unregisterTheme,\n    reinjectedAllThemeCSS\n  };\n  \n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\n/**\n * Hook to access enhanced theme context\n */\nexport function useTheme(): ThemeContextValue {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}"],"names":["AVAILABLE_THEMES","THEME_DEFINITIONS","DEFAULT_COLOR_SCHEMA","generateCSSVariables","colors","key","value","mergeWithDefaults","themeColors","defaults","validateTheme","theme","requiredColors","lightMissing","color","darkMissing","injectThemeCSS","validation","completeLight","completeDark","totalMissing","styleId","existingStyle","lightVariables","darkVariables","css","styleElement","registerTheme","injectCSS","t","registerThemes","themes","getAvailableThemes","getThemeDefinition","themeId","unregisterTheme","reinjectedAllThemeCSS","ThemeContext","createContext","ThemeProvider","children","variant","detectSystem","customThemes","autoInjectCSS","themeState","setThemeState","useState","useEffect","saved","prev","e","root","mediaQuery","handleChange","contextValue","newTheme","newVariant","useTheme","context","useContext"],"mappings":"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"}
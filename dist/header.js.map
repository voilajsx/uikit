{"version":3,"file":"header.js","sources":["../src/components/sections/header.tsx"],"sourcesContent":["/**\n * Header component with proper responsive behavior and light hover colors\n * @module @voilajsx/uikit\n * @file src/components/sections/header.tsx\n */\n\nimport * as React from 'react';\nimport { forwardRef, createContext, useContext, useState, useEffect } from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Menu, X, ChevronDown } from 'lucide-react';\nimport type { NavigationItem, Size } from '@/types';\n\n/**\n * Header context for sharing configuration\n */\nconst HeaderContext = createContext<{\n  tone: 'clean' | 'subtle' | 'brand' | 'contrast';\n  size: Size;\n}>({\n  tone: 'clean',\n  size: 'xl',\n});\n\n/**\n * Header variants with tone-based semantic colors\n */\nconst headerVariants = cva(\n  'w-full border-b transition-all duration-200 z-40',\n  {\n    variants: {\n      tone: {\n        clean: [\n          'bg-background/80 backdrop-blur-sm border-border/40 supports-[backdrop-filter]:bg-background/60',\n          'text-foreground'\n        ],\n        subtle: [\n          'bg-muted/50 backdrop-blur-sm border-border/30',\n          'text-foreground'\n        ],\n        brand: [\n          'bg-primary border-primary-foreground/20',\n          'text-primary-foreground'\n        ],\n        contrast: [\n          'bg-zinc-900 border-zinc-700/40',\n          'text-zinc-100'\n        ]\n      },\n      position: {\n        sticky: 'sticky top-0',\n        fixed: 'fixed top-0 left-0 right-0',\n        relative: 'relative'\n      }\n    },\n    defaultVariants: {\n      tone: 'clean',\n      position: 'sticky'\n    }\n  }\n);\n\n/**\n * Container variants for responsive sizing\n */\nconst containerVariants = cva(\n  'mx-auto flex items-center justify-between',\n  {\n    variants: {\n      size: {\n        sm: 'max-w-2xl h-12 px-4',\n        md: 'max-w-4xl h-14 px-4 sm:px-6',\n        lg: 'max-w-6xl h-16 px-4 sm:px-6 lg:px-8',\n        xl: 'max-w-7xl h-16 px-4 sm:px-6 lg:px-8',\n        full: 'max-w-full h-16 px-4 sm:px-6 lg:px-8'\n      }\n    },\n    defaultVariants: {\n      size: 'xl'\n    }\n  }\n);\n\n/**\n * Header component props\n */\nexport interface HeaderProps \n  extends React.HTMLAttributes<HTMLElement>,\n    VariantProps<typeof headerVariants> {\n  /** Visual styling tone */\n  tone?: 'clean' | 'subtle' | 'brand' | 'contrast';\n  /** Header size (width + height + padding) */\n  size?: Size;\n  /** Header positioning */\n  position?: 'sticky' | 'fixed' | 'relative';\n  /** Header content */\n  children: React.ReactNode;\n}\n\n/**\n * Main Header component\n */\nconst HeaderComponent = forwardRef<HTMLElement, HeaderProps>(({ \n  className,\n  tone = 'clean',\n  size = 'xl',\n  position = 'sticky',\n  children,\n  ...props \n}, ref) => {\n  return (\n    <HeaderContext.Provider value={{ tone, size }}>\n      <header\n        ref={ref}\n        className={cn(headerVariants({ tone, position }), className)}\n        {...props}\n      >\n        <div className={cn(containerVariants({ size }))}>\n          {children}\n        </div>\n      </header>\n    </HeaderContext.Provider>\n  );\n});\n\nHeaderComponent.displayName = 'Header';\n\n/**\n * Header Logo section props\n */\nexport interface HeaderLogoProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Logo content */\n  children: React.ReactNode;\n}\n\n/**\n * Header Logo section (always on the left)\n */\nconst HeaderLogo = forwardRef<HTMLDivElement, HeaderLogoProps>(({ \n  className, \n  children, \n  ...props \n}, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center flex-shrink-0', className)}\n    {...props}\n  >\n    {children}\n  </div>\n));\n\nHeaderLogo.displayName = 'HeaderLogo';\n\n/**\n * Header Navigation props\n */\nexport interface HeaderNavProps extends React.HTMLAttributes<HTMLDivElement> {\n  /** Navigation items */\n  navigation?: NavigationItem[];\n  /** Current path for active states */\n  currentPath?: string;\n  /** Navigation handler */\n  onNavigate?: (href: string, item: NavigationItem) => void;\n}\n\n/**\n * Header Navigation with proper responsive behavior\n */\nconst HeaderNav = forwardRef<HTMLDivElement, HeaderNavProps>(({ \n  navigation = [],\n  currentPath = '',\n  onNavigate,\n  className, \n  ...props \n}, ref) => {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [expandedMobileItems, setExpandedMobileItems] = useState(new Set<string>());\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [isMounted, setIsMounted] = useState(false);\n  const { tone } = useContext(HeaderContext);\n\n  // Ensure component is mounted\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Close mobile menu on resize to desktop\n  useEffect(() => {\n    if (!isMounted) return;\n    \n    const handleResize = () => {\n      if (window.innerWidth >= 768) {\n        setMobileOpen(false);\n        setExpandedMobileItems(new Set());\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isMounted]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (!isMounted) return;\n    \n    if (mobileOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [mobileOpen, isMounted]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleOutsideClick = () => setOpenDropdown(null);\n    \n    if (openDropdown !== null) {\n      document.addEventListener('click', handleOutsideClick);\n      return () => document.removeEventListener('click', handleOutsideClick);\n    }\n  }, [openDropdown]);\n\n  // Handle mobile dropdown toggle\n  const toggleMobileDropdown = (key: string) => {\n    const newExpanded = new Set(expandedMobileItems);\n    if (newExpanded.has(key)) {\n      newExpanded.delete(key);\n    } else {\n      newExpanded.add(key);\n    }\n    setExpandedMobileItems(newExpanded);\n  };\n\n  // Handle navigation click\n  const handleItemClick = (item: NavigationItem) => {\n    setMobileOpen(false);\n    setExpandedMobileItems(new Set());\n    setOpenDropdown(null);\n    \n    if (item.href && onNavigate) {\n      onNavigate(item.href, item);\n    } else if (item.onClick) {\n      item.onClick();\n    }\n  };\n\n  // Desktop button styles with light hover colors only\n  const getDesktopButtonStyles = (isActive = false) => {\n    const baseStyles = 'px-3 py-2 text-sm font-medium transition-colors duration-200 rounded-md flex items-center gap-2';\n    \n    switch (tone) {\n      case 'subtle':\n        return cn(\n          baseStyles,\n          isActive \n            ? 'bg-background text-foreground shadow-sm' \n            : 'text-muted-foreground hover:text-foreground hover:bg-white/80'\n        );\n      case 'brand':\n        return cn(\n          baseStyles,\n          isActive \n            ? 'bg-primary-foreground/20 text-primary-foreground shadow-sm' \n            : 'text-primary-foreground/90 hover:text-primary-foreground hover:bg-white/10'\n        );\n      case 'contrast':\n        return cn(\n          baseStyles,\n          isActive \n            ? 'bg-zinc-700 text-zinc-100 shadow-sm' \n            : 'text-zinc-200 hover:text-zinc-100 hover:bg-white/5'\n        );\n      default: // clean\n        return cn(\n          baseStyles,\n          isActive \n            ? 'bg-gray-100 text-foreground shadow-sm' \n            : 'text-foreground hover:text-foreground hover:bg-gray-50'\n        );\n    }\n  };\n\n  // Mobile button styles\n  const getMobileButtonStyles = (isActive = false) => {\n    return cn(\n      'w-full flex items-center px-3 py-2 text-left transition-colors duration-200 rounded-lg',\n      isActive \n        ? 'bg-secondary text-secondary-foreground' \n        : 'text-foreground hover:bg-gray-50'\n    );\n  };\n\n  // Mobile toggle button styles\n  const getMobileToggleStyles = () => {\n    switch (tone) {\n      case 'subtle':\n        return 'text-muted-foreground hover:text-foreground hover:bg-white/80';\n      case 'brand':\n        return 'text-primary-foreground hover:bg-white/10';\n      case 'contrast':\n        return 'text-zinc-100 hover:bg-white/5';\n      default: // clean\n        return 'text-foreground hover:bg-gray-50';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center ml-auto\">\n      {/* Desktop Navigation - Hidden on mobile, visible on desktop */}\n      <nav className={cn('hidden md:flex items-center space-x-1', className)} ref={ref} {...props}>\n        {navigation.map((item) => {\n          const hasDropdown = item.items && item.items.length > 0;\n          const isOpen = openDropdown === item.key;\n          const isActive = item.href ? currentPath === item.href : item.isActive;\n\n          return (\n            <div key={item.key} className=\"relative\">\n              <button\n                type=\"button\"\n                className={cn(getDesktopButtonStyles(isActive), item.className)}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  if (hasDropdown) {\n                    setOpenDropdown(isOpen ? null : item.key);\n                  } else {\n                    setOpenDropdown(null);\n                    handleItemClick(item);\n                  }\n                }}\n              >\n                {item.icon && <item.icon className=\"h-4 w-4\" />}\n                <span>{item.label}</span>\n                {hasDropdown && (\n                  <ChevronDown className={cn(\n                    'h-3 w-3 transition-transform duration-200',\n                    isOpen && 'rotate-180'\n                  )} />\n                )}\n              </button>\n              \n              {/* Desktop Dropdown Menu */}\n              {hasDropdown && isOpen && (\n                <div \n                  className=\"absolute top-full left-0 w-48 bg-background border border-border rounded-lg shadow-lg z-50 mt-1\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <div className=\"py-1\">\n                    {item.items?.map((subItem) => {\n                      const subIsActive = subItem.href ? currentPath === subItem.href : subItem.isActive;\n                      \n                      return (\n                        <button\n                          key={subItem.key}\n                          type=\"button\"\n                          className={cn(\n                            'w-full px-3 py-2 text-left text-sm transition-colors flex items-center gap-2',\n                            'hover:bg-gray-50 focus:bg-gray-50 focus:outline-none',\n                            subIsActive \n                              ? 'bg-gray-100 text-foreground font-medium' \n                              : 'text-foreground'\n                          )}\n                          onClick={() => {\n                            setOpenDropdown(null);\n                            handleItemClick(subItem);\n                          }}\n                        >\n                          {subItem.icon && <subItem.icon className=\"h-4 w-4\" />}\n                          <span>{subItem.label}</span>\n                          {subItem.badge && (\n                            <span className=\"ml-auto text-xs bg-gray-100 text-gray-600 px-1.5 py-0.5 rounded\">\n                              {subItem.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </nav>\n      \n      {/* Mobile Toggle Button - Hidden on desktop, visible on mobile */}\n      <Button\n        variant=\"ghost\"\n        size=\"icon\"\n        className={cn('md:hidden', getMobileToggleStyles())}\n        onClick={() => setMobileOpen(!mobileOpen)}\n        aria-label={mobileOpen ? 'Close menu' : 'Open menu'}\n      >\n        {mobileOpen ? <X className=\"h-5 w-5\" /> : <Menu className=\"h-5 w-5\" />}\n      </Button>\n      \n      {/* Mobile Navigation Menu - Hidden on desktop, shows on mobile when toggled */}\n      {mobileOpen && (\n        <div className=\"fixed top-16 left-0 right-0 z-40 md:hidden bg-background border-b border-border/40 shadow-lg\">\n          <div className=\"max-h-96 overflow-y-auto\">\n            <div className=\"px-4 py-4 space-y-2\">\n              {navigation.map((item) => {\n                const hasSubItems = item.items && item.items.length > 0;\n                const isExpanded = expandedMobileItems.has(item.key);\n                const isActive = item.href ? currentPath === item.href : item.isActive;\n\n                return (\n                  <div key={item.key} className=\"space-y-1\">\n                    <button \n                      type=\"button\"\n                      className={cn(getMobileButtonStyles(isActive), item.className)}\n                      onClick={() => hasSubItems ? toggleMobileDropdown(item.key) : handleItemClick(item)}\n                    >\n                      {item.icon && <item.icon className=\"h-4 w-4 mr-3 flex-shrink-0\" />}\n                      <span className=\"flex-1 text-sm\">{item.label}</span>\n                      {item.badge && (\n                        <span className=\"text-xs bg-gray-100 text-gray-600 px-1.5 py-0.5 rounded mr-2\">\n                          {item.badge}\n                        </span>\n                      )}\n                      {hasSubItems && (\n                        <ChevronDown className={cn(\n                          'h-4 w-4 transition-transform duration-200 flex-shrink-0',\n                          isExpanded && 'rotate-180'\n                        )} />\n                      )}\n                    </button>\n                    \n                    {/* Mobile Submenu */}\n                    {hasSubItems && isExpanded && (\n                      <div className=\"ml-6 space-y-1 border-l border-border/30 pl-4\">\n                        {item.items?.map((subItem) => {\n                          const subIsActive = subItem.href ? currentPath === subItem.href : subItem.isActive;\n                          \n                          return (\n                            <button\n                              key={subItem.key}\n                              type=\"button\"\n                              className={cn(\n                                'w-full flex items-center px-3 py-2 text-left transition-colors rounded-lg',\n                                subIsActive \n                                  ? 'bg-secondary text-secondary-foreground' \n                                  : 'text-muted-foreground hover:text-foreground hover:bg-gray-50'\n                              )}\n                              onClick={() => handleItemClick(subItem)}\n                            >\n                              {subItem.icon && <subItem.icon className=\"h-3 w-3 mr-3 flex-shrink-0\" />}\n                              <span className=\"flex-1 text-sm\">{subItem.label}</span>\n                              {subItem.badge && (\n                                <span className=\"text-xs bg-gray-100 text-gray-600 px-1.5 py-0.5 rounded\">\n                                  {subItem.badge}\n                                </span>\n                              )}\n                            </button>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nHeaderNav.displayName = 'HeaderNav';\n\n/**\n * Header with compound components\n */\nconst Header = Object.assign(HeaderComponent, {\n  Logo: HeaderLogo,\n  Nav: HeaderNav,\n});\n\n/**\n * Export Header with compound components and individual components\n */\nexport { \n  Header,\n  HeaderLogo,\n  HeaderNav,\n  headerVariants,\n  containerVariants\n};"],"names":["HeaderContext","createContext","headerVariants","cva","containerVariants","HeaderComponent","forwardRef","className","tone","size","position","children","props","ref","jsx","cn","HeaderLogo","HeaderNav","navigation","currentPath","onNavigate","mobileOpen","setMobileOpen","useState","expandedMobileItems","setExpandedMobileItems","openDropdown","setOpenDropdown","isMounted","setIsMounted","useContext","useEffect","handleResize","handleOutsideClick","toggleMobileDropdown","key","newExpanded","handleItemClick","item","getDesktopButtonStyles","isActive","baseStyles","getMobileButtonStyles","getMobileToggleStyles","jsxs","hasDropdown","isOpen","e","ChevronDown","subItem","subIsActive","Button","X","Menu","hasSubItems","isExpanded","_a","Header"],"mappings":"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"}
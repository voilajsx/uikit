{"version":3,"file":"calendar.js","sources":["../node_modules/@date-fns/tz/tzOffset/index.js","../node_modules/@date-fns/tz/date/mini.js","../node_modules/@date-fns/tz/date/index.js","../node_modules/react-day-picker/dist/esm/UI.js","../node_modules/date-fns/constants.js","../node_modules/date-fns/constructFrom.js","../node_modules/date-fns/toDate.js","../node_modules/date-fns/addDays.js","../node_modules/date-fns/addMonths.js","../node_modules/date-fns/_lib/defaultOptions.js","../node_modules/date-fns/startOfWeek.js","../node_modules/date-fns/startOfISOWeek.js","../node_modules/date-fns/getISOWeekYear.js","../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../node_modules/date-fns/_lib/normalizeDates.js","../node_modules/date-fns/startOfDay.js","../node_modules/date-fns/differenceInCalendarDays.js","../node_modules/date-fns/startOfISOWeekYear.js","../node_modules/date-fns/addWeeks.js","../node_modules/date-fns/addYears.js","../node_modules/date-fns/max.js","../node_modules/date-fns/min.js","../node_modules/date-fns/isSameDay.js","../node_modules/date-fns/isDate.js","../node_modules/date-fns/isValid.js","../node_modules/date-fns/differenceInCalendarMonths.js","../node_modules/date-fns/endOfMonth.js","../node_modules/date-fns/_lib/normalizeInterval.js","../node_modules/date-fns/eachMonthOfInterval.js","../node_modules/date-fns/startOfMonth.js","../node_modules/date-fns/endOfYear.js","../node_modules/date-fns/startOfYear.js","../node_modules/date-fns/endOfWeek.js","../node_modules/date-fns/endOfISOWeek.js","../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../node_modules/date-fns/locale/en-US/_lib/localize.js","../node_modules/date-fns/locale/_lib/buildMatchFn.js","../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../node_modules/date-fns/locale/en-US/_lib/match.js","../node_modules/date-fns/locale/en-US.js","../node_modules/date-fns/getDayOfYear.js","../node_modules/date-fns/getISOWeek.js","../node_modules/date-fns/getWeekYear.js","../node_modules/date-fns/startOfWeekYear.js","../node_modules/date-fns/getWeek.js","../node_modules/date-fns/_lib/addLeadingZeros.js","../node_modules/date-fns/_lib/format/lightFormatters.js","../node_modules/date-fns/_lib/format/formatters.js","../node_modules/date-fns/_lib/format/longFormatters.js","../node_modules/date-fns/_lib/protectedTokens.js","../node_modules/date-fns/format.js","../node_modules/date-fns/getDaysInMonth.js","../node_modules/date-fns/getMonth.js","../node_modules/date-fns/getYear.js","../node_modules/date-fns/isAfter.js","../node_modules/date-fns/isBefore.js","../node_modules/date-fns/isSameMonth.js","../node_modules/date-fns/isSameYear.js","../node_modules/date-fns/setMonth.js","../node_modules/date-fns/setYear.js","../node_modules/react-day-picker/dist/esm/helpers/getBroadcastWeeksInMonth.js","../node_modules/react-day-picker/dist/esm/helpers/startOfBroadcastWeek.js","../node_modules/react-day-picker/dist/esm/helpers/endOfBroadcastWeek.js","../node_modules/react-day-picker/dist/esm/classes/DateLib.js","../node_modules/react-day-picker/dist/esm/classes/CalendarDay.js","../node_modules/react-day-picker/dist/esm/classes/CalendarMonth.js","../node_modules/react-day-picker/dist/esm/classes/CalendarWeek.js","../node_modules/react-day-picker/dist/esm/utils/rangeIncludesDate.js","../node_modules/react-day-picker/dist/esm/utils/typeguards.js","../node_modules/react-day-picker/dist/esm/utils/dateMatchModifiers.js","../node_modules/react-day-picker/dist/esm/helpers/createGetModifiers.js","../node_modules/react-day-picker/dist/esm/helpers/getClassNamesForModifiers.js","../node_modules/react-day-picker/dist/esm/components/Button.js","../node_modules/react-day-picker/dist/esm/components/CaptionLabel.js","../node_modules/react-day-picker/dist/esm/components/Chevron.js","../node_modules/react-day-picker/dist/esm/components/Day.js","../node_modules/react-day-picker/dist/esm/components/DayButton.js","../node_modules/react-day-picker/dist/esm/components/Dropdown.js","../node_modules/react-day-picker/dist/esm/components/DropdownNav.js","../node_modules/react-day-picker/dist/esm/components/Footer.js","../node_modules/react-day-picker/dist/esm/components/Month.js","../node_modules/react-day-picker/dist/esm/components/MonthCaption.js","../node_modules/react-day-picker/dist/esm/components/MonthGrid.js","../node_modules/react-day-picker/dist/esm/components/Months.js","../node_modules/react-day-picker/dist/esm/useDayPicker.js","../node_modules/react-day-picker/dist/esm/components/MonthsDropdown.js","../node_modules/react-day-picker/dist/esm/components/Nav.js","../node_modules/react-day-picker/dist/esm/components/NextMonthButton.js","../node_modules/react-day-picker/dist/esm/components/Option.js","../node_modules/react-day-picker/dist/esm/components/PreviousMonthButton.js","../node_modules/react-day-picker/dist/esm/components/Root.js","../node_modules/react-day-picker/dist/esm/components/Select.js","../node_modules/react-day-picker/dist/esm/components/Week.js","../node_modules/react-day-picker/dist/esm/components/Weekday.js","../node_modules/react-day-picker/dist/esm/components/Weekdays.js","../node_modules/react-day-picker/dist/esm/components/WeekNumber.js","../node_modules/react-day-picker/dist/esm/components/WeekNumberHeader.js","../node_modules/react-day-picker/dist/esm/components/Weeks.js","../node_modules/react-day-picker/dist/esm/components/YearsDropdown.js","../node_modules/react-day-picker/dist/esm/helpers/getComponents.js","../node_modules/react-day-picker/dist/esm/helpers/getDataAttributes.js","../node_modules/react-day-picker/dist/esm/helpers/getDefaultClassNames.js","../node_modules/react-day-picker/dist/esm/formatters/formatCaption.js","../node_modules/react-day-picker/dist/esm/formatters/formatDay.js","../node_modules/react-day-picker/dist/esm/formatters/formatMonthDropdown.js","../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumber.js","../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumberHeader.js","../node_modules/react-day-picker/dist/esm/formatters/formatWeekdayName.js","../node_modules/react-day-picker/dist/esm/formatters/formatYearDropdown.js","../node_modules/react-day-picker/dist/esm/helpers/getFormatters.js","../node_modules/react-day-picker/dist/esm/helpers/getMonthOptions.js","../node_modules/react-day-picker/dist/esm/helpers/getStyleForModifiers.js","../node_modules/react-day-picker/dist/esm/helpers/getWeekdays.js","../node_modules/react-day-picker/dist/esm/helpers/getYearOptions.js","../node_modules/react-day-picker/dist/esm/labels/labelGrid.js","../node_modules/react-day-picker/dist/esm/labels/labelGridcell.js","../node_modules/react-day-picker/dist/esm/labels/labelDayButton.js","../node_modules/react-day-picker/dist/esm/labels/labelNav.js","../node_modules/react-day-picker/dist/esm/labels/labelMonthDropdown.js","../node_modules/react-day-picker/dist/esm/labels/labelNext.js","../node_modules/react-day-picker/dist/esm/labels/labelPrevious.js","../node_modules/react-day-picker/dist/esm/labels/labelWeekday.js","../node_modules/react-day-picker/dist/esm/labels/labelWeekNumber.js","../node_modules/react-day-picker/dist/esm/labels/labelWeekNumberHeader.js","../node_modules/react-day-picker/dist/esm/labels/labelYearDropdown.js","../node_modules/react-day-picker/dist/esm/useAnimation.js","../node_modules/react-day-picker/dist/esm/helpers/getDates.js","../node_modules/react-day-picker/dist/esm/helpers/getDays.js","../node_modules/react-day-picker/dist/esm/helpers/getDisplayMonths.js","../node_modules/react-day-picker/dist/esm/helpers/getInitialMonth.js","../node_modules/react-day-picker/dist/esm/helpers/getMonths.js","../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js","../node_modules/react-day-picker/dist/esm/helpers/getNextMonth.js","../node_modules/react-day-picker/dist/esm/helpers/getPreviousMonth.js","../node_modules/react-day-picker/dist/esm/helpers/getWeeks.js","../node_modules/react-day-picker/dist/esm/helpers/useControlledValue.js","../node_modules/react-day-picker/dist/esm/useCalendar.js","../node_modules/react-day-picker/dist/esm/helpers/calculateFocusTarget.js","../node_modules/react-day-picker/dist/esm/helpers/getFocusableDate.js","../node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js","../node_modules/react-day-picker/dist/esm/useFocus.js","../node_modules/react-day-picker/dist/esm/selection/useMulti.js","../node_modules/react-day-picker/dist/esm/utils/addToRange.js","../node_modules/react-day-picker/dist/esm/utils/rangeContainsDayOfWeek.js","../node_modules/react-day-picker/dist/esm/utils/rangeOverlaps.js","../node_modules/react-day-picker/dist/esm/utils/rangeContainsModifiers.js","../node_modules/react-day-picker/dist/esm/selection/useRange.js","../node_modules/react-day-picker/dist/esm/selection/useSingle.js","../node_modules/react-day-picker/dist/esm/useSelection.js","../node_modules/react-day-picker/dist/esm/DayPicker.js","../src/components/ui/calendar.tsx"],"sourcesContent":["const offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nexport function tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone,\n      hour: \"numeric\",\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split('GMT')[1] || '';\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +values[0];\n  const minutes = +(values[1] || 0);\n  return offsetCache[cacheStr] = hours > 0 ? hours * 60 + minutes : hours * 60 - minutes;\n}","import { tzOffset } from \"../tzOffset/index.js\";\nexport class TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN(tzOffset(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    return -tzOffset(this.timeZone, this);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCMinutes(date.internal.getUTCMinutes() - date.getTimezoneOffset());\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const offset = tzOffset(date.timeZone, date);\n\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postOffset = tzOffset(date.timeZone, date);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newOffset = tzOffset(date.timeZone, date);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}","import { TZDateMini } from \"./mini.js\";\n\n/**\n * UTC date class. It maps getters and setters to corresponding UTC methods,\n * forcing all calculations in the UTC time zone.\n *\n * Combined with date-fns, it allows using the class the same way as\n * the original date class.\n *\n * This complete version provides not only getters, setters,\n * and `getTimezoneOffset`, but also the formatter functions, mirroring\n * all original `Date` functionality. Use this version when you need to format\n * a string or in an environment you don't fully control (a library).\n * For a minimal version, see `UTCDateMini`.\n */\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\nfunction tzName(tz, date) {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    timeZone: tz,\n    timeZoneName: \"long\"\n  }).format(date).slice(12);\n}","/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */\nexport var UI;\n(function (UI) {\n    /** The root component displaying the months and the navigation bar. */\n    UI[\"Root\"] = \"root\";\n    /** The Chevron SVG element used by navigation buttons and dropdowns. */\n    UI[\"Chevron\"] = \"chevron\";\n    /**\n     * The grid cell with the day's date. Extended by {@link DayFlag} and\n     * {@link SelectionState}.\n     */\n    UI[\"Day\"] = \"day\";\n    /** The button containing the formatted day's date, inside the grid cell. */\n    UI[\"DayButton\"] = \"day_button\";\n    /** The caption label of the month (when not showing the dropdown navigation). */\n    UI[\"CaptionLabel\"] = \"caption_label\";\n    /** The container of the dropdown navigation (when enabled). */\n    UI[\"Dropdowns\"] = \"dropdowns\";\n    /** The dropdown element to select for years and months. */\n    UI[\"Dropdown\"] = \"dropdown\";\n    /** The container element of the dropdown. */\n    UI[\"DropdownRoot\"] = \"dropdown_root\";\n    /** The root element of the footer. */\n    UI[\"Footer\"] = \"footer\";\n    /** The month grid. */\n    UI[\"MonthGrid\"] = \"month_grid\";\n    /** Contains the dropdown navigation or the caption label. */\n    UI[\"MonthCaption\"] = \"month_caption\";\n    /** The dropdown with the months. */\n    UI[\"MonthsDropdown\"] = \"months_dropdown\";\n    /** Wrapper of the month grid. */\n    UI[\"Month\"] = \"month\";\n    /** The container of the displayed months. */\n    UI[\"Months\"] = \"months\";\n    /** The navigation bar with the previous and next buttons. */\n    UI[\"Nav\"] = \"nav\";\n    /**\n     * The next month button in the navigation. *\n     *\n     * @since 9.1.0\n     */\n    UI[\"NextMonthButton\"] = \"button_next\";\n    /**\n     * The previous month button in the navigation.\n     *\n     * @since 9.1.0\n     */\n    UI[\"PreviousMonthButton\"] = \"button_previous\";\n    /** The row containing the week. */\n    UI[\"Week\"] = \"week\";\n    /** The group of row weeks in a month (`tbody`). */\n    UI[\"Weeks\"] = \"weeks\";\n    /** The column header with the weekday. */\n    UI[\"Weekday\"] = \"weekday\";\n    /** The row grouping the weekdays in the column headers. */\n    UI[\"Weekdays\"] = \"weekdays\";\n    /** The cell containing the week number. */\n    UI[\"WeekNumber\"] = \"week_number\";\n    /** The cell header of the week numbers column. */\n    UI[\"WeekNumberHeader\"] = \"week_number_header\";\n    /** The dropdown with the years. */\n    UI[\"YearsDropdown\"] = \"years_dropdown\";\n})(UI || (UI = {}));\n/** Enum representing flags for the {@link UI.Day} element. */\nexport var DayFlag;\n(function (DayFlag) {\n    /** The day is disabled. */\n    DayFlag[\"disabled\"] = \"disabled\";\n    /** The day is hidden. */\n    DayFlag[\"hidden\"] = \"hidden\";\n    /** The day is outside the current month. */\n    DayFlag[\"outside\"] = \"outside\";\n    /** The day is focused. */\n    DayFlag[\"focused\"] = \"focused\";\n    /** The day is today. */\n    DayFlag[\"today\"] = \"today\";\n})(DayFlag || (DayFlag = {}));\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */\nexport var SelectionState;\n(function (SelectionState) {\n    /** The day is at the end of a selected range. */\n    SelectionState[\"range_end\"] = \"range_end\";\n    /** The day is at the middle of a selected range. */\n    SelectionState[\"range_middle\"] = \"range_middle\";\n    /** The day is at the start of a selected range. */\n    SelectionState[\"range_start\"] = \"range_start\";\n    /** The day is selected. */\n    SelectionState[\"selected\"] = \"selected\";\n})(SelectionState || (SelectionState = {}));\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */\nexport var Animation;\n(function (Animation) {\n    /** The entering weeks when they appear before the exiting month. */\n    Animation[\"weeks_before_enter\"] = \"weeks_before_enter\";\n    /** The exiting weeks when they disappear before the entering month. */\n    Animation[\"weeks_before_exit\"] = \"weeks_before_exit\";\n    /** The entering weeks when they appear after the exiting month. */\n    Animation[\"weeks_after_enter\"] = \"weeks_after_enter\";\n    /** The exiting weeks when they disappear after the entering month. */\n    Animation[\"weeks_after_exit\"] = \"weeks_after_exit\";\n    /** The entering caption when it appears after the exiting month. */\n    Animation[\"caption_after_enter\"] = \"caption_after_enter\";\n    /** The exiting caption when it disappears after the entering month. */\n    Animation[\"caption_after_exit\"] = \"caption_after_exit\";\n    /** The entering caption when it appears before the exiting month. */\n    Animation[\"caption_before_enter\"] = \"caption_before_enter\";\n    /** The exiting caption when it disappears before the entering month. */\n    Animation[\"caption_before_exit\"] = \"caption_before_exit\";\n})(Animation || (Animation = {}));\n//# sourceMappingURL=UI.js.map","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addYears} function options.\n */\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n * @param options - The options\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount, options) {\n  return addMonths(date, amount * 12, options);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link max} function options.\n */\n\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport function max(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result < date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default max;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link min} function options.\n */\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport function min(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result > date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default min;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { normalizeDates } from \"./normalizeDates.js\";\n\nexport function normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n","import { normalizeInterval } from \"./_lib/normalizeInterval.js\";\nimport { constructFrom } from \"./constructFrom.js\";\n\n/**\n * The {@link eachMonthOfInterval} function options.\n */\n\n/**\n * The {@link eachMonthOfInterval} function result type. It resolves the proper data type.\n */\n\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @typeParam IntervalType - Interval type.\n * @typeParam Options - Options type.\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of months from the month of the interval start to the month of the interval end\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * const result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\nexport function eachMonthOfInterval(interval, options) {\n  const { start, end } = normalizeInterval(options?.in, interval);\n\n  let reversed = +start > +end;\n  const endTime = reversed ? +start : +end;\n  const date = reversed ? end : start;\n  date.setHours(0, 0, 0, 0);\n  date.setDate(1);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+date <= endTime) {\n    dates.push(constructFrom(start, date));\n    date.setMonth(date.getMonth() + step);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachMonthOfInterval;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMonth} function options.\n */\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date. The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments.\n * Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed,\n * or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { endOfWeek } from \"./endOfWeek.js\";\n\n/**\n * The {@link endOfISOWeek} function options.\n */\n\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfISOWeek(date, options) {\n  return endOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeek;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getMonth} function options.\n */\n\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport function getMonth(date, options) {\n  return toDate(date, options?.in).getMonth();\n}\n\n// Fallback for modularized imports:\nexport default getMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getYear} function options.\n */\n\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The year\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport function getYear(date, options) {\n  return toDate(date, options?.in).getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default getYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param date - The date that should be before the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport function isBefore(date, dateToCompare) {\n  return +toDate(date) < +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isBefore;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameMonth} function options.\n */\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same month (and year)\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport function isSameMonth(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    laterDate_.getFullYear() === earlierDate_.getFullYear() &&\n    laterDate_.getMonth() === earlierDate_.getMonth()\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameYear} function options.\n */\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport function isSameYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default isSameYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getDaysInMonth } from \"./getDaysInMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setMonth} function options.\n */\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n * @param options - The options\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport function setMonth(date, month, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const midMonth = constructFrom(options?.in || date, 0);\n  midMonth.setFullYear(year, month, 15);\n  midMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(midMonth);\n\n  // Set the earlier date, allows to wrap Jan 31 to Feb 28\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setMonth;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setYear} function options.\n */\n\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport function setYear(date, year, options) {\n  const date_ = toDate(date, options?.in);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(+date_)) return constructFrom(options?.in || date, NaN);\n\n  date_.setFullYear(year);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default setYear;\n","const FIVE_WEEKS = 5;\nconst FOUR_WEEKS = 4;\n/**\n * Returns the number of weeks to display in the broadcast calendar for a given\n * month.\n *\n * The broadcast calendar may have either 4 or 5 weeks in a month, depending on\n * the start and end dates of the broadcast weeks.\n *\n * @since 9.4.0\n * @param month The month for which to calculate the number of weeks.\n * @param dateLib The date library to use for date manipulation.\n * @returns The number of weeks in the broadcast calendar (4 or 5).\n */\nexport function getBroadcastWeeksInMonth(month, dateLib) {\n    // Get the first day of the month\n    const firstDayOfMonth = dateLib.startOfMonth(month);\n    // Get the day of the week for the first day of the month (1-7, where 1 is Monday)\n    const firstDayOfWeek = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7;\n    const broadcastStartDate = dateLib.addDays(month, -firstDayOfWeek + 1);\n    const lastDateOfLastWeek = dateLib.addDays(broadcastStartDate, FIVE_WEEKS * 7 - 1);\n    const numberOfWeeks = dateLib.getMonth(month) === dateLib.getMonth(lastDateOfLastWeek)\n        ? FIVE_WEEKS\n        : FOUR_WEEKS;\n    return numberOfWeeks;\n}\n//# sourceMappingURL=getBroadcastWeeksInMonth.js.map","/**\n * Returns the start date of the week in the broadcast calendar.\n *\n * The broadcast week starts on Monday. If the first day of the month is not a\n * Monday, this function calculates the previous Monday as the start of the\n * broadcast week.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the start of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The start date of the broadcast week.\n */\nexport function startOfBroadcastWeek(date, dateLib) {\n    const firstOfMonth = dateLib.startOfMonth(date);\n    const dayOfWeek = firstOfMonth.getDay();\n    if (dayOfWeek === 1) {\n        return firstOfMonth;\n    }\n    else if (dayOfWeek === 0) {\n        return dateLib.addDays(firstOfMonth, -1 * 6);\n    }\n    else {\n        return dateLib.addDays(firstOfMonth, -1 * (dayOfWeek - 1));\n    }\n}\n//# sourceMappingURL=startOfBroadcastWeek.js.map","import { getBroadcastWeeksInMonth } from \"./getBroadcastWeeksInMonth.js\";\nimport { startOfBroadcastWeek } from \"./startOfBroadcastWeek.js\";\n/**\n * Returns the end date of the week in the broadcast calendar.\n *\n * The broadcast week ends on the last day of the last broadcast week for the\n * given date.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the end of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The end date of the broadcast week.\n */\nexport function endOfBroadcastWeek(date, dateLib) {\n    const startDate = startOfBroadcastWeek(date, dateLib);\n    const numberOfWeeks = getBroadcastWeeksInMonth(date, dateLib);\n    const endDate = dateLib.addDays(startDate, numberOfWeeks * 7 - 1);\n    return endDate;\n}\n//# sourceMappingURL=endOfBroadcastWeek.js.map","import { TZDate } from \"@date-fns/tz\";\nimport { addDays, addMonths, addWeeks, addYears, differenceInCalendarDays, differenceInCalendarMonths, eachMonthOfInterval, endOfISOWeek, endOfMonth, endOfWeek, endOfYear, format, getISOWeek, getMonth, getWeek, getYear, isAfter, isBefore, isDate, isSameDay, isSameMonth, isSameYear, max, min, setMonth, setYear, startOfDay, startOfISOWeek, startOfMonth, startOfWeek, startOfYear } from \"date-fns\";\nimport { enUS } from \"date-fns/locale/en-US\";\nimport { endOfBroadcastWeek } from \"../helpers/endOfBroadcastWeek.js\";\nimport { startOfBroadcastWeek } from \"../helpers/startOfBroadcastWeek.js\";\n/**\n * A wrapper class around [date-fns](http://date-fns.org) that provides utility\n * methods for date manipulation and formatting.\n *\n * @since 9.2.0\n * @example\n *   const dateLib = new DateLib({ locale: es });\n *   const newDate = dateLib.addDays(new Date(), 5);\n */\nexport class DateLib {\n    /**\n     * Creates an instance of `DateLib`.\n     *\n     * @param options Configuration options for the date library.\n     * @param overrides Custom overrides for the date library functions.\n     */\n    constructor(options, overrides) {\n        /**\n         * Reference to the built-in Date constructor.\n         *\n         * @deprecated Use `newDate()` or `today()`.\n         */\n        this.Date = Date;\n        /**\n         * Creates a new `Date` object representing today's date.\n         *\n         * @since 9.5.0\n         * @returns A `Date` object for today's date.\n         */\n        this.today = () => {\n            if (this.overrides?.today) {\n                return this.overrides.today();\n            }\n            if (this.options.timeZone) {\n                return TZDate.tz(this.options.timeZone);\n            }\n            return new this.Date();\n        };\n        /**\n         * Creates a new `Date` object with the specified year, month, and day.\n         *\n         * @since 9.5.0\n         * @param year The year.\n         * @param monthIndex The month (0-11).\n         * @param date The day of the month.\n         * @returns A new `Date` object.\n         */\n        this.newDate = (year, monthIndex, date) => {\n            if (this.overrides?.newDate) {\n                return this.overrides.newDate(year, monthIndex, date);\n            }\n            if (this.options.timeZone) {\n                return new TZDate(year, monthIndex, date, this.options.timeZone);\n            }\n            return new Date(year, monthIndex, date);\n        };\n        /**\n         * Adds the specified number of days to the given date.\n         *\n         * @param date The date to add days to.\n         * @param amount The number of days to add.\n         * @returns The new date with the days added.\n         */\n        this.addDays = (date, amount) => {\n            return this.overrides?.addDays\n                ? this.overrides.addDays(date, amount)\n                : addDays(date, amount);\n        };\n        /**\n         * Adds the specified number of months to the given date.\n         *\n         * @param date The date to add months to.\n         * @param amount The number of months to add.\n         * @returns The new date with the months added.\n         */\n        this.addMonths = (date, amount) => {\n            return this.overrides?.addMonths\n                ? this.overrides.addMonths(date, amount)\n                : addMonths(date, amount);\n        };\n        /**\n         * Adds the specified number of weeks to the given date.\n         *\n         * @param date The date to add weeks to.\n         * @param amount The number of weeks to add.\n         * @returns The new date with the weeks added.\n         */\n        this.addWeeks = (date, amount) => {\n            return this.overrides?.addWeeks\n                ? this.overrides.addWeeks(date, amount)\n                : addWeeks(date, amount);\n        };\n        /**\n         * Adds the specified number of years to the given date.\n         *\n         * @param date The date to add years to.\n         * @param amount The number of years to add.\n         * @returns The new date with the years added.\n         */\n        this.addYears = (date, amount) => {\n            return this.overrides?.addYears\n                ? this.overrides.addYears(date, amount)\n                : addYears(date, amount);\n        };\n        /**\n         * Returns the number of calendar days between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar days between the dates.\n         */\n        this.differenceInCalendarDays = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarDays\n                ? this.overrides.differenceInCalendarDays(dateLeft, dateRight)\n                : differenceInCalendarDays(dateLeft, dateRight);\n        };\n        /**\n         * Returns the number of calendar months between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar months between the dates.\n         */\n        this.differenceInCalendarMonths = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarMonths\n                ? this.overrides.differenceInCalendarMonths(dateLeft, dateRight)\n                : differenceInCalendarMonths(dateLeft, dateRight);\n        };\n        /**\n         * Returns the months between the given dates.\n         *\n         * @param interval The interval to get the months for.\n         */\n        this.eachMonthOfInterval = (interval) => {\n            return this.overrides?.eachMonthOfInterval\n                ? this.overrides.eachMonthOfInterval(interval)\n                : eachMonthOfInterval(interval);\n        };\n        /**\n         * Returns the end of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the broadcast week.\n         */\n        this.endOfBroadcastWeek = (date) => {\n            return this.overrides?.endOfBroadcastWeek\n                ? this.overrides.endOfBroadcastWeek(date)\n                : endOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the end of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the ISO week.\n         */\n        this.endOfISOWeek = (date) => {\n            return this.overrides?.endOfISOWeek\n                ? this.overrides.endOfISOWeek(date)\n                : endOfISOWeek(date);\n        };\n        /**\n         * Returns the end of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the month.\n         */\n        this.endOfMonth = (date) => {\n            return this.overrides?.endOfMonth\n                ? this.overrides.endOfMonth(date)\n                : endOfMonth(date);\n        };\n        /**\n         * Returns the end of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the week.\n         */\n        this.endOfWeek = (date, options) => {\n            return this.overrides?.endOfWeek\n                ? this.overrides.endOfWeek(date, options)\n                : endOfWeek(date, this.options);\n        };\n        /**\n         * Returns the end of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the year.\n         */\n        this.endOfYear = (date) => {\n            return this.overrides?.endOfYear\n                ? this.overrides.endOfYear(date)\n                : endOfYear(date);\n        };\n        /**\n         * Formats the given date using the specified format string.\n         *\n         * @param date The date to format.\n         * @param formatStr The format string.\n         * @returns The formatted date string.\n         */\n        this.format = (date, formatStr, options) => {\n            const formatted = this.overrides?.format\n                ? this.overrides.format(date, formatStr, this.options)\n                : format(date, formatStr, this.options);\n            if (this.options.numerals && this.options.numerals !== \"latn\") {\n                return this.replaceDigits(formatted);\n            }\n            return formatted;\n        };\n        /**\n         * Returns the ISO week number for the given date.\n         *\n         * @param date The date to get the ISO week number for.\n         * @returns The ISO week number.\n         */\n        this.getISOWeek = (date) => {\n            return this.overrides?.getISOWeek\n                ? this.overrides.getISOWeek(date)\n                : getISOWeek(date);\n        };\n        /**\n         * Returns the month of the given date.\n         *\n         * @param date The date to get the month for.\n         * @returns The month.\n         */\n        this.getMonth = (date, options) => {\n            return this.overrides?.getMonth\n                ? this.overrides.getMonth(date, this.options)\n                : getMonth(date, this.options);\n        };\n        /**\n         * Returns the year of the given date.\n         *\n         * @param date The date to get the year for.\n         * @returns The year.\n         */\n        this.getYear = (date, options) => {\n            return this.overrides?.getYear\n                ? this.overrides.getYear(date, this.options)\n                : getYear(date, this.options);\n        };\n        /**\n         * Returns the local week number for the given date.\n         *\n         * @param date The date to get the week number for.\n         * @returns The week number.\n         */\n        this.getWeek = (date, options) => {\n            return this.overrides?.getWeek\n                ? this.overrides.getWeek(date, this.options)\n                : getWeek(date, this.options);\n        };\n        /**\n         * Checks if the first date is after the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is after the second date.\n         */\n        this.isAfter = (date, dateToCompare) => {\n            return this.overrides?.isAfter\n                ? this.overrides.isAfter(date, dateToCompare)\n                : isAfter(date, dateToCompare);\n        };\n        /**\n         * Checks if the first date is before the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is before the second date.\n         */\n        this.isBefore = (date, dateToCompare) => {\n            return this.overrides?.isBefore\n                ? this.overrides.isBefore(date, dateToCompare)\n                : isBefore(date, dateToCompare);\n        };\n        /**\n         * Checks if the given value is a Date object.\n         *\n         * @param value The value to check.\n         * @returns True if the value is a Date object.\n         */\n        this.isDate = (value) => {\n            return this.overrides?.isDate\n                ? this.overrides.isDate(value)\n                : isDate(value);\n        };\n        /**\n         * Checks if the given dates are on the same day.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are on the same day.\n         */\n        this.isSameDay = (dateLeft, dateRight) => {\n            return this.overrides?.isSameDay\n                ? this.overrides.isSameDay(dateLeft, dateRight)\n                : isSameDay(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same month.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same month.\n         */\n        this.isSameMonth = (dateLeft, dateRight) => {\n            return this.overrides?.isSameMonth\n                ? this.overrides.isSameMonth(dateLeft, dateRight)\n                : isSameMonth(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same year.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same year.\n         */\n        this.isSameYear = (dateLeft, dateRight) => {\n            return this.overrides?.isSameYear\n                ? this.overrides.isSameYear(dateLeft, dateRight)\n                : isSameYear(dateLeft, dateRight);\n        };\n        /**\n         * Returns the latest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The latest date.\n         */\n        this.max = (dates) => {\n            return this.overrides?.max ? this.overrides.max(dates) : max(dates);\n        };\n        /**\n         * Returns the earliest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The earliest date.\n         */\n        this.min = (dates) => {\n            return this.overrides?.min ? this.overrides.min(dates) : min(dates);\n        };\n        /**\n         * Sets the month of the given date.\n         *\n         * @param date The date to set the month on.\n         * @param month The month to set (0-11).\n         * @returns The new date with the month set.\n         */\n        this.setMonth = (date, month) => {\n            return this.overrides?.setMonth\n                ? this.overrides.setMonth(date, month)\n                : setMonth(date, month);\n        };\n        /**\n         * Sets the year of the given date.\n         *\n         * @param date The date to set the year on.\n         * @param year The year to set.\n         * @returns The new date with the year set.\n         */\n        this.setYear = (date, year) => {\n            return this.overrides?.setYear\n                ? this.overrides.setYear(date, year)\n                : setYear(date, year);\n        };\n        /**\n         * Returns the start of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the broadcast week.\n         */\n        this.startOfBroadcastWeek = (date, dateLib) => {\n            return this.overrides?.startOfBroadcastWeek\n                ? this.overrides.startOfBroadcastWeek(date, this)\n                : startOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the start of the day for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the day.\n         */\n        this.startOfDay = (date) => {\n            return this.overrides?.startOfDay\n                ? this.overrides.startOfDay(date)\n                : startOfDay(date);\n        };\n        /**\n         * Returns the start of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the ISO week.\n         */\n        this.startOfISOWeek = (date) => {\n            return this.overrides?.startOfISOWeek\n                ? this.overrides.startOfISOWeek(date)\n                : startOfISOWeek(date);\n        };\n        /**\n         * Returns the start of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the month.\n         */\n        this.startOfMonth = (date) => {\n            return this.overrides?.startOfMonth\n                ? this.overrides.startOfMonth(date)\n                : startOfMonth(date);\n        };\n        /**\n         * Returns the start of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the week.\n         */\n        this.startOfWeek = (date, options) => {\n            return this.overrides?.startOfWeek\n                ? this.overrides.startOfWeek(date, this.options)\n                : startOfWeek(date, this.options);\n        };\n        /**\n         * Returns the start of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the year.\n         */\n        this.startOfYear = (date) => {\n            return this.overrides?.startOfYear\n                ? this.overrides.startOfYear(date)\n                : startOfYear(date);\n        };\n        this.options = { locale: enUS, ...options };\n        this.overrides = overrides;\n    }\n    /**\n     * Generates a mapping of Arabic digits (0-9) to the target numbering system\n     * digits.\n     *\n     * @since 9.5.0\n     * @returns A record mapping Arabic digits to the target numerals.\n     */\n    getDigitMap() {\n        const { numerals = \"latn\" } = this.options;\n        // Use Intl.NumberFormat to create a formatter with the specified numbering system\n        const formatter = new Intl.NumberFormat(\"en-US\", {\n            numberingSystem: numerals\n        });\n        // Map Arabic digits (0-9) to the target numerals\n        const digitMap = {};\n        for (let i = 0; i < 10; i++) {\n            digitMap[i.toString()] = formatter.format(i);\n        }\n        return digitMap;\n    }\n    /**\n     * Replaces Arabic digits in a string with the target numbering system digits.\n     *\n     * @since 9.5.0\n     * @param input The string containing Arabic digits.\n     * @returns The string with digits replaced.\n     */\n    replaceDigits(input) {\n        const digitMap = this.getDigitMap();\n        return input.replace(/\\d/g, (digit) => digitMap[digit] || digit);\n    }\n    /**\n     * Formats a number using the configured numbering system.\n     *\n     * @since 9.5.0\n     * @param value The number to format.\n     * @returns The formatted number as a string.\n     */\n    formatNumber(value) {\n        return this.replaceDigits(value.toString());\n    }\n}\n/** The default locale (English). */\nexport { enUS as defaultLocale } from \"date-fns/locale/en-US\";\n/**\n * The default date library with English locale.\n *\n * @since 9.2.0\n */\nexport const defaultDateLib = new DateLib();\n/**\n * @ignore\n * @deprecated Use `defaultDateLib`.\n */\nexport const dateLib = defaultDateLib;\n//# sourceMappingURL=DateLib.js.map","import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */\nexport class CalendarDay {\n    constructor(date, displayMonth, dateLib = defaultDateLib) {\n        this.date = date;\n        this.displayMonth = displayMonth;\n        this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n        this.dateLib = dateLib;\n    }\n    /**\n     * Checks if this day is equal to another `CalendarDay`, considering both the\n     * date and the displayed month.\n     *\n     * @param day The `CalendarDay` to compare with.\n     * @returns `true` if the days are equal, otherwise `false`.\n     */\n    isEqualTo(day) {\n        return (this.dateLib.isSameDay(day.date, this.date) &&\n            this.dateLib.isSameMonth(day.displayMonth, this.displayMonth));\n    }\n}\n//# sourceMappingURL=CalendarDay.js.map","/**\n * Represents a month in a calendar year.\n *\n * A `CalendarMonth` contains the weeks within the month and the date of the\n * month.\n */\nexport class CalendarMonth {\n    constructor(month, weeks) {\n        this.date = month;\n        this.weeks = weeks;\n    }\n}\n//# sourceMappingURL=CalendarMonth.js.map","/**\n * Represents a week in a calendar month.\n *\n * A `CalendarWeek` contains the days within the week and the week number.\n */\nexport class CalendarWeek {\n    constructor(weekNumber, days) {\n        this.days = days;\n        this.weekNumber = weekNumber;\n    }\n}\n//# sourceMappingURL=CalendarWeek.js.map","import { defaultDateLib } from \"../classes/index.js\";\n/**\n * Checks if a given date is within a specified date range.\n *\n * @since 9.0.0\n * @param range - The date range to check against.\n * @param date - The date to check.\n * @param excludeEnds - If `true`, the range's start and end dates are excluded.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date is within the range, otherwise `false`.\n * @group Utilities\n */\nexport function rangeIncludesDate(range, date, excludeEnds = false, dateLib = defaultDateLib) {\n    let { from, to } = range;\n    const { differenceInCalendarDays, isSameDay } = dateLib;\n    if (from && to) {\n        const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n        if (isRangeInverted) {\n            [from, to] = [to, from];\n        }\n        const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) &&\n            differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n        return isInRange;\n    }\n    if (!excludeEnds && to) {\n        return isSameDay(to, date);\n    }\n    if (!excludeEnds && from) {\n        return isSameDay(from, date);\n    }\n    return false;\n}\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range, date) => rangeIncludesDate(range, date, false, defaultDateLib);\n//# sourceMappingURL=rangeIncludesDate.js.map","/**\n * Checks if the given value is of type {@link DateInterval}.\n *\n * @param matcher - The value to check.\n * @returns `true` if the value is a {@link DateInterval}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateInterval(matcher) {\n    return Boolean(matcher &&\n        typeof matcher === \"object\" &&\n        \"before\" in matcher &&\n        \"after\" in matcher);\n}\n/**\n * Checks if the given value is of type {@link DateRange}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateRange}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateAfter}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateAfter}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateBefore}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateBefore}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Checks if the given value is of type {@link DayOfWeek}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DayOfWeek}, otherwise `false`.\n * @group Utilities\n */\nexport function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Checks if the given value is an array of valid dates.\n *\n * @private\n * @param value - The value to check.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the value is an array of valid dates, otherwise `false`.\n */\nexport function isDatesArray(value, dateLib) {\n    return Array.isArray(value) && value.every(dateLib.isDate);\n}\n//# sourceMappingURL=typeguards.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType } from \"./typeguards.js\";\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */\nexport function dateMatchModifiers(date, matchers, dateLib = defaultDateLib) {\n    const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n    const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n    return matchersArr.some((matcher) => {\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (dateLib.isDate(matcher)) {\n            return isSameDay(date, matcher);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.includes(date);\n        }\n        if (isDateRange(matcher)) {\n            return rangeIncludesDate(matcher, date, false, dateLib);\n        }\n        if (isDayOfWeekType(matcher)) {\n            if (!Array.isArray(matcher.dayOfWeek)) {\n                return matcher.dayOfWeek === date.getDay();\n            }\n            return matcher.dayOfWeek.includes(date.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            const diffBefore = differenceInCalendarDays(matcher.before, date);\n            const diffAfter = differenceInCalendarDays(matcher.after, date);\n            const isDayBefore = diffBefore > 0;\n            const isDayAfter = diffAfter < 0;\n            const isClosedInterval = isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            }\n            else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return differenceInCalendarDays(date, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return differenceInCalendarDays(matcher.before, date) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(date);\n        }\n        return false;\n    });\n}\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;\n//# sourceMappingURL=dateMatchModifiers.js.map","import { DayFlag } from \"../UI.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */\nexport function createGetModifiers(days, props, dateLib) {\n    const { disabled, hidden, modifiers, showOutsideDays, broadcastCalendar, today } = props;\n    const { isSameDay, isSameMonth, startOfMonth, isBefore, endOfMonth, isAfter } = dateLib;\n    const startMonth = props.startMonth && startOfMonth(props.startMonth);\n    const endMonth = props.endMonth && endOfMonth(props.endMonth);\n    const internalModifiersMap = {\n        [DayFlag.focused]: [],\n        [DayFlag.outside]: [],\n        [DayFlag.disabled]: [],\n        [DayFlag.hidden]: [],\n        [DayFlag.today]: []\n    };\n    const customModifiersMap = {};\n    for (const day of days) {\n        const { date, displayMonth } = day;\n        const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n        const isBeforeStartMonth = Boolean(startMonth && isBefore(date, startMonth));\n        const isAfterEndMonth = Boolean(endMonth && isAfter(date, endMonth));\n        const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n        const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n            isBeforeStartMonth ||\n            isAfterEndMonth ||\n            // Broadcast calendar will show outside days as default\n            (!broadcastCalendar && !showOutsideDays && isOutside) ||\n            (broadcastCalendar && showOutsideDays === false && isOutside);\n        const isToday = isSameDay(date, today ?? dateLib.today());\n        if (isOutside)\n            internalModifiersMap.outside.push(day);\n        if (isDisabled)\n            internalModifiersMap.disabled.push(day);\n        if (isHidden)\n            internalModifiersMap.hidden.push(day);\n        if (isToday)\n            internalModifiersMap.today.push(day);\n        // Add custom modifiers\n        if (modifiers) {\n            Object.keys(modifiers).forEach((name) => {\n                const modifierValue = modifiers?.[name];\n                const isMatch = modifierValue\n                    ? dateMatchModifiers(date, modifierValue, dateLib)\n                    : false;\n                if (!isMatch)\n                    return;\n                if (customModifiersMap[name]) {\n                    customModifiersMap[name].push(day);\n                }\n                else {\n                    customModifiersMap[name] = [day];\n                }\n            });\n        }\n    }\n    return (day) => {\n        // Initialize all the modifiers to false\n        const dayFlags = {\n            [DayFlag.focused]: false,\n            [DayFlag.disabled]: false,\n            [DayFlag.hidden]: false,\n            [DayFlag.outside]: false,\n            [DayFlag.today]: false\n        };\n        const customModifiers = {};\n        // Find the modifiers for the given day\n        for (const name in internalModifiersMap) {\n            const days = internalModifiersMap[name];\n            dayFlags[name] = days.some((d) => d === day);\n        }\n        for (const name in customModifiersMap) {\n            customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n        }\n        return {\n            ...dayFlags,\n            // custom modifiers should override all the previous ones\n            ...customModifiers\n        };\n    };\n}\n//# sourceMappingURL=createGetModifiers.js.map","import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n    const modifierClassNames = Object.entries(modifiers)\n        .filter(([, active]) => active === true)\n        .reduce((previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n            previousValue.push(modifiersClassNames[key]);\n        }\n        else if (classNames[DayFlag[key]]) {\n            previousValue.push(classNames[DayFlag[key]]);\n        }\n        else if (classNames[SelectionState[key]]) {\n            previousValue.push(classNames[SelectionState[key]]);\n        }\n        return previousValue;\n    }, [classNames[UI.Day]]);\n    return modifierClassNames;\n}\n//# sourceMappingURL=getClassNamesForModifiers.js.map","import React from \"react\";\n/**\n * Render the button elements in the calendar.\n *\n * @private\n * @deprecated Use `PreviousMonthButton` or `@link NextMonthButton` instead.\n */\nexport function Button(props) {\n    return React.createElement(\"button\", { ...props });\n}\n//# sourceMappingURL=Button.js.map","import React from \"react\";\n/**\n * Render the label in the month caption.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function CaptionLabel(props) {\n    return React.createElement(\"span\", { ...props });\n}\n//# sourceMappingURL=CaptionLabel.js.map","import React from \"react\";\n/**\n * Render the chevron icon used in the navigation buttons and dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Chevron(props) {\n    const { size = 24, orientation = \"left\", className } = props;\n    return (React.createElement(\"svg\", { className: className, width: size, height: size, viewBox: \"0 0 24 24\" },\n        orientation === \"up\" && (React.createElement(\"polygon\", { points: \"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28\" })),\n        orientation === \"down\" && (React.createElement(\"polygon\", { points: \"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72\" })),\n        orientation === \"left\" && (React.createElement(\"polygon\", { points: \"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20\" })),\n        orientation === \"right\" && (React.createElement(\"polygon\", { points: \"8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20\" }))));\n}\n//# sourceMappingURL=Chevron.js.map","import React from \"react\";\n/**\n * Render a grid cell for a specific day in the calendar.\n *\n * Handles interaction and focus for the day. If you only need to change the\n * content of the day cell, consider swapping the `DayButton` component\n * instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(props) {\n    const { day, modifiers, ...tdProps } = props;\n    return React.createElement(\"td\", { ...tdProps });\n}\n//# sourceMappingURL=Day.js.map","import React from \"react\";\n/**\n * Render a button for a specific day in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DayButton(props) {\n    const { day, modifiers, ...buttonProps } = props;\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        if (modifiers.focused)\n            ref.current?.focus();\n    }, [modifiers.focused]);\n    return React.createElement(\"button\", { ref: ref, ...buttonProps });\n}\n//# sourceMappingURL=DayButton.js.map","import React from \"react\";\nimport { UI } from \"../UI.js\";\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(props) {\n    const { options, className, components, classNames, ...selectProps } = props;\n    const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n    const selectedOption = options?.find(({ value }) => value === selectProps.value);\n    return (React.createElement(\"span\", { \"data-disabled\": selectProps.disabled, className: classNames[UI.DropdownRoot] },\n        React.createElement(components.Select, { className: cssClassSelect, ...selectProps }, options?.map(({ value, label, disabled }) => (React.createElement(components.Option, { key: value, value: value, disabled: disabled }, label)))),\n        React.createElement(\"span\", { className: classNames[UI.CaptionLabel], \"aria-hidden\": true },\n            selectedOption?.label,\n            React.createElement(components.Chevron, { orientation: \"down\", size: 18, className: classNames[UI.Chevron] }))));\n}\n//# sourceMappingURL=Dropdown.js.map","import React from \"react\";\n/**\n * Render the navigation dropdowns for the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DropdownNav(props) {\n    return React.createElement(\"div\", { ...props });\n}\n//# sourceMappingURL=DropdownNav.js.map","import React from \"react\";\n/**\n * Render the footer of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Footer(props) {\n    return React.createElement(\"div\", { ...props });\n}\n//# sourceMappingURL=Footer.js.map","import React from \"react\";\n/**\n * Render the grid with the weekday header row and the weeks for a specific\n * month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Month(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps }, props.children);\n}\n//# sourceMappingURL=Month.js.map","import React from \"react\";\n/**\n * Render the caption for a month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthCaption(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps });\n}\n//# sourceMappingURL=MonthCaption.js.map","import React from \"react\";\n/**\n * Render the grid of days for a specific month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthGrid(props) {\n    return React.createElement(\"table\", { ...props });\n}\n//# sourceMappingURL=MonthGrid.js.map","import React from \"react\";\n/**\n * Render a container wrapping the month grids.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Months(props) {\n    return React.createElement(\"div\", { ...props });\n}\n//# sourceMappingURL=Months.js.map","import { createContext, useContext } from \"react\";\n/** @ignore */\nexport const dayPickerContext = createContext(undefined);\n/**\n * Provides access to the DayPicker context, which includes properties and\n * methods to interact with the DayPicker component. This hook must be used\n * within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker() {\n    const context = useContext(dayPickerContext);\n    if (context === undefined) {\n        throw new Error(\"useDayPicker() must be used within a custom component.\");\n    }\n    return context;\n}\n//# sourceMappingURL=useDayPicker.js.map","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between months in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n//# sourceMappingURL=MonthsDropdown.js.map","import React, { useCallback } from \"react\";\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the navigation toolbar with buttons to navigate between months.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(props) {\n    const { onPreviousClick, onNextClick, previousMonth, nextMonth, ...navProps } = props;\n    const { components, classNames, labels: { labelPrevious, labelNext } } = useDayPicker();\n    const handleNextClick = useCallback((e) => {\n        if (nextMonth) {\n            onNextClick?.(e);\n        }\n    }, [nextMonth, onNextClick]);\n    const handlePreviousClick = useCallback((e) => {\n        if (previousMonth) {\n            onPreviousClick?.(e);\n        }\n    }, [previousMonth, onPreviousClick]);\n    return (React.createElement(\"nav\", { ...navProps },\n        React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick },\n            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: \"left\" })),\n        React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick },\n            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, orientation: \"right\", className: classNames[UI.Chevron] }))));\n}\n//# sourceMappingURL=Nav.js.map","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the next month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function NextMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n//# sourceMappingURL=NextMonthButton.js.map","import React from \"react\";\n/**\n * Render an `option` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Option(props) {\n    return React.createElement(\"option\", { ...props });\n}\n//# sourceMappingURL=Option.js.map","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the previous month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function PreviousMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n//# sourceMappingURL=PreviousMonthButton.js.map","import React from \"react\";\n/**\n * Render the root element of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Root(props) {\n    const { rootRef, ...rest } = props;\n    return React.createElement(\"div\", { ...rest, ref: rootRef });\n}\n//# sourceMappingURL=Root.js.map","import React from \"react\";\n/**\n * Render a `select` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Select(props) {\n    return React.createElement(\"select\", { ...props });\n}\n//# sourceMappingURL=Select.js.map","import React from \"react\";\n/**\n * Render a table row representing a week in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Week(props) {\n    const { week, ...trProps } = props;\n    return React.createElement(\"tr\", { ...trProps });\n}\n//# sourceMappingURL=Week.js.map","import React from \"react\";\n/**\n * Render a table header cell with the name of a weekday (e.g., \"Mo\", \"Tu\").\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekday(props) {\n    return React.createElement(\"th\", { ...props });\n}\n//# sourceMappingURL=Weekday.js.map","import React from \"react\";\n/**\n * Render the table row containing the weekday names.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekdays(props) {\n    return (React.createElement(\"thead\", { \"aria-hidden\": true },\n        React.createElement(\"tr\", { ...props })));\n}\n//# sourceMappingURL=Weekdays.js.map","import React from \"react\";\n/**\n * Render a table cell displaying the number of the week.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumber(props) {\n    const { week, ...thProps } = props;\n    return React.createElement(\"th\", { ...thProps });\n}\n//# sourceMappingURL=WeekNumber.js.map","import React from \"react\";\n/**\n * Render the header cell for the week numbers column.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumberHeader(props) {\n    return React.createElement(\"th\", { ...props });\n}\n//# sourceMappingURL=WeekNumberHeader.js.map","import React from \"react\";\n/**\n * Render the container for the weeks in the month grid.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weeks(props) {\n    return React.createElement(\"tbody\", { ...props });\n}\n//# sourceMappingURL=Weeks.js.map","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between years in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function YearsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n//# sourceMappingURL=YearsDropdown.js.map","import * as components from \"../components/custom-components.js\";\n/**\n * Merges custom components from the props with the default components.\n *\n * This function ensures that any custom components provided in the props\n * override the default components.\n *\n * @param customComponents The custom components provided in the DayPicker\n *   props.\n * @returns An object containing the merged components.\n */\nexport function getComponents(customComponents) {\n    return {\n        ...components,\n        ...customComponents\n    };\n}\n//# sourceMappingURL=getComponents.js.map","/**\n * Extracts `data-` attributes from the DayPicker props.\n *\n * This function collects all `data-` attributes from the props and adds\n * additional attributes based on the DayPicker configuration.\n *\n * @param props The DayPicker props.\n * @returns An object containing the `data-` attributes.\n */\nexport function getDataAttributes(props) {\n    const dataAttributes = {\n        \"data-mode\": props.mode ?? undefined,\n        \"data-required\": \"required\" in props ? props.required : undefined,\n        \"data-multiple-months\": (props.numberOfMonths && props.numberOfMonths > 1) || undefined,\n        \"data-week-numbers\": props.showWeekNumber || undefined,\n        \"data-broadcast-calendar\": props.broadcastCalendar || undefined,\n        \"data-nav-layout\": props.navLayout || undefined\n    };\n    Object.entries(props).forEach(([key, val]) => {\n        if (key.startsWith(\"data-\")) {\n            dataAttributes[key] = val;\n        }\n    });\n    return dataAttributes;\n}\n//# sourceMappingURL=getDataAttributes.js.map","import { UI, DayFlag, SelectionState, Animation } from \"../UI.js\";\n/**\n * Returns the default class names for the UI elements.\n *\n * This function generates a mapping of default class names for various UI\n * elements, day flags, selection states, and animations.\n *\n * @returns An object containing the default class names.\n * @group Utilities\n */\nexport function getDefaultClassNames() {\n    const classNames = {};\n    for (const key in UI) {\n        classNames[UI[key]] =\n            `rdp-${UI[key]}`;\n    }\n    for (const key in DayFlag) {\n        classNames[DayFlag[key]] =\n            `rdp-${DayFlag[key]}`;\n    }\n    for (const key in SelectionState) {\n        classNames[SelectionState[key]] =\n            `rdp-${SelectionState[key]}`;\n    }\n    for (const key in Animation) {\n        classNames[Animation[key]] =\n            `rdp-${Animation[key]}`;\n    }\n    return classNames;\n}\n//# sourceMappingURL=getDefaultClassNames.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the caption of the month.\n *\n * @defaultValue `LLLL y` (e.g., \"November 2022\").\n * @param month The date representing the month.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted caption as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatCaption(month, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(month, \"LLLL y\");\n}\n/**\n * @private\n * @deprecated Use {@link formatCaption} instead.\n * @group Formatters\n */\nexport const formatMonthCaption = formatCaption;\n//# sourceMappingURL=formatCaption.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the day date shown in the day cell.\n *\n * @defaultValue `d` (e.g., \"1\").\n * @param date The date to format.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted day as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatDay(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"d\");\n}\n//# sourceMappingURL=formatDay.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the month for the dropdown option label.\n *\n * @defaultValue The localized full month name.\n * @param month The date representing the month.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted month name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatMonthDropdown(month, dateLib = defaultDateLib) {\n    return dateLib.format(month, \"LLLL\");\n}\n//# sourceMappingURL=formatMonthDropdown.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the week number.\n *\n * @defaultValue The week number as a string, with a leading zero for single-digit numbers.\n * @param weekNumber The week number to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted week number as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumber(weekNumber, dateLib = defaultDateLib) {\n    if (weekNumber < 10) {\n        return dateLib.formatNumber(`0${weekNumber.toLocaleString()}`);\n    }\n    return dateLib.formatNumber(`${weekNumber.toLocaleString()}`);\n}\n//# sourceMappingURL=formatWeekNumber.js.map","/**\n * Formats the header for the week number column.\n *\n * @defaultValue An empty string `\"\"`.\n * @returns The formatted week number header as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumberHeader() {\n    return ``;\n}\n//# sourceMappingURL=formatWeekNumberHeader.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the name of a weekday to be displayed in the weekdays header.\n *\n * @defaultValue `cccccc` (e.g., \"Mo\" for Monday).\n * @param weekday The date representing the weekday.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted weekday name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekdayName(weekday, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(weekday, \"cccccc\");\n}\n//# sourceMappingURL=formatWeekdayName.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the year for the dropdown option label.\n *\n * @param year The year to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted year as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatYearDropdown(year, dateLib = defaultDateLib) {\n    return dateLib.format(year, \"yyyy\");\n}\n/**\n * @private\n * @deprecated Use `formatYearDropdown` instead.\n * @group Formatters\n */\nexport const formatYearCaption = formatYearDropdown;\n//# sourceMappingURL=formatYearDropdown.js.map","import * as defaultFormatters from \"../formatters/index.js\";\n/**\n * Merges custom formatters from the props with the default formatters.\n *\n * @param customFormatters The custom formatters provided in the DayPicker\n *   props.\n * @returns The merged formatters object.\n */\nexport function getFormatters(customFormatters) {\n    if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {\n        customFormatters.formatCaption = customFormatters.formatMonthCaption;\n    }\n    if (customFormatters?.formatYearCaption &&\n        !customFormatters.formatYearDropdown) {\n        customFormatters.formatYearDropdown = customFormatters.formatYearCaption;\n    }\n    return {\n        ...defaultFormatters,\n        ...customFormatters\n    };\n}\n//# sourceMappingURL=getFormatters.js.map","/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */\nexport function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n    const { startOfMonth, startOfYear, endOfYear, eachMonthOfInterval, getMonth } = dateLib;\n    const months = eachMonthOfInterval({\n        start: startOfYear(displayMonth),\n        end: endOfYear(displayMonth)\n    });\n    const options = months.map((month) => {\n        const label = formatters.formatMonthDropdown(month, dateLib);\n        const value = getMonth(month);\n        const disabled = (navStart && month < startOfMonth(navStart)) ||\n            (navEnd && month > startOfMonth(navEnd)) ||\n            false;\n        return { value, label, disabled };\n    });\n    return options;\n}\n//# sourceMappingURL=getMonthOptions.js.map","import { UI } from \"../UI.js\";\n/**\n * Returns the computed style for a day based on its modifiers.\n *\n * This function merges the base styles for the day with any styles associated\n * with active modifiers.\n *\n * @param dayModifiers The modifiers applied to the day.\n * @param styles The base styles for the calendar elements.\n * @param modifiersStyles The styles associated with specific modifiers.\n * @returns The computed style for the day.\n */\nexport function getStyleForModifiers(dayModifiers, styles = {}, modifiersStyles = {}) {\n    let style = { ...styles?.[UI.Day] };\n    Object.entries(dayModifiers)\n        .filter(([, active]) => active === true)\n        .forEach(([modifier]) => {\n        style = {\n            ...style,\n            ...modifiersStyles?.[modifier]\n        };\n    });\n    return style;\n}\n//# sourceMappingURL=getStyleForModifiers.js.map","/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */\nexport function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {\n    const today = dateLib.today();\n    const start = broadcastCalendar\n        ? dateLib.startOfBroadcastWeek(today, dateLib)\n        : ISOWeek\n            ? dateLib.startOfISOWeek(today)\n            : dateLib.startOfWeek(today);\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n        const day = dateLib.addDays(start, i);\n        days.push(day);\n    }\n    return days;\n}\n//# sourceMappingURL=getWeekdays.js.map","/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */\nexport function getYearOptions(navStart, navEnd, formatters, dateLib) {\n    if (!navStart)\n        return undefined;\n    if (!navEnd)\n        return undefined;\n    const { startOfYear, endOfYear, addYears, getYear, isBefore, isSameYear } = dateLib;\n    const firstNavYear = startOfYear(navStart);\n    const lastNavYear = endOfYear(navEnd);\n    const years = [];\n    let year = firstNavYear;\n    while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n        years.push(year);\n        year = addYears(year, 1);\n    }\n    return years.map((year) => {\n        const label = formatters.formatYearDropdown(year, dateLib);\n        return {\n            value: getYear(year),\n            label,\n            disabled: false\n        };\n    });\n}\n//# sourceMappingURL=getYearOptions.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for the month grid, which is announced when entering\n * the grid.\n *\n * @defaultValue `LLLL y` (e.g., \"November 2022\").\n * @param date - The date representing the month.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the month grid.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGrid(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"LLLL y\");\n}\n/**\n * @ignore\n * @deprecated Use {@link labelGrid} instead.\n */\nexport const labelCaption = labelGrid;\n//# sourceMappingURL=labelGrid.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the label for a day grid cell when the calendar is not interactive.\n *\n * @param date - The date to format.\n * @param modifiers - Optional modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The label for the day grid cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGridcell(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers?.today) {\n        label = `Today, ${label}`;\n    }\n    return label;\n}\n//# sourceMappingURL=labelGridcell.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a day button.\n *\n * Use the `modifiers` argument to provide additional context for the label,\n * such as indicating if the day is \"today\" or \"selected.\"\n *\n * @defaultValue The formatted date.\n * @param date - The date to format.\n * @param modifiers - The modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the day button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelDayButton(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers.today)\n        label = `Today, ${label}`;\n    if (modifiers.selected)\n        label = `${label}, selected`;\n    return label;\n}\n/**\n * @ignore\n * @deprecated Use `labelDayButton` instead.\n */\nexport const labelDay = labelDayButton;\n//# sourceMappingURL=labelDayButton.js.map","/**\n * Generates the ARIA label for the navigation toolbar.\n *\n * @defaultValue `\"\"`\n * @returns The ARIA label for the navigation toolbar.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNav() {\n    return \"\";\n}\n//# sourceMappingURL=labelNav.js.map","/**\n * Generates the ARIA label for the months dropdown.\n *\n * @defaultValue `\"Choose the Month\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the months dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelMonthDropdown(options) {\n    return \"Choose the Month\";\n}\n//# sourceMappingURL=labelMonthDropdown.js.map","/**\n * Generates the ARIA label for the \"next month\" button.\n *\n * @defaultValue `\"Go to the Next Month\"`\n * @param month - The date representing the next month, or `undefined` if there\n *   is no next month.\n * @returns The ARIA label for the \"next month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNext(month) {\n    return \"Go to the Next Month\";\n}\n//# sourceMappingURL=labelNext.js.map","/**\n * Generates the ARIA label for the \"previous month\" button.\n *\n * @defaultValue `\"Go to the Previous Month\"`\n * @param month - The date representing the previous month, or `undefined` if\n *   there is no previous month.\n * @returns The ARIA label for the \"previous month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelPrevious(month) {\n    return \"Go to the Previous Month\";\n}\n//# sourceMappingURL=labelPrevious.js.map","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a weekday column header.\n *\n * @defaultValue `\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"`\n * @param date - The date representing the weekday.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the weekday column header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekday(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"cccc\");\n}\n//# sourceMappingURL=labelWeekday.js.map","/**\n * Generates the ARIA label for the week number cell (the first cell in a row).\n *\n * @defaultValue `Week ${weekNumber}`\n * @param weekNumber - The number of the week.\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumber(weekNumber, options) {\n    return `Week ${weekNumber}`;\n}\n//# sourceMappingURL=labelWeekNumber.js.map","/**\n * Generates the ARIA label for the week number header element.\n *\n * @defaultValue `\"Week Number\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumberHeader(options) {\n    return \"Week Number\";\n}\n//# sourceMappingURL=labelWeekNumberHeader.js.map","/**\n * Generates the ARIA label for the years dropdown.\n *\n * @defaultValue `\"Choose the Year\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the years dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelYearDropdown(options) {\n    return \"Choose the Year\";\n}\n//# sourceMappingURL=labelYearDropdown.js.map","import { useLayoutEffect, useRef } from \"react\";\nimport { Animation } from \"./UI.js\";\nconst asHtmlElement = (element) => {\n    if (element instanceof HTMLElement)\n        return element;\n    return null;\n};\nconst queryMonthEls = (element) => [\n    ...(element.querySelectorAll(\"[data-animated-month]\") ?? [])\n];\nconst queryMonthEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */\nexport function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib }) {\n    const previousRootElSnapshotRef = useRef(null);\n    const previousMonthsRef = useRef(months);\n    const animatingRef = useRef(false);\n    useLayoutEffect(() => {\n        // get previous months before updating the previous months ref\n        const previousMonths = previousMonthsRef.current;\n        // update previous months ref for next effect trigger\n        previousMonthsRef.current = months;\n        if (!enabled ||\n            !rootElRef.current ||\n            // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) ||\n            // validation required for the animation to work as expected\n            months.length === 0 ||\n            previousMonths.length === 0 ||\n            months.length !== previousMonths.length) {\n            return;\n        }\n        const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n        const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n        const captionAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.caption_after_enter]\n            : classNames[Animation.caption_before_enter];\n        const weeksAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.weeks_after_enter]\n            : classNames[Animation.weeks_before_enter];\n        // get previous root element snapshot before updating the snapshot ref\n        const previousRootElSnapshot = previousRootElSnapshotRef.current;\n        // update snapshot for next effect trigger\n        const rootElSnapshot = rootElRef.current.cloneNode(true);\n        if (rootElSnapshot instanceof HTMLElement) {\n            // if this effect is triggered while animating, we need to clean up the new root snapshot\n            // to put it in the same state as when not animating, to correctly animate the next month change\n            const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n            currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {\n                if (!(currentMonthElSnapshot instanceof HTMLElement))\n                    return;\n                // remove the old month snapshots from the new root snapshot\n                const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                if (previousMonthElSnapshot &&\n                    currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                    currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                }\n                // remove animation classes from the new month snapshots\n                const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                if (captionEl) {\n                    captionEl.classList.remove(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                if (weeksEl) {\n                    weeksEl.classList.remove(weeksAnimationClass);\n                }\n            });\n            previousRootElSnapshotRef.current = rootElSnapshot;\n        }\n        else {\n            previousRootElSnapshotRef.current = null;\n        }\n        if (animatingRef.current ||\n            isSameMonth ||\n            // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n            return;\n        }\n        const previousMonthEls = previousRootElSnapshot instanceof HTMLElement\n            ? queryMonthEls(previousRootElSnapshot)\n            : [];\n        const currentMonthEls = queryMonthEls(rootElRef.current);\n        if (currentMonthEls &&\n            currentMonthEls.every((el) => el instanceof HTMLElement) &&\n            previousMonthEls &&\n            previousMonthEls.every((el) => el instanceof HTMLElement)) {\n            animatingRef.current = true;\n            const cleanUpFunctions = [];\n            // set isolation to isolate to isolate the stacking context during animation\n            rootElRef.current.style.isolation = \"isolate\";\n            // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n            const navEl = queryNavEl(rootElRef.current);\n            if (navEl) {\n                navEl.style.zIndex = \"1\";\n            }\n            currentMonthEls.forEach((currentMonthEl, index) => {\n                const previousMonthEl = previousMonthEls[index];\n                if (!previousMonthEl) {\n                    return;\n                }\n                // animate new displayed month\n                currentMonthEl.style.position = \"relative\";\n                currentMonthEl.style.overflow = \"hidden\";\n                const captionEl = queryCaptionEl(currentMonthEl);\n                if (captionEl) {\n                    captionEl.classList.add(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthEl);\n                if (weeksEl) {\n                    weeksEl.classList.add(weeksAnimationClass);\n                }\n                // animate new displayed month end\n                const cleanUp = () => {\n                    animatingRef.current = false;\n                    if (rootElRef.current) {\n                        rootElRef.current.style.isolation = \"\";\n                    }\n                    if (navEl) {\n                        navEl.style.zIndex = \"\";\n                    }\n                    if (captionEl) {\n                        captionEl.classList.remove(captionAnimationClass);\n                    }\n                    if (weeksEl) {\n                        weeksEl.classList.remove(weeksAnimationClass);\n                    }\n                    currentMonthEl.style.position = \"\";\n                    currentMonthEl.style.overflow = \"\";\n                    if (currentMonthEl.contains(previousMonthEl)) {\n                        currentMonthEl.removeChild(previousMonthEl);\n                    }\n                };\n                cleanUpFunctions.push(cleanUp);\n                // animate old displayed month\n                previousMonthEl.style.pointerEvents = \"none\";\n                previousMonthEl.style.position = \"absolute\";\n                previousMonthEl.style.overflow = \"hidden\";\n                previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                // hide the weekdays container of the old month and only the new one\n                const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                if (previousWeekdaysEl) {\n                    previousWeekdaysEl.style.opacity = \"0\";\n                }\n                const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                if (previousCaptionEl) {\n                    previousCaptionEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.caption_before_exit]\n                        : classNames[Animation.caption_after_exit]);\n                    previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                }\n                const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                if (previousWeeksEl) {\n                    previousWeeksEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.weeks_before_exit]\n                        : classNames[Animation.weeks_after_exit]);\n                }\n                currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n            });\n        }\n    });\n}\n//# sourceMappingURL=useAnimation.js.map","/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */\nexport function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const startWeekFirstDate = broadcastCalendar\n        ? startOfBroadcastWeek(firstMonth, dateLib)\n        : ISOWeek\n            ? startOfISOWeek(firstMonth)\n            : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar\n        ? endOfBroadcastWeek(lastMonth)\n        : ISOWeek\n            ? endOfISOWeek(endOfMonth(lastMonth))\n            : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for (let i = 0; i <= nOfDays; i++) {\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for (let i = 0; i < daysToAdd; i++) {\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n//# sourceMappingURL=getDates.js.map","/**\n * Returns all the days belonging to the calendar by merging the days in the\n * weeks for each month.\n *\n * @param calendarMonths The array of calendar months.\n * @returns An array of `CalendarDay` objects representing all the days in the\n *   calendar.\n */\nexport function getDays(calendarMonths) {\n    const initialDays = [];\n    return calendarMonths.reduce((days, month) => {\n        const weekDays = month.weeks.reduce((weekDays, week) => {\n            return [...weekDays, ...week.days];\n        }, initialDays);\n        return [...days, ...weekDays];\n    }, initialDays);\n}\n//# sourceMappingURL=getDays.js.map","/**\n * Returns the months to display in the calendar.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including `numberOfMonths`.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates representing the months to display.\n */\nexport function getDisplayMonths(firstDisplayedMonth, calendarEndMonth, props, dateLib) {\n    const { numberOfMonths = 1 } = props;\n    const months = [];\n    for (let i = 0; i < numberOfMonths; i++) {\n        const month = dateLib.addMonths(firstDisplayedMonth, i);\n        if (calendarEndMonth && month > calendarEndMonth) {\n            break;\n        }\n        months.push(month);\n    }\n    return months;\n}\n//# sourceMappingURL=getDisplayMonths.js.map","/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1, endMonth, startMonth } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    // Adjust the initial month if it is after the endMonth\n    if (endMonth && differenceInCalendarMonths(endMonth, initialMonth) < 0) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(endMonth, offset);\n    }\n    // Adjust the initial month if it is before the startMonth\n    if (startMonth && differenceInCalendarMonths(initialMonth, startMonth) < 0) {\n        initialMonth = startMonth;\n    }\n    return startOfMonth(initialMonth);\n}\n//# sourceMappingURL=getInitialMonth.js.map","import { CalendarWeek, CalendarDay, CalendarMonth } from \"../classes/index.js\";\n/**\n * Returns the months to display in the calendar.\n *\n * This function generates `CalendarMonth` objects for each month to be\n * displayed, including their weeks and days, based on the provided display\n * months and dates.\n *\n * @param displayMonths The months (as dates) to display in the calendar.\n * @param dates The dates to display in the calendar.\n * @param props Options from the DayPicker props context.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of `CalendarMonth` objects representing the months to\n *   display.\n */\nexport function getMonths(displayMonths, dates, props, dateLib) {\n    const { addDays, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, getISOWeek, getWeek, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const dayPickerMonths = displayMonths.reduce((months, month) => {\n        const firstDateOfFirstWeek = props.broadcastCalendar\n            ? startOfBroadcastWeek(month, dateLib)\n            : props.ISOWeek\n                ? startOfISOWeek(month)\n                : startOfWeek(month);\n        const lastDateOfLastWeek = props.broadcastCalendar\n            ? endOfBroadcastWeek(month)\n            : props.ISOWeek\n                ? endOfISOWeek(endOfMonth(month))\n                : endOfWeek(endOfMonth(month));\n        /** The dates to display in the month. */\n        const monthDates = dates.filter((date) => {\n            return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;\n        });\n        const nrOfDaysWithFixedWeeks = props.broadcastCalendar ? 35 : 42;\n        if (props.fixedWeeks && monthDates.length < nrOfDaysWithFixedWeeks) {\n            const extraDates = dates.filter((date) => {\n                const daysToAdd = nrOfDaysWithFixedWeeks - monthDates.length;\n                return (date > lastDateOfLastWeek &&\n                    date <= addDays(lastDateOfLastWeek, daysToAdd));\n            });\n            monthDates.push(...extraDates);\n        }\n        const weeks = monthDates.reduce((weeks, date) => {\n            const weekNumber = props.ISOWeek ? getISOWeek(date) : getWeek(date);\n            const week = weeks.find((week) => week.weekNumber === weekNumber);\n            const day = new CalendarDay(date, month, dateLib);\n            if (!week) {\n                weeks.push(new CalendarWeek(weekNumber, [day]));\n            }\n            else {\n                week.days.push(day);\n            }\n            return weeks;\n        }, []);\n        const dayPickerMonth = new CalendarMonth(month, weeks);\n        months.push(dayPickerMonth);\n        return months;\n    }, []);\n    if (!props.reverseMonths) {\n        return dayPickerMonths;\n    }\n    else {\n        return dayPickerMonths.reverse();\n    }\n}\n//# sourceMappingURL=getMonths.js.map","/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth\n    ];\n}\n//# sourceMappingURL=getNavMonth.js.map","/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */\nexport function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths = 1 } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarEndMonth) {\n        return addMonths(month, offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    return addMonths(month, offset);\n}\n//# sourceMappingURL=getNextMonth.js.map","/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */\nexport function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? (numberOfMonths ?? 1) : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarStartMonth) {\n        return addMonths(month, -offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    return addMonths(month, -offset);\n}\n//# sourceMappingURL=getPreviousMonth.js.map","/**\n * Returns an array of calendar weeks from an array of calendar months.\n *\n * @param months The array of calendar months.\n * @returns An array of calendar weeks.\n */\nexport function getWeeks(months) {\n    const initialWeeks = [];\n    return months.reduce((weeks, month) => {\n        return [...weeks, ...month.weeks];\n    }, initialWeeks);\n}\n//# sourceMappingURL=getWeeks.js.map","import { useState } from \"react\";\n/**\n * A custom hook for managing both controlled and uncontrolled component states.\n *\n * This hook allows a component to support both controlled and uncontrolled\n * states by determining whether the `controlledValue` is provided. If it is\n * undefined, the hook falls back to using the internal state.\n *\n * @example\n *   // Uncontrolled usage\n *   const [value, setValue] = useControlledValue(0, undefined);\n *\n *   // Controlled usage\n *   const [value, setValue] = useControlledValue(0, props.value);\n *\n * @template T - The type of the value.\n * @param defaultValue The initial value for the uncontrolled state.\n * @param controlledValue The value for the controlled state. If undefined, the\n *   component will use the uncontrolled state.\n * @returns A tuple where the first element is the current value (either\n *   controlled or uncontrolled) and the second element is a setter function to\n *   update the value.\n */\nexport function useControlledValue(defaultValue, controlledValue) {\n    const [uncontrolledValue, setValue] = useState(defaultValue);\n    const value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [value, setValue];\n}\n//# sourceMappingURL=useControlledValue.js.map","import { useEffect } from \"react\";\nimport { getDates } from \"./helpers/getDates.js\";\nimport { getDays } from \"./helpers/getDays.js\";\nimport { getDisplayMonths } from \"./helpers/getDisplayMonths.js\";\nimport { getInitialMonth } from \"./helpers/getInitialMonth.js\";\nimport { getMonths } from \"./helpers/getMonths.js\";\nimport { getNavMonths } from \"./helpers/getNavMonth.js\";\nimport { getNextMonth } from \"./helpers/getNextMonth.js\";\nimport { getPreviousMonth } from \"./helpers/getPreviousMonth.js\";\nimport { getWeeks } from \"./helpers/getWeeks.js\";\nimport { useControlledValue } from \"./helpers/useControlledValue.js\";\n/**\n * Provides the calendar object to work with the calendar in custom components.\n *\n * @private\n * @param props - The DayPicker props related to calendar configuration.\n * @param dateLib - The date utility library instance.\n * @returns The calendar object containing displayed days, weeks, months, and\n *   navigation methods.\n */\nexport function useCalendar(props, dateLib) {\n    const [navStart, navEnd] = getNavMonths(props, dateLib);\n    const { startOfMonth, endOfMonth } = dateLib;\n    const initialMonth = getInitialMonth(props, dateLib);\n    const [firstMonth, setFirstMonth] = useControlledValue(initialMonth, \n    // initialMonth is always computed from props.month if provided\n    props.month ? initialMonth : undefined);\n    useEffect(() => {\n        const newInitialMonth = getInitialMonth(props, dateLib);\n        setFirstMonth(newInitialMonth);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.timeZone]);\n    /** The months displayed in the calendar. */\n    const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);\n    /** The dates displayed in the calendar. */\n    const dates = getDates(displayMonths, props.endMonth ? endOfMonth(props.endMonth) : undefined, props, dateLib);\n    /** The Months displayed in the calendar. */\n    const months = getMonths(displayMonths, dates, props, dateLib);\n    /** The Weeks displayed in the calendar. */\n    const weeks = getWeeks(months);\n    /** The Days displayed in the calendar. */\n    const days = getDays(months);\n    const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);\n    const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);\n    const { disableNavigation, onMonthChange } = props;\n    const isDayInCalendar = (day) => weeks.some((week) => week.days.some((d) => d.isEqualTo(day)));\n    const goToMonth = (date) => {\n        if (disableNavigation) {\n            return;\n        }\n        let newMonth = startOfMonth(date);\n        // if month is before start, use the first month instead\n        if (navStart && newMonth < startOfMonth(navStart)) {\n            newMonth = startOfMonth(navStart);\n        }\n        // if month is after endMonth, use the last month instead\n        if (navEnd && newMonth > startOfMonth(navEnd)) {\n            newMonth = startOfMonth(navEnd);\n        }\n        setFirstMonth(newMonth);\n        onMonthChange?.(newMonth);\n    };\n    const goToDay = (day) => {\n        // is this check necessary?\n        if (isDayInCalendar(day)) {\n            return;\n        }\n        goToMonth(day.date);\n    };\n    const calendar = {\n        months,\n        weeks,\n        days,\n        navStart,\n        navEnd,\n        previousMonth,\n        nextMonth,\n        goToMonth,\n        goToDay\n    };\n    return calendar;\n}\n//# sourceMappingURL=useCalendar.js.map","import { DayFlag } from \"../UI.js\";\nvar FocusTargetPriority;\n(function (FocusTargetPriority) {\n    FocusTargetPriority[FocusTargetPriority[\"Today\"] = 0] = \"Today\";\n    FocusTargetPriority[FocusTargetPriority[\"Selected\"] = 1] = \"Selected\";\n    FocusTargetPriority[FocusTargetPriority[\"LastFocused\"] = 2] = \"LastFocused\";\n    FocusTargetPriority[FocusTargetPriority[\"FocusedModifier\"] = 3] = \"FocusedModifier\";\n})(FocusTargetPriority || (FocusTargetPriority = {}));\n/**\n * Determines if a day is focusable based on its modifiers.\n *\n * A day is considered focusable if it is not disabled, hidden, or outside the\n * displayed month.\n *\n * @param modifiers The modifiers applied to the day.\n * @returns `true` if the day is focusable, otherwise `false`.\n */\nfunction isFocusableDay(modifiers) {\n    return (!modifiers[DayFlag.disabled] &&\n        !modifiers[DayFlag.hidden] &&\n        !modifiers[DayFlag.outside]);\n}\n/**\n * Calculates the focus target day based on priority.\n *\n * This function determines the day that should receive focus in the calendar,\n * prioritizing days with specific modifiers (e.g., \"focused\", \"today\") or\n * selection states.\n *\n * @param days The array of `CalendarDay` objects to evaluate.\n * @param getModifiers A function to retrieve the modifiers for a given day.\n * @param isSelected A function to determine if a day is selected.\n * @param lastFocused The last focused day, if any.\n * @returns The `CalendarDay` that should receive focus, or `undefined` if no\n *   focusable day is found.\n */\nexport function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {\n    let focusTarget;\n    let foundFocusTargetPriority = -1;\n    for (const day of days) {\n        const modifiers = getModifiers(day);\n        if (isFocusableDay(modifiers)) {\n            if (modifiers[DayFlag.focused] &&\n                foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;\n            }\n            else if (lastFocused?.isEqualTo(day) &&\n                foundFocusTargetPriority < FocusTargetPriority.LastFocused) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.LastFocused;\n            }\n            else if (isSelected(day.date) &&\n                foundFocusTargetPriority < FocusTargetPriority.Selected) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Selected;\n            }\n            else if (modifiers[DayFlag.today] &&\n                foundFocusTargetPriority < FocusTargetPriority.Today) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Today;\n            }\n        }\n    }\n    if (!focusTarget) {\n        // Return the first day that is focusable\n        focusTarget = days.find((day) => isFocusableDay(getModifiers(day)));\n    }\n    return focusTarget;\n}\n//# sourceMappingURL=calculateFocusTarget.js.map","/**\n * Calculates the next date that should be focused in the calendar.\n *\n * This function determines the next focusable date based on the movement\n * direction, constraints, and calendar configuration.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDate The reference date from which to calculate the next focusable\n *   date.\n * @param navStart The earliest date the user can navigate to.\n * @param navEnd The latest date the user can navigate to.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next focusable date.\n */\nexport function getFocusableDate(moveBy, moveDir, refDate, navStart, navEnd, props, dateLib) {\n    const { ISOWeek, broadcastCalendar } = props;\n    const { addDays, addMonths, addWeeks, addYears, endOfBroadcastWeek, endOfISOWeek, endOfWeek, max, min, startOfBroadcastWeek, startOfISOWeek, startOfWeek } = dateLib;\n    const moveFns = {\n        day: addDays,\n        week: addWeeks,\n        month: addMonths,\n        year: addYears,\n        startOfWeek: (date) => broadcastCalendar\n            ? startOfBroadcastWeek(date, dateLib)\n            : ISOWeek\n                ? startOfISOWeek(date)\n                : startOfWeek(date),\n        endOfWeek: (date) => broadcastCalendar\n            ? endOfBroadcastWeek(date)\n            : ISOWeek\n                ? endOfISOWeek(date)\n                : endOfWeek(date)\n    };\n    let focusableDate = moveFns[moveBy](refDate, moveDir === \"after\" ? 1 : -1);\n    if (moveDir === \"before\" && navStart) {\n        focusableDate = max([navStart, focusableDate]);\n    }\n    else if (moveDir === \"after\" && navEnd) {\n        focusableDate = min([navEnd, focusableDate]);\n    }\n    return focusableDate;\n}\n//# sourceMappingURL=getFocusableDate.js.map","import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n/**\n * Determines the next focusable day in the calendar.\n *\n * This function recursively calculates the next focusable day based on the\n * movement direction and modifiers applied to the days.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDay The currently focused day.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @param attempt The current recursion attempt (used to limit recursion depth).\n * @returns The next focusable day, or `undefined` if no focusable day is found.\n */\nexport function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n//# sourceMappingURL=getNextFocus.js.map","import { useState } from \"react\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\n/**\n * Manages focus behavior for the DayPicker component, including setting,\n * moving, and blurring focus on calendar days.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param calendar - The calendar object containing the displayed days and\n *   months.\n * @param getModifiers - A function to retrieve modifiers for a given day.\n * @param isSelected - A function to check if a date is selected.\n * @param dateLib - The date utility library instance.\n * @returns An object containing focus-related methods and the currently focused\n *   day.\n */\nexport function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = useState();\n    const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n    const [focusedDay, setFocused] = useState(autoFocus ? focusTarget : undefined);\n    const blur = () => {\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir) => {\n        if (!focusedDay)\n            return;\n        const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus)\n            return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day) => {\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus\n    };\n    return useFocus;\n}\n//# sourceMappingURL=useFocus.js.map","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date) => {\n        return selected?.some((d) => isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e) => {\n        let newDates = [...(selected ?? [])];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n        }\n        else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [triggerDate];\n            }\n            else {\n                // Add the date to the selection\n                newDates = [...newDates, triggerDate];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n//# sourceMappingURL=useMulti.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Adds a date to an existing range, considering constraints like minimum and\n * maximum range size.\n *\n * @param date - The date to add to the range.\n * @param initialRange - The initial range to which the date will be added.\n * @param min - The minimum number of days in the range.\n * @param max - The maximum number of days in the range.\n * @param required - Whether the range must always include at least one date.\n * @param dateLib - The date utility library instance.\n * @returns The updated date range, or `undefined` if the range is cleared.\n * @group Utilities\n */\nexport function addToRange(date, initialRange, min = 0, max = 0, required = false, dateLib = defaultDateLib) {\n    const { from, to } = initialRange || {};\n    const { isSameDay, isAfter, isBefore } = dateLib;\n    let range;\n    if (!from && !to) {\n        // the range is empty, add the date\n        range = { from: date, to: min > 0 ? undefined : date };\n    }\n    else if (from && !to) {\n        // adding date to an incomplete range\n        if (isSameDay(from, date)) {\n            // adding a date equal to the start of the range\n            if (required) {\n                range = { from, to: undefined };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: from };\n        }\n        else {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n    }\n    else if (from && to) {\n        // adding date to a complete range\n        if (isSameDay(from, date) && isSameDay(to, date)) {\n            // adding a date that is equal to both start and end of the range\n            if (required) {\n                range = { from, to };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isSameDay(from, date)) {\n            // adding a date equal to the the start of the range\n            range = { from, to: min > 0 ? undefined : date };\n        }\n        else if (isSameDay(to, date)) {\n            // adding a dare equal to the end of the range\n            range = { from: date, to: min > 0 ? undefined : date };\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: to };\n        }\n        else if (isAfter(date, from)) {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n        else if (isAfter(date, to)) {\n            // adding a date after the end of the range\n            range = { from, to: date };\n        }\n        else {\n            throw new Error(\"Invalid range\");\n        }\n    }\n    // check for min / max\n    if (range?.from && range?.to) {\n        const diff = dateLib.differenceInCalendarDays(range.to, range.from);\n        if (max > 0 && diff > max) {\n            range = { from: date, to: undefined };\n        }\n        else if (min > 1 && diff < min) {\n            range = { from: date, to: undefined };\n        }\n    }\n    return range;\n}\n//# sourceMappingURL=addToRange.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Checks if a date range contains one or more specified days of the week.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param dayOfWeek - The day(s) of the week to check for (`0-6`, where `0` is\n *   Sunday).\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains the specified day(s) of the week,\n *   otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsDayOfWeek(range, dayOfWeek, dateLib = defaultDateLib) {\n    const dayOfWeekArr = !Array.isArray(dayOfWeek) ? [dayOfWeek] : dayOfWeek;\n    let date = range.from;\n    const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n    // iterate at maximum one week or the total days if the range is shorter than one week\n    const totalDaysLimit = Math.min(totalDays, 6);\n    for (let i = 0; i <= totalDaysLimit; i++) {\n        if (dayOfWeekArr.includes(date.getDay())) {\n            return true;\n        }\n        date = dateLib.addDays(date, 1);\n    }\n    return false;\n}\n//# sourceMappingURL=rangeContainsDayOfWeek.js.map","import { defaultDateLib } from \"../classes/index.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\n/**\n * Determines if two date ranges overlap.\n *\n * @since 9.2.2\n * @param rangeLeft - The first date range.\n * @param rangeRight - The second date range.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the ranges overlap, otherwise `false`.\n * @group Utilities\n */\nexport function rangeOverlaps(rangeLeft, rangeRight, dateLib = defaultDateLib) {\n    return (rangeIncludesDate(rangeLeft, rangeRight.from, false, dateLib) ||\n        rangeIncludesDate(rangeLeft, rangeRight.to, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.from, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.to, false, dateLib));\n}\n//# sourceMappingURL=rangeOverlaps.js.map","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { dateMatchModifiers } from \"./dateMatchModifiers.js\";\nimport { rangeContainsDayOfWeek } from \"./rangeContainsDayOfWeek.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { rangeOverlaps } from \"./rangeOverlaps.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType } from \"./typeguards.js\";\n/**\n * Checks if a date range contains dates that match the given modifiers.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param modifiers - The modifiers to match against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains matching dates, otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsModifiers(range, modifiers, dateLib = defaultDateLib) {\n    const matchers = Array.isArray(modifiers) ? modifiers : [modifiers];\n    // Defer function matchers evaluation as they are the least performant.\n    const nonFunctionMatchers = matchers.filter((matcher) => typeof matcher !== \"function\");\n    const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher) => {\n        if (typeof matcher === \"boolean\")\n            return matcher;\n        if (dateLib.isDate(matcher)) {\n            return rangeIncludesDate(range, matcher, false, dateLib);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.some((date) => rangeIncludesDate(range, date, false, dateLib));\n        }\n        if (isDateRange(matcher)) {\n            if (matcher.from && matcher.to) {\n                return rangeOverlaps(range, { from: matcher.from, to: matcher.to }, dateLib);\n            }\n            return false;\n        }\n        if (isDayOfWeekType(matcher)) {\n            return rangeContainsDayOfWeek(range, matcher.dayOfWeek, dateLib);\n        }\n        if (isDateInterval(matcher)) {\n            const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return rangeOverlaps(range, {\n                    from: dateLib.addDays(matcher.after, 1),\n                    to: dateLib.addDays(matcher.before, -1)\n                }, dateLib);\n            }\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        return false;\n    });\n    if (nonFunctionMatchersResult) {\n        return true;\n    }\n    const functionMatchers = matchers.filter((matcher) => typeof matcher === \"function\");\n    if (functionMatchers.length) {\n        let date = range.from;\n        const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n        for (let i = 0; i <= totalDays; i++) {\n            if (functionMatchers.some((matcher) => matcher(date))) {\n                return true;\n            }\n            date = dateLib.addDays(date, 1);\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=rangeContainsModifiers.js.map","import { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport { addToRange, rangeContainsModifiers } from \"../utils/index.js\";\nimport { rangeIncludesDate } from \"../utils/rangeIncludesDate.js\";\n/**\n * Hook to manage range selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected range, a function to select a\n *   range, and a function to check if a date is within the range.\n */\nexport function useRange(props, dateLib) {\n    const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const isSelected = (date) => selected && rangeIncludesDate(selected, date, false, dateLib);\n    const select = (triggerDate, modifiers, e) => {\n        const { min, max } = props;\n        const newRange = triggerDate\n            ? addToRange(triggerDate, selected, min, max, required, dateLib)\n            : undefined;\n        if (excludeDisabled && disabled && newRange?.from && newRange.to) {\n            if (rangeContainsModifiers({ from: newRange.from, to: newRange.to }, disabled, dateLib)) {\n                // if a disabled days is found, the range is reset\n                newRange.from = triggerDate;\n                newRange.to = undefined;\n            }\n        }\n        if (!onSelect) {\n            setSelected(newRange);\n        }\n        onSelect?.(newRange, triggerDate, modifiers, e);\n        return newRange;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n//# sourceMappingURL=useRange.js.map","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nexport function useSingle(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (compareDate) => {\n        return selected ? isSameDay(selected, compareDate) : false;\n    };\n    const select = (triggerDate, modifiers, e) => {\n        let newDate = triggerDate;\n        if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n            // If the date is the same, clear the selection.\n            newDate = undefined;\n        }\n        if (!onSelect) {\n            setSelected(newDate);\n        }\n        if (required) {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        else {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        return newDate;\n    };\n    return {\n        selected,\n        select,\n        isSelected\n    };\n}\n//# sourceMappingURL=useSingle.js.map","import { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */\nexport function useSelection(props, dateLib) {\n    const single = useSingle(props, dateLib);\n    const multi = useMulti(props, dateLib);\n    const range = useRange(props, dateLib);\n    switch (props.mode) {\n        case \"single\":\n            return single;\n        case \"multiple\":\n            return multi;\n        case \"range\":\n            return range;\n        default:\n            return undefined;\n    }\n}\n//# sourceMappingURL=useSelection.js.map","import React, { useCallback, useMemo, useRef } from \"react\";\nimport { TZDate } from \"@date-fns/tz\";\nimport { UI, DayFlag, SelectionState } from \"./UI.js\";\nimport { DateLib, defaultLocale } from \"./classes/DateLib.js\";\nimport { createGetModifiers } from \"./helpers/createGetModifiers.js\";\nimport { getClassNamesForModifiers } from \"./helpers/getClassNamesForModifiers.js\";\nimport { getComponents } from \"./helpers/getComponents.js\";\nimport { getDataAttributes } from \"./helpers/getDataAttributes.js\";\nimport { getDefaultClassNames } from \"./helpers/getDefaultClassNames.js\";\nimport { getFormatters } from \"./helpers/getFormatters.js\";\nimport { getMonthOptions } from \"./helpers/getMonthOptions.js\";\nimport { getStyleForModifiers } from \"./helpers/getStyleForModifiers.js\";\nimport { getWeekdays } from \"./helpers/getWeekdays.js\";\nimport { getYearOptions } from \"./helpers/getYearOptions.js\";\nimport * as defaultLabels from \"./labels/index.js\";\nimport { useAnimation } from \"./useAnimation.js\";\nimport { useCalendar } from \"./useCalendar.js\";\nimport { dayPickerContext } from \"./useDayPicker.js\";\nimport { useFocus } from \"./useFocus.js\";\nimport { useSelection } from \"./useSelection.js\";\nimport { rangeIncludesDate } from \"./utils/rangeIncludesDate.js\";\nimport { isDateRange } from \"./utils/typeguards.js\";\n/**\n * Renders the DayPicker calendar component.\n *\n * @param initialProps - The props for the DayPicker component.\n * @returns The rendered DayPicker component.\n * @group DayPicker\n * @see https://daypicker.dev\n */\nexport function DayPicker(initialProps) {\n    let props = initialProps;\n    if (props.timeZone) {\n        props = {\n            ...initialProps\n        };\n        if (props.today) {\n            props.today = new TZDate(props.today, props.timeZone);\n        }\n        if (props.month) {\n            props.month = new TZDate(props.month, props.timeZone);\n        }\n        if (props.defaultMonth) {\n            props.defaultMonth = new TZDate(props.defaultMonth, props.timeZone);\n        }\n        if (props.startMonth) {\n            props.startMonth = new TZDate(props.startMonth, props.timeZone);\n        }\n        if (props.endMonth) {\n            props.endMonth = new TZDate(props.endMonth, props.timeZone);\n        }\n        if (props.mode === \"single\" && props.selected) {\n            props.selected = new TZDate(props.selected, props.timeZone);\n        }\n        else if (props.mode === \"multiple\" && props.selected) {\n            props.selected = props.selected?.map((date) => new TZDate(date, props.timeZone));\n        }\n        else if (props.mode === \"range\" && props.selected) {\n            props.selected = {\n                from: props.selected.from\n                    ? new TZDate(props.selected.from, props.timeZone)\n                    : undefined,\n                to: props.selected.to\n                    ? new TZDate(props.selected.to, props.timeZone)\n                    : undefined\n            };\n        }\n    }\n    const { components, formatters, labels, dateLib, locale, classNames } = useMemo(() => {\n        const locale = { ...defaultLocale, ...props.locale };\n        const dateLib = new DateLib({\n            locale,\n            weekStartsOn: props.broadcastCalendar ? 1 : props.weekStartsOn,\n            firstWeekContainsDate: props.firstWeekContainsDate,\n            useAdditionalWeekYearTokens: props.useAdditionalWeekYearTokens,\n            useAdditionalDayOfYearTokens: props.useAdditionalDayOfYearTokens,\n            timeZone: props.timeZone,\n            numerals: props.numerals\n        }, props.dateLib);\n        return {\n            dateLib,\n            components: getComponents(props.components),\n            formatters: getFormatters(props.formatters),\n            labels: { ...defaultLabels, ...props.labels },\n            locale,\n            classNames: { ...getDefaultClassNames(), ...props.classNames }\n        };\n    }, [\n        props.locale,\n        props.broadcastCalendar,\n        props.weekStartsOn,\n        props.firstWeekContainsDate,\n        props.useAdditionalWeekYearTokens,\n        props.useAdditionalDayOfYearTokens,\n        props.timeZone,\n        props.numerals,\n        props.dateLib,\n        props.components,\n        props.formatters,\n        props.labels,\n        props.classNames\n    ]);\n    const { captionLayout, mode, navLayout, numberOfMonths = 1, onDayBlur, onDayClick, onDayFocus, onDayKeyDown, onDayMouseEnter, onDayMouseLeave, onNextClick, onPrevClick, showWeekNumber, styles } = props;\n    const { formatCaption, formatDay, formatMonthDropdown, formatWeekNumber, formatWeekNumberHeader, formatWeekdayName, formatYearDropdown } = formatters;\n    const calendar = useCalendar(props, dateLib);\n    const { days, months, navStart, navEnd, previousMonth, nextMonth, goToMonth } = calendar;\n    const getModifiers = createGetModifiers(days, props, dateLib);\n    const { isSelected, select, selected: selectedValue } = useSelection(props, dateLib) ?? {};\n    const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(props, calendar, getModifiers, isSelected ?? (() => false), dateLib);\n    const { labelDayButton, labelGridcell, labelGrid, labelMonthDropdown, labelNav, labelPrevious, labelNext, labelWeekday, labelWeekNumber, labelWeekNumberHeader, labelYearDropdown } = labels;\n    const weekdays = useMemo(() => getWeekdays(dateLib, props.ISOWeek), [dateLib, props.ISOWeek]);\n    const isInteractive = mode !== undefined || onDayClick !== undefined;\n    const handlePreviousClick = useCallback(() => {\n        if (!previousMonth)\n            return;\n        goToMonth(previousMonth);\n        onPrevClick?.(previousMonth);\n    }, [previousMonth, goToMonth, onPrevClick]);\n    const handleNextClick = useCallback(() => {\n        if (!nextMonth)\n            return;\n        goToMonth(nextMonth);\n        onNextClick?.(nextMonth);\n    }, [goToMonth, nextMonth, onNextClick]);\n    const handleDayClick = useCallback((day, m) => (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setFocused(day);\n        select?.(day.date, m, e);\n        onDayClick?.(day.date, m, e);\n    }, [select, onDayClick, setFocused]);\n    const handleDayFocus = useCallback((day, m) => (e) => {\n        setFocused(day);\n        onDayFocus?.(day.date, m, e);\n    }, [onDayFocus, setFocused]);\n    const handleDayBlur = useCallback((day, m) => (e) => {\n        blur();\n        onDayBlur?.(day.date, m, e);\n    }, [blur, onDayBlur]);\n    const handleDayKeyDown = useCallback((day, modifiers) => (e) => {\n        const keyMap = {\n            ArrowLeft: [\"day\", props.dir === \"rtl\" ? \"after\" : \"before\"],\n            ArrowRight: [\"day\", props.dir === \"rtl\" ? \"before\" : \"after\"],\n            ArrowDown: [\"week\", \"after\"],\n            ArrowUp: [\"week\", \"before\"],\n            PageUp: [e.shiftKey ? \"year\" : \"month\", \"before\"],\n            PageDown: [e.shiftKey ? \"year\" : \"month\", \"after\"],\n            Home: [\"startOfWeek\", \"before\"],\n            End: [\"endOfWeek\", \"after\"]\n        };\n        if (keyMap[e.key]) {\n            e.preventDefault();\n            e.stopPropagation();\n            const [moveBy, moveDir] = keyMap[e.key];\n            moveFocus(moveBy, moveDir);\n        }\n        onDayKeyDown?.(day.date, modifiers, e);\n    }, [moveFocus, onDayKeyDown, props.dir]);\n    const handleDayMouseEnter = useCallback((day, modifiers) => (e) => {\n        onDayMouseEnter?.(day.date, modifiers, e);\n    }, [onDayMouseEnter]);\n    const handleDayMouseLeave = useCallback((day, modifiers) => (e) => {\n        onDayMouseLeave?.(day.date, modifiers, e);\n    }, [onDayMouseLeave]);\n    const handleMonthChange = useCallback((date) => (e) => {\n        const selectedMonth = Number(e.target.value);\n        const month = dateLib.setMonth(dateLib.startOfMonth(date), selectedMonth);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const handleYearChange = useCallback((date) => (e) => {\n        const selectedYear = Number(e.target.value);\n        const month = dateLib.setYear(dateLib.startOfMonth(date), selectedYear);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const { className, style } = useMemo(() => ({\n        className: [classNames[UI.Root], props.className]\n            .filter(Boolean)\n            .join(\" \"),\n        style: { ...styles?.[UI.Root], ...props.style }\n    }), [classNames, props.className, props.style, styles]);\n    const dataAttributes = getDataAttributes(props);\n    const rootElRef = useRef(null);\n    useAnimation(rootElRef, Boolean(props.animate), {\n        classNames,\n        months,\n        focused,\n        dateLib\n    });\n    const contextValue = {\n        dayPickerProps: props,\n        selected: selectedValue,\n        select: select,\n        isSelected,\n        months,\n        nextMonth,\n        previousMonth,\n        goToMonth,\n        getModifiers,\n        components,\n        classNames,\n        styles,\n        labels,\n        formatters\n    };\n    return (React.createElement(dayPickerContext.Provider, { value: contextValue },\n        React.createElement(components.Root, { rootRef: props.animate ? rootElRef : undefined, className: className, style: style, dir: props.dir, id: props.id, lang: props.lang, nonce: props.nonce, title: props.title, role: props.role, \"aria-label\": props[\"aria-label\"], ...dataAttributes },\n            React.createElement(components.Months, { className: classNames[UI.Months], style: styles?.[UI.Months] },\n                !props.hideNavigation && !navLayout && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                months.map((calendarMonth, displayIndex) => {\n                    const dropdownMonths = getMonthOptions(calendarMonth.date, navStart, navEnd, formatters, dateLib);\n                    const dropdownYears = getYearOptions(navStart, navEnd, formatters, dateLib);\n                    return (React.createElement(components.Month, { \"data-animated-month\": props.animate ? \"true\" : undefined, className: classNames[UI.Month], style: styles?.[UI.Month], key: displayIndex, displayIndex: displayIndex, calendarMonth: calendarMonth },\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === 0 && (React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"right\" : \"left\" }))),\n                        React.createElement(components.MonthCaption, { \"data-animated-caption\": props.animate ? \"true\" : undefined, className: classNames[UI.MonthCaption], style: styles?.[UI.MonthCaption], calendarMonth: calendarMonth, displayIndex: displayIndex }, captionLayout?.startsWith(\"dropdown\") ? (React.createElement(components.DropdownNav, { className: classNames[UI.Dropdowns], style: styles?.[UI.Dropdowns] },\n                            captionLayout === \"dropdown\" ||\n                                captionLayout === \"dropdown-months\" ? (React.createElement(components.MonthsDropdown, { className: classNames[UI.MonthsDropdown], \"aria-label\": labelMonthDropdown(), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleMonthChange(calendarMonth.date), options: dropdownMonths, style: styles?.[UI.Dropdown], value: dateLib.getMonth(calendarMonth.date) })) : (React.createElement(\"span\", null, formatMonthDropdown(calendarMonth.date, dateLib))),\n                            captionLayout === \"dropdown\" ||\n                                captionLayout === \"dropdown-years\" ? (React.createElement(components.YearsDropdown, { className: classNames[UI.YearsDropdown], \"aria-label\": labelYearDropdown(dateLib.options), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleYearChange(calendarMonth.date), options: dropdownYears, style: styles?.[UI.Dropdown], value: dateLib.getYear(calendarMonth.date) })) : (React.createElement(\"span\", null, formatYearDropdown(calendarMonth.date, dateLib))),\n                            React.createElement(\"span\", { role: \"status\", \"aria-live\": \"polite\", style: {\n                                    border: 0,\n                                    clip: \"rect(0 0 0 0)\",\n                                    height: \"1px\",\n                                    margin: \"-1px\",\n                                    overflow: \"hidden\",\n                                    padding: 0,\n                                    position: \"absolute\",\n                                    width: \"1px\",\n                                    whiteSpace: \"nowrap\",\n                                    wordWrap: \"normal\"\n                                } }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))) : (React.createElement(components.CaptionLabel, { className: classNames[UI.CaptionLabel], role: \"status\", \"aria-live\": \"polite\" }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))),\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === numberOfMonths - 1 && (React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"left\" : \"right\" }))),\n                        displayIndex === numberOfMonths - 1 &&\n                            navLayout === \"after\" &&\n                            !props.hideNavigation && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                        React.createElement(components.MonthGrid, { role: \"grid\", \"aria-multiselectable\": mode === \"multiple\" || mode === \"range\", \"aria-label\": labelGrid(calendarMonth.date, dateLib.options, dateLib) ||\n                                undefined, className: classNames[UI.MonthGrid], style: styles?.[UI.MonthGrid] },\n                            !props.hideWeekdays && (React.createElement(components.Weekdays, { \"data-animated-weekdays\": props.animate ? \"true\" : undefined, className: classNames[UI.Weekdays], style: styles?.[UI.Weekdays] },\n                                showWeekNumber && (React.createElement(components.WeekNumberHeader, { \"aria-label\": labelWeekNumberHeader(dateLib.options), className: classNames[UI.WeekNumberHeader], style: styles?.[UI.WeekNumberHeader], scope: \"col\" }, formatWeekNumberHeader())),\n                                weekdays.map((weekday, i) => (React.createElement(components.Weekday, { \"aria-label\": labelWeekday(weekday, dateLib.options, dateLib), className: classNames[UI.Weekday], key: i, style: styles?.[UI.Weekday], scope: \"col\" }, formatWeekdayName(weekday, dateLib.options, dateLib)))))),\n                            React.createElement(components.Weeks, { \"data-animated-weeks\": props.animate ? \"true\" : undefined, className: classNames[UI.Weeks], style: styles?.[UI.Weeks] }, calendarMonth.weeks.map((week, weekIndex) => {\n                                return (React.createElement(components.Week, { className: classNames[UI.Week], key: week.weekNumber, style: styles?.[UI.Week], week: week },\n                                    showWeekNumber && (React.createElement(components.WeekNumber, { week: week, style: styles?.[UI.WeekNumber], \"aria-label\": labelWeekNumber(week.weekNumber, {\n                                            locale\n                                        }), className: classNames[UI.WeekNumber], scope: \"row\", role: \"rowheader\" }, formatWeekNumber(week.weekNumber, dateLib))),\n                                    week.days.map((day) => {\n                                        const { date } = day;\n                                        const modifiers = getModifiers(day);\n                                        modifiers[DayFlag.focused] =\n                                            !modifiers.hidden &&\n                                                Boolean(focused?.isEqualTo(day));\n                                        modifiers[SelectionState.selected] =\n                                            isSelected?.(date) || modifiers.selected;\n                                        if (isDateRange(selectedValue)) {\n                                            // add range modifiers\n                                            const { from, to } = selectedValue;\n                                            modifiers[SelectionState.range_start] = Boolean(from && to && dateLib.isSameDay(date, from));\n                                            modifiers[SelectionState.range_end] = Boolean(from && to && dateLib.isSameDay(date, to));\n                                            modifiers[SelectionState.range_middle] =\n                                                rangeIncludesDate(selectedValue, date, true, dateLib);\n                                        }\n                                        const style = getStyleForModifiers(modifiers, styles, props.modifiersStyles);\n                                        const className = getClassNamesForModifiers(modifiers, classNames, props.modifiersClassNames);\n                                        const ariaLabel = !isInteractive && !modifiers.hidden\n                                            ? labelGridcell(date, modifiers, dateLib.options, dateLib)\n                                            : undefined;\n                                        return (React.createElement(components.Day, { key: `${dateLib.format(date, \"yyyy-MM-dd\")}_${dateLib.format(day.displayMonth, \"yyyy-MM\")}`, day: day, modifiers: modifiers, className: className.join(\" \"), style: style, role: \"gridcell\", \"aria-selected\": modifiers.selected || undefined, \"aria-label\": ariaLabel, \"data-day\": dateLib.format(date, \"yyyy-MM-dd\"), \"data-month\": day.outside\n                                                ? dateLib.format(date, \"yyyy-MM\")\n                                                : undefined, \"data-selected\": modifiers.selected || undefined, \"data-disabled\": modifiers.disabled || undefined, \"data-hidden\": modifiers.hidden || undefined, \"data-outside\": day.outside || undefined, \"data-focused\": modifiers.focused || undefined, \"data-today\": modifiers.today || undefined }, !modifiers.hidden && isInteractive ? (React.createElement(components.DayButton, { className: classNames[UI.DayButton], style: styles?.[UI.DayButton], type: \"button\", day: day, modifiers: modifiers, disabled: modifiers.disabled || undefined, tabIndex: isFocusTarget(day) ? 0 : -1, \"aria-label\": labelDayButton(date, modifiers, dateLib.options, dateLib), onClick: handleDayClick(day, modifiers), onBlur: handleDayBlur(day, modifiers), onFocus: handleDayFocus(day, modifiers), onKeyDown: handleDayKeyDown(day, modifiers), onMouseEnter: handleDayMouseEnter(day, modifiers), onMouseLeave: handleDayMouseLeave(day, modifiers) }, formatDay(date, dateLib.options, dateLib))) : (!modifiers.hidden &&\n                                            formatDay(day.date, dateLib.options, dateLib))));\n                                    })));\n                            })))));\n                })),\n            props.footer && (React.createElement(components.Footer, { className: classNames[UI.Footer], style: styles?.[UI.Footer], role: \"status\", \"aria-live\": \"polite\" }, props.footer)))));\n}\n//# sourceMappingURL=DayPicker.js.map","import * as React from \"react\"\nimport {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"lucide-react\"\nimport { DayButton, DayPicker, getDefaultClassNames } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  captionLayout = \"label\",\n  buttonVariant = \"ghost\",\n  formatters,\n  components,\n  ...props\n}: React.ComponentProps<typeof DayPicker> & {\n  buttonVariant?: React.ComponentProps<typeof Button>[\"variant\"]\n}) {\n  const defaultClassNames = getDefaultClassNames()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\n        \"bg-background group/calendar p-3 [--cell-size:--spacing(8)] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent\",\n        String.raw`rtl:**:[.rdp-button\\_next>svg]:rotate-180`,\n        String.raw`rtl:**:[.rdp-button\\_previous>svg]:rotate-180`,\n        className\n      )}\n      captionLayout={captionLayout}\n      formatters={{\n        formatMonthDropdown: (date) =>\n          date.toLocaleString(\"default\", { month: \"short\" }),\n        ...formatters,\n      }}\n      classNames={{\n        root: cn(\"w-fit\", defaultClassNames.root),\n        months: cn(\n          \"flex gap-4 flex-col md:flex-row relative\",\n          defaultClassNames.months\n        ),\n        month: cn(\"flex flex-col w-full gap-4\", defaultClassNames.month),\n        nav: cn(\n          \"flex items-center gap-1 w-full absolute top-0 inset-x-0 justify-between\",\n          defaultClassNames.nav\n        ),\n        button_previous: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none\",\n          defaultClassNames.button_previous\n        ),\n        button_next: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"size-(--cell-size) aria-disabled:opacity-50 p-0 select-none\",\n          defaultClassNames.button_next\n        ),\n        month_caption: cn(\n          \"flex items-center justify-center h-(--cell-size) w-full px-(--cell-size)\",\n          defaultClassNames.month_caption\n        ),\n        dropdowns: cn(\n          \"w-full flex items-center text-sm font-medium justify-center h-(--cell-size) gap-1.5\",\n          defaultClassNames.dropdowns\n        ),\n        dropdown_root: cn(\n          \"relative has-focus:border-ring border border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] rounded-md\",\n          defaultClassNames.dropdown_root\n        ),\n        dropdown: cn(\"absolute inset-0 opacity-0\", defaultClassNames.dropdown),\n        caption_label: cn(\n          \"select-none font-medium\",\n          captionLayout === \"label\"\n            ? \"text-sm\"\n            : \"rounded-md pl-2 pr-1 flex items-center gap-1 text-sm h-8 [&>svg]:text-muted-foreground [&>svg]:size-3.5\",\n          defaultClassNames.caption_label\n        ),\n        table: \"w-full border-collapse\",\n        weekdays: cn(\"flex\", defaultClassNames.weekdays),\n        weekday: cn(\n          \"text-muted-foreground rounded-md flex-1 font-normal text-[0.8rem] select-none\",\n          defaultClassNames.weekday\n        ),\n        week: cn(\"flex w-full mt-2\", defaultClassNames.week),\n        week_number_header: cn(\n          \"select-none w-(--cell-size)\",\n          defaultClassNames.week_number_header\n        ),\n        week_number: cn(\n          \"text-[0.8rem] select-none text-muted-foreground\",\n          defaultClassNames.week_number\n        ),\n        day: cn(\n          \"relative w-full h-full p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md group/day aspect-square select-none\",\n          defaultClassNames.day\n        ),\n        range_start: cn(\n          \"rounded-l-md bg-accent\",\n          defaultClassNames.range_start\n        ),\n        range_middle: cn(\"rounded-none\", defaultClassNames.range_middle),\n        range_end: cn(\"rounded-r-md bg-accent\", defaultClassNames.range_end),\n        today: cn(\n          \"bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none\",\n          defaultClassNames.today\n        ),\n        outside: cn(\n          \"text-muted-foreground aria-selected:text-muted-foreground\",\n          defaultClassNames.outside\n        ),\n        disabled: cn(\n          \"text-muted-foreground opacity-50\",\n          defaultClassNames.disabled\n        ),\n        hidden: cn(\"invisible\", defaultClassNames.hidden),\n        ...classNames,\n      }}\n      components={{\n        Root: ({ className, rootRef, ...props }) => {\n          return (\n            <div\n              data-slot=\"calendar\"\n              ref={rootRef}\n              className={cn(className)}\n              {...props}\n            />\n          )\n        },\n        Chevron: ({ className, orientation, ...props }) => {\n          if (orientation === \"left\") {\n            return (\n              <ChevronLeftIcon className={cn(\"size-4\", className)} {...props} />\n            )\n          }\n\n          if (orientation === \"right\") {\n            return (\n              <ChevronRightIcon\n                className={cn(\"size-4\", className)}\n                {...props}\n              />\n            )\n          }\n\n          return (\n            <ChevronDownIcon className={cn(\"size-4\", className)} {...props} />\n          )\n        },\n        DayButton: CalendarDayButton,\n        WeekNumber: ({ children, ...props }) => {\n          return (\n            <td {...props}>\n              <div className=\"flex size-(--cell-size) items-center justify-center text-center\">\n                {children}\n              </div>\n            </td>\n          )\n        },\n        ...components,\n      }}\n      {...props}\n    />\n  )\n}\n\nfunction CalendarDayButton({\n  className,\n  day,\n  modifiers,\n  ...props\n}: React.ComponentProps<typeof DayButton>) {\n  const defaultClassNames = getDefaultClassNames()\n\n  const ref = React.useRef<HTMLButtonElement>(null)\n  React.useEffect(() => {\n    if (modifiers.focused) ref.current?.focus()\n  }, [modifiers.focused])\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      size=\"icon\"\n      data-day={day.date.toLocaleDateString()}\n      data-selected-single={\n        modifiers.selected &&\n        !modifiers.range_start &&\n        !modifiers.range_end &&\n        !modifiers.range_middle\n      }\n      data-range-start={modifiers.range_start}\n      data-range-end={modifiers.range_end}\n      data-range-middle={modifiers.range_middle}\n      className={cn(\n        \"data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 dark:hover:text-accent-foreground flex aspect-square size-auto w-full min-w-(--cell-size) flex-col gap-1 leading-none font-normal group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] data-[range-end=true]:rounded-md data-[range-end=true]:rounded-r-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md data-[range-start=true]:rounded-l-md [&>span]:text-xs [&>span]:opacity-70\",\n        defaultClassNames.day,\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar, CalendarDayButton }\n"],"names":["offsetFormatCache","offsetCache","tzOffset","timeZone","date","offsetStr","calcOffset","captures","offsetRe","cacheStr","values","hours","minutes","TZDateMini","args","adjustToSystemTZ","syncToInternal","tz","time","re","method","utcMethod","syncFromInternal","offset","prevHour","systemOffset","prevHourSystemOffset","systemDSTChange","dstShift","offsetDiff","postOffset","postOffsetDiff","offsetChanged","postDiff","newOffset","offsetChange","TZDate","sign","day","month","year","tzName","locales","options","UI","DayFlag","SelectionState","Animation","millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","value","toDate","argument","context","addDays","amount","_date","addMonths","dayOfMonth","endOfDesiredMonth","daysInMonth","defaultOptions","getDefaultOptions","startOfWeek","weekStartsOn","_b","_a","_d","_c","diff","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","addWeeks","addYears","max","result","date_","min","isSameDay","dateLeft_","dateRight_","isDate","isValid","differenceInCalendarMonths","yearsDiff","monthsDiff","endOfMonth","normalizeInterval","interval","start","end","eachMonthOfInterval","reversed","endTime","step","startOfMonth","endOfYear","startOfYear","endOfWeek","endOfISOWeek","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","output","lightFormatters","signedYear","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","timestamp","delimiter","absOffset","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","_f","_e","_h","_g","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","getDaysInMonth","monthIndex","lastDayOfMonth","getMonth","getYear","isAfter","dateToCompare","isBefore","isSameMonth","isSameYear","setMonth","midMonth","setYear","FIVE_WEEKS","FOUR_WEEKS","getBroadcastWeeksInMonth","dateLib","firstDayOfMonth","firstDayOfWeek","broadcastStartDate","lastDateOfLastWeek","startOfBroadcastWeek","firstOfMonth","endOfBroadcastWeek","startDate","numberOfWeeks","DateLib","overrides","dateLeft","dateRight","formatted","numerals","digitMap","i","digit","defaultDateLib","CalendarDay","displayMonth","CalendarMonth","weeks","CalendarWeek","weekNumber","days","rangeIncludesDate","range","excludeEnds","from","to","isDateInterval","matcher","isDateRange","isDateAfterType","isDateBeforeType","isDayOfWeekType","isDatesArray","dateMatchModifiers","matchers","matchersArr","diffBefore","diffAfter","isDayBefore","isDayAfter","createGetModifiers","props","disabled","hidden","modifiers","showOutsideDays","broadcastCalendar","today","startMonth","endMonth","internalModifiersMap","customModifiersMap","isOutside","isBeforeStartMonth","isAfterEndMonth","isDisabled","isHidden","isToday","name","modifierValue","dayFlags","customModifiers","d","getClassNamesForModifiers","classNames","modifiersClassNames","active","previousValue","Button","React","CaptionLabel","Chevron","size","orientation","className","Day","tdProps","DayButton","buttonProps","ref","Dropdown","components","selectProps","cssClassSelect","selectedOption","label","DropdownNav","Footer","Month","calendarMonth","displayIndex","divProps","MonthCaption","MonthGrid","Months","dayPickerContext","createContext","useDayPicker","useContext","MonthsDropdown","Nav","onPreviousClick","onNextClick","previousMonth","nextMonth","navProps","labelPrevious","labelNext","handleNextClick","useCallback","e","handlePreviousClick","NextMonthButton","Option","PreviousMonthButton","Root","rootRef","Select","Week","trProps","Weekday","Weekdays","WeekNumber","thProps","WeekNumberHeader","Weeks","YearsDropdown","getComponents","customComponents","getDataAttributes","dataAttributes","val","getDefaultClassNames","formatCaption","formatMonthCaption","formatDay","formatMonthDropdown","formatWeekNumber","formatWeekNumberHeader","formatWeekdayName","weekday","formatYearDropdown","formatYearCaption","getFormatters","customFormatters","defaultFormatters","getMonthOptions","navStart","navEnd","getStyleForModifiers","dayModifiers","styles","modifiersStyles","style","modifier","getWeekdays","ISOWeek","getYearOptions","firstNavYear","lastNavYear","years","labelGrid","labelCaption","labelGridcell","labelDayButton","labelDay","labelNav","labelMonthDropdown","labelWeekday","labelWeekNumber","labelWeekNumberHeader","labelYearDropdown","asHtmlElement","element","queryMonthEls","queryMonthEl","queryCaptionEl","queryWeeksEl","queryNavEl","queryWeekdaysEl","useAnimation","rootElRef","enabled","months","focused","previousRootElSnapshotRef","useRef","previousMonthsRef","animatingRef","useLayoutEffect","previousMonths","isAfterPreviousMonth","captionAnimationClass","weeksAnimationClass","previousRootElSnapshot","rootElSnapshot","currentMonthElSnapshot","previousMonthElSnapshot","captionEl","weeksEl","previousMonthEls","currentMonthEls","el","navEl","currentMonthEl","previousMonthEl","cleanUp","previousWeekdaysEl","previousCaptionEl","previousWeeksEl","getDates","displayMonths","maxDate","firstMonth","lastMonth","fixedWeeks","startWeekFirstDate","endWeekLastDate","nOfDays","nOfMonths","extraDates","daysToAdd","getDays","calendarMonths","initialDays","weekDays","getDisplayMonths","firstDisplayedMonth","calendarEndMonth","numberOfMonths","getInitialMonth","defaultMonth","initialMonth","getMonths","dayPickerMonths","firstDateOfFirstWeek","monthDates","nrOfDaysWithFixedWeeks","dayPickerMonth","getNavMonths","newDate","fromYear","toYear","fromMonth","toMonth","hasYearDropdown","getNextMonth","pagedNavigation","getPreviousMonth","calendarStartMonth","getWeeks","initialWeeks","useControlledValue","defaultValue","controlledValue","uncontrolledValue","setValue","useState","useCalendar","setFirstMonth","useEffect","newInitialMonth","disableNavigation","onMonthChange","isDayInCalendar","goToMonth","newMonth","FocusTargetPriority","isFocusableDay","calculateFocusTarget","getModifiers","isSelected","lastFocused","focusTarget","foundFocusTargetPriority","getFocusableDate","moveBy","moveDir","refDate","focusableDate","getNextFocus","refDay","attempt","targetMonth","focusDay","useFocus","calendar","autoFocus","setLastFocused","focusedDay","setFocused","nextFocus","useMulti","initiallySelected","required","onSelect","internallySelected","setSelected","selected","triggerDate","newDates","addToRange","initialRange","rangeContainsDayOfWeek","dayOfWeekArr","totalDays","totalDaysLimit","rangeOverlaps","rangeLeft","rangeRight","rangeContainsModifiers","functionMatchers","useRange","excludeDisabled","newRange","useSingle","compareDate","useSelection","single","multi","DayPicker","initialProps","labels","useMemo","defaultLabels","captionLayout","mode","navLayout","onDayBlur","onDayClick","onDayFocus","onDayKeyDown","onDayMouseEnter","onDayMouseLeave","onPrevClick","showWeekNumber","select","selectedValue","blur","isFocusTarget","moveFocus","weekdays","isInteractive","handleDayClick","m","handleDayFocus","handleDayBlur","handleDayKeyDown","keyMap","handleDayMouseEnter","handleDayMouseLeave","handleMonthChange","selectedMonth","handleYearChange","selectedYear","contextValue","dropdownMonths","dropdownYears","weekIndex","ariaLabel","Calendar","buttonVariant","defaultClassNames","jsx","cn","buttonVariants","ChevronLeftIcon","ChevronRightIcon","ChevronDownIcon","CalendarDayButton","children"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153]}